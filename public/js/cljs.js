var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2173";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5230__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__5230 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5230__delegate.call(this, args);
    };
    G__5230.cljs$lang$maxFixedArity = 0;
    G__5230.cljs$lang$applyTo = function(arglist__5231) {
      var args = cljs.core.seq(arglist__5231);
      return G__5230__delegate(args);
    };
    G__5230.cljs$core$IFn$_invoke$arity$variadic = G__5230__delegate;
    return G__5230;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3431__auto__ = ty;
    if (cljs.core.truth_(and__3431__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3431__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4291__auto___5232 = len;
  var i_5233 = 0;
  while (true) {
    if (i_5233 < n__4291__auto___5232) {
      new_arr[i_5233] = arr[i_5233];
      var G__5234 = i_5233 + 1;
      i_5233 = G__5234;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5235__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__5235 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5235__delegate.call(this, array, i, idxs);
    };
    G__5235.cljs$lang$maxFixedArity = 2;
    G__5235.cljs$lang$applyTo = function(arglist__5236) {
      var array = cljs.core.first(arglist__5236);
      arglist__5236 = cljs.core.next(arglist__5236);
      var i = cljs.core.first(arglist__5236);
      var idxs = cljs.core.rest(arglist__5236);
      return G__5235__delegate(array, i, idxs);
    };
    G__5235.cljs$core$IFn$_invoke$arity$variadic = G__5235__delegate;
    return G__5235;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5237__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__5237 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5237__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5237.cljs$lang$maxFixedArity = 3;
    G__5237.cljs$lang$applyTo = function(arglist__5238) {
      var array = cljs.core.first(arglist__5238);
      arglist__5238 = cljs.core.next(arglist__5238);
      var idx = cljs.core.first(arglist__5238);
      arglist__5238 = cljs.core.next(arglist__5238);
      var idx2 = cljs.core.first(arglist__5238);
      var idxv = cljs.core.rest(arglist__5238);
      return G__5237__delegate(array, idx, idx2, idxv);
    };
    G__5237.cljs$core$IFn$_invoke$arity$variadic = G__5237__delegate;
    return G__5237;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj5240 = {};
  return obj5240;
}();
cljs.core.IFn = function() {
  var obj5242 = {};
  return obj5242;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5244 = {};
  return obj5244;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3431__auto__ = value;
    if (and__3431__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4070__auto__ = value == null ? null : value;
    return function() {
      var or__3443__auto__ = cljs.core._clone[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._clone["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5246 = {};
  return obj5246;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._count[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._count["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5248 = {};
  return obj5248;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._empty[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._empty["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5250 = {};
  return obj5250;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._conj[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._conj["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5252 = {};
  return obj5252;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._nth[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._nth["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._nth[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._nth["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5254 = {};
  return obj5254;
}();
cljs.core.ISeq = function() {
  var obj5256 = {};
  return obj5256;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._rest[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._rest["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5258 = {};
  return obj5258;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._next[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._next["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5260 = {};
  return obj5260;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._lookup[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._lookup["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._lookup[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._lookup["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5262 = {};
  return obj5262;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5264 = {};
  return obj5264;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._dissoc[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dissoc["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5266 = {};
  return obj5266;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._val[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._val["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5268 = {};
  return obj5268;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._disjoin[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._disjoin["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5270 = {};
  return obj5270;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._peek[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._peek["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._pop[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pop["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5272 = {};
  return obj5272;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_n[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5274 = {};
  return obj5274;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._deref[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._deref["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5276 = {};
  return obj5276;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5278 = {};
  return obj5278;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._meta[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._meta["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5280 = {};
  return obj5280;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._with_meta[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._with_meta["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5282 = {};
  return obj5282;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._reduce[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._reduce["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._reduce[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._reduce["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5284 = {};
  return obj5284;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5286 = {};
  return obj5286;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._equiv[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._equiv["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5288 = {};
  return obj5288;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._hash[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._hash["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5290 = {};
  return obj5290;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._seq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._seq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5292 = {};
  return obj5292;
}();
cljs.core.IList = function() {
  var obj5294 = {};
  return obj5294;
}();
cljs.core.IRecord = function() {
  var obj5296 = {};
  return obj5296;
}();
cljs.core.IReversible = function() {
  var obj5298 = {};
  return obj5298;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._rseq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._rseq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5300 = {};
  return obj5300;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._entry_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._entry_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._comparator[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._comparator["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5302 = {};
  return obj5302;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3431__auto__ = writer;
    if (and__3431__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4070__auto__ = writer == null ? null : writer;
    return function() {
      var or__3443__auto__ = cljs.core._write[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._write["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3431__auto__ = writer;
    if (and__3431__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4070__auto__ = writer == null ? null : writer;
    return function() {
      var or__3443__auto__ = cljs.core._flush[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._flush["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5304 = {};
  return obj5304;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._pr_writer[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5306 = {};
  return obj5306;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3431__auto__ = d;
    if (and__3431__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4070__auto__ = d == null ? null : d;
    return function() {
      var or__3443__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5308 = {};
  return obj5308;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._notify_watches[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._add_watch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._add_watch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._remove_watch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5310 = {};
  return obj5310;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._as_transient[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._as_transient["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5312 = {};
  return obj5312;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5314 = {};
  return obj5314;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5316 = {};
  return obj5316;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5318 = {};
  return obj5318;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5320 = {};
  return obj5320;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5322 = {};
  return obj5322;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._compare[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._compare["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5324 = {};
  return obj5324;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._drop_first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._drop_first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5326 = {};
  return obj5326;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5328 = {};
  return obj5328;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_next[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5330 = {};
  return obj5330;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._name[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._name["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._namespace[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._namespace["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3431__auto__) {
        return b.ns;
      } else {
        return and__3431__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3854__auto__ = self__._hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5332 = null;
  var G__5332__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__5332__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__5332 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5332__2.call(this, self__, coll);
      case 3:
        return G__5332__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5332;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5331) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5331)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5334 = value;
  if (G__5334) {
    var bit__4093__auto__ = G__5334.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4093__auto__ || G__5334.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5334.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5334);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5334);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5336 = coll;
      if (G__5336) {
        var bit__4086__auto__ = G__5336.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4086__auto__ || G__5336.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5338 = coll;
      if (G__5338) {
        var bit__4086__auto__ = G__5338.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__5338.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5340 = coll;
      if (G__5340) {
        var bit__4086__auto__ = G__5340.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__5340.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5342 = coll;
      if (G__5342) {
        var bit__4086__auto__ = G__5342.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4086__auto__ || G__5342.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5343__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5344 = y;
            var G__5345 = cljs.core.first.call(null, more);
            var G__5346 = cljs.core.next.call(null, more);
            x = G__5344;
            y = G__5345;
            more = G__5346;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5343 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5343__delegate.call(this, x, y, more);
    };
    G__5343.cljs$lang$maxFixedArity = 2;
    G__5343.cljs$lang$applyTo = function(arglist__5347) {
      var x = cljs.core.first(arglist__5347);
      arglist__5347 = cljs.core.next(arglist__5347);
      var y = cljs.core.first(arglist__5347);
      var more = cljs.core.rest(arglist__5347);
      return G__5343__delegate(x, y, more);
    };
    G__5343.cljs$core$IFn$_invoke$arity$variadic = G__5343__delegate;
    return G__5343;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5348 = nval;
            var G__5349 = n + 1;
            val = G__5348;
            n = G__5349;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5350 = nval;
          var G__5351 = n + 1;
          val__$1 = G__5350;
          n = G__5351;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5352 = nval;
          var G__5353 = n + 1;
          val__$1 = G__5352;
          n = G__5353;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5354 = nval;
            var G__5355 = n + 1;
            val = G__5354;
            n = G__5355;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5356 = nval;
          var G__5357 = n + 1;
          val__$1 = G__5356;
          n = G__5357;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5358 = nval;
          var G__5359 = n + 1;
          val__$1 = G__5358;
          n = G__5359;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5361 = x;
  if (G__5361) {
    var bit__4093__auto__ = G__5361.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4093__auto__ || G__5361.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5361.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5361);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5361);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5363 = x;
  if (G__5363) {
    var bit__4093__auto__ = G__5363.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4093__auto__ || G__5363.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5363.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5363);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5363);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__5364 = sn;
      s = G__5364;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5365__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5366 = conj.call(null, coll, x);
          var G__5367 = cljs.core.first.call(null, xs);
          var G__5368 = cljs.core.next.call(null, xs);
          coll = G__5366;
          x = G__5367;
          xs = G__5368;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__5365 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5365__delegate.call(this, coll, x, xs);
    };
    G__5365.cljs$lang$maxFixedArity = 2;
    G__5365.cljs$lang$applyTo = function(arglist__5369) {
      var coll = cljs.core.first(arglist__5369);
      arglist__5369 = cljs.core.next(arglist__5369);
      var x = cljs.core.first(arglist__5369);
      var xs = cljs.core.rest(arglist__5369);
      return G__5365__delegate(coll, x, xs);
    };
    G__5365.cljs$core$IFn$_invoke$arity$variadic = G__5365__delegate;
    return G__5365;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__5370 = cljs.core.next.call(null, s);
      var G__5371 = acc + 1;
      s = G__5370;
      acc = G__5371;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5373 = coll;
      if (G__5373) {
        var bit__4086__auto__ = G__5373.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4086__auto__ || G__5373.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__5374 = cljs.core.next.call(null, coll);
              var G__5375 = n - 1;
              coll = G__5374;
              n = G__5375;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__5376 = cljs.core.next.call(null, coll);
              var G__5377 = n - 1;
              var G__5378 = not_found;
              coll = G__5376;
              n = G__5377;
              not_found = G__5378;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__5383 = coll;
        if (G__5383) {
          var bit__4086__auto__ = G__5383.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4086__auto__ || G__5383.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__5384 = coll;
                  if (G__5384) {
                    var bit__4093__auto__ = G__5384.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4093__auto__ || G__5384.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5384.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5384);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5384);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__5385 = coll;
        if (G__5385) {
          var bit__4086__auto__ = G__5385.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4086__auto__ || G__5385.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__5386 = coll;
                  if (G__5386) {
                    var bit__4093__auto__ = G__5386.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4093__auto__ || G__5386.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5386.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5386);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5386);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5389 = o;
        if (G__5389) {
          var bit__4086__auto__ = G__5389.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4086__auto__ || G__5389.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5390 = o;
        if (G__5390) {
          var bit__4086__auto__ = G__5390.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4086__auto__ || G__5390.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__5391__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5392 = ret;
          var G__5393 = cljs.core.first.call(null, kvs);
          var G__5394 = cljs.core.second.call(null, kvs);
          var G__5395 = cljs.core.nnext.call(null, kvs);
          coll = G__5392;
          k = G__5393;
          v = G__5394;
          kvs = G__5395;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5391 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5391__delegate.call(this, coll, k, v, kvs);
    };
    G__5391.cljs$lang$maxFixedArity = 3;
    G__5391.cljs$lang$applyTo = function(arglist__5396) {
      var coll = cljs.core.first(arglist__5396);
      arglist__5396 = cljs.core.next(arglist__5396);
      var k = cljs.core.first(arglist__5396);
      arglist__5396 = cljs.core.next(arglist__5396);
      var v = cljs.core.first(arglist__5396);
      var kvs = cljs.core.rest(arglist__5396);
      return G__5391__delegate(coll, k, v, kvs);
    };
    G__5391.cljs$core$IFn$_invoke$arity$variadic = G__5391__delegate;
    return G__5391;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__5397__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5398 = ret;
            var G__5399 = cljs.core.first.call(null, ks);
            var G__5400 = cljs.core.next.call(null, ks);
            coll = G__5398;
            k = G__5399;
            ks = G__5400;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5397 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5397__delegate.call(this, coll, k, ks);
    };
    G__5397.cljs$lang$maxFixedArity = 2;
    G__5397.cljs$lang$applyTo = function(arglist__5401) {
      var coll = cljs.core.first(arglist__5401);
      arglist__5401 = cljs.core.next(arglist__5401);
      var k = cljs.core.first(arglist__5401);
      var ks = cljs.core.rest(arglist__5401);
      return G__5397__delegate(coll, k, ks);
    };
    G__5397.cljs$core$IFn$_invoke$arity$variadic = G__5397__delegate;
    return G__5397;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3443__auto__ = goog.isFunction(f);
  if (or__3443__auto__) {
    return or__3443__auto__;
  } else {
    var G__5405 = f;
    if (G__5405) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto____$1 = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto____$1)) {
          return or__3443__auto____$1;
        } else {
          return G__5405.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__5405.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__5405);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__5405);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__5413 = o;
    if (G__5413) {
      var bit__4093__auto__ = G__5413.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4093__auto__ || G__5413.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__5413.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__5413);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__5413);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t5414 !== "undefined") {
      } else {
        cljs.core.t5414 = function(meta, o, with_meta, meta5415) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta5415 = meta5415;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t5414.cljs$lang$type = true;
        cljs.core.t5414.cljs$lang$ctorStr = "cljs.core/t5414";
        cljs.core.t5414.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/t5414");
        };
        cljs.core.t5414.prototype.call = function() {
          var G__5418__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__5418 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__5418__delegate.call(this, self__, args);
          };
          G__5418.cljs$lang$maxFixedArity = 1;
          G__5418.cljs$lang$applyTo = function(arglist__5419) {
            var self__ = cljs.core.first(arglist__5419);
            var args = cljs.core.rest(arglist__5419);
            return G__5418__delegate(self__, args);
          };
          G__5418.cljs$core$IFn$_invoke$arity$variadic = G__5418__delegate;
          return G__5418;
        }();
        cljs.core.t5414.prototype.apply = function(self__, args5417) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5417)));
        };
        cljs.core.t5414.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__5420__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__5420 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__5420__delegate.call(this, args);
          };
          G__5420.cljs$lang$maxFixedArity = 0;
          G__5420.cljs$lang$applyTo = function(arglist__5421) {
            var args = cljs.core.seq(arglist__5421);
            return G__5420__delegate(args);
          };
          G__5420.cljs$core$IFn$_invoke$arity$variadic = G__5420__delegate;
          return G__5420;
        }();
        cljs.core.t5414.prototype.cljs$core$Fn$ = true;
        cljs.core.t5414.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5416) {
          var self__ = this;
          var _5416__$1 = this;
          return self__.meta5415;
        };
        cljs.core.t5414.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5416, meta5415__$1) {
          var self__ = this;
          var _5416__$1 = this;
          return new cljs.core.t5414(self__.meta, self__.o, self__.with_meta, meta5415__$1);
        };
        cljs.core.__GT_t5414 = function __GT_t5414(meta__$1, o__$1, with_meta__$1, meta5415) {
          return new cljs.core.t5414(meta__$1, o__$1, with_meta__$1, meta5415);
        };
      }
      return new cljs.core.t5414(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3431__auto__ = !(o == null);
    if (and__3431__auto__) {
      var G__5425 = o;
      if (G__5425) {
        var bit__4093__auto__ = G__5425.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4093__auto__ || G__5425.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__5425.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__5425);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__5425);
      }
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__5426__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5427 = ret;
            var G__5428 = cljs.core.first.call(null, ks);
            var G__5429 = cljs.core.next.call(null, ks);
            coll = G__5427;
            k = G__5428;
            ks = G__5429;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5426 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5426__delegate.call(this, coll, k, ks);
    };
    G__5426.cljs$lang$maxFixedArity = 2;
    G__5426.cljs$lang$applyTo = function(arglist__5430) {
      var coll = cljs.core.first(arglist__5430);
      arglist__5430 = cljs.core.next(arglist__5430);
      var k = cljs.core.first(arglist__5430);
      var ks = cljs.core.rest(arglist__5430);
      return G__5426__delegate(coll, k, ks);
    };
    G__5426.cljs$core$IFn$_invoke$arity$variadic = G__5426__delegate;
    return G__5426;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj5432 = {};
  return obj5432;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5436 = {};
      return obj5436;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5438 = o;
    if (G__5438) {
      var bit__4086__auto__ = G__5438.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4086__auto__ || G__5438.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5440 = x;
    if (G__5440) {
      var bit__4093__auto__ = G__5440.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4093__auto__ || G__5440.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__5440.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__5440);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__5440);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5442 = x;
    if (G__5442) {
      var bit__4093__auto__ = G__5442.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4093__auto__ || G__5442.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__5442.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__5442);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__5442);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__5444 = x;
  if (G__5444) {
    var bit__4093__auto__ = G__5444.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4093__auto__ || G__5444.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__5444.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__5444);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__5444);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__5446 = x;
  if (G__5446) {
    var bit__4093__auto__ = G__5446.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4093__auto__ || G__5446.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__5446.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__5446);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__5446);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__5448 = x;
  if (G__5448) {
    var bit__4093__auto__ = G__5448.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4093__auto__ || G__5448.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__5448.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__5448);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__5448);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__5450 = x;
  if (G__5450) {
    var bit__4093__auto__ = G__5450.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4093__auto__ || G__5450.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__5450.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__5450);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__5450);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5452 = x;
    if (G__5452) {
      var bit__4093__auto__ = G__5452.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4093__auto__ || G__5452.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__5452.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__5452);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__5452);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__5454 = x;
  if (G__5454) {
    var bit__4093__auto__ = G__5454.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4093__auto__ || G__5454.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__5454.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__5454);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__5454);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__5456 = x;
  if (G__5456) {
    var bit__4086__auto__ = G__5456.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4086__auto__ || G__5456.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj5460 = {};
    return obj5460;
  };
  var js_obj__1 = function() {
    var G__5461__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__5461 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5461__delegate.call(this, keyvals);
    };
    G__5461.cljs$lang$maxFixedArity = 0;
    G__5461.cljs$lang$applyTo = function(arglist__5462) {
      var keyvals = cljs.core.seq(arglist__5462);
      return G__5461__delegate(keyvals);
    };
    G__5461.cljs$core$IFn$_invoke$arity$variadic = G__5461__delegate;
    return G__5461;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__5463 = i__$1 + 1;
      var G__5464 = j__$1 + 1;
      var G__5465 = len__$1 - 1;
      i__$1 = G__5463;
      j__$1 = G__5464;
      len__$1 = G__5465;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__5466 = i__$1 - 1;
      var G__5467 = j__$1 - 1;
      var G__5468 = len__$1 - 1;
      i__$1 = G__5466;
      j__$1 = G__5467;
      len__$1 = G__5468;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj5470 = {};
  return obj5470;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__5472 = s;
    if (G__5472) {
      var bit__4093__auto__ = G__5472.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4093__auto__ || G__5472.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__5472.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5472);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5472);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__5474 = s;
  if (G__5474) {
    var bit__4093__auto__ = G__5474.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4093__auto__ || G__5474.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__5474.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5474);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5474);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3443__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3443__auto__) {
    return or__3443__auto__;
  } else {
    var G__5478 = f;
    if (G__5478) {
      var bit__4093__auto__ = G__5478.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4093__auto__ || G__5478.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__5478.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__5478);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__5478);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__5479__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__5480 = cljs.core.conj.call(null, s, x__$1);
              var G__5481 = etc;
              s = G__5480;
              xs = G__5481;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__5479 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5479__delegate.call(this, x, y, more);
    };
    G__5479.cljs$lang$maxFixedArity = 2;
    G__5479.cljs$lang$applyTo = function(arglist__5482) {
      var x = cljs.core.first(arglist__5482);
      arglist__5482 = cljs.core.next(arglist__5482);
      var y = cljs.core.first(arglist__5482);
      var more = cljs.core.rest(arglist__5482);
      return G__5479__delegate(x, y, more);
    };
    G__5479.cljs$core$IFn$_invoke$arity$variadic = G__5479__delegate;
    return G__5479;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3443__auto__ = cljs.core.seq.call(null, coll);
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__5484 = x;
            if (G__5484) {
              var bit__4086__auto__ = G__5484.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4086__auto__ || G__5484.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__5485 = xs;
        var G__5486 = ys;
        var G__5487 = len;
        var G__5488 = n + 1;
        xs = G__5485;
        ys = G__5486;
        len = G__5487;
        n = G__5488;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5489 = nval;
          var G__5490 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__5489;
          coll__$1 = G__5490;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__5493 = coll;
      if (G__5493) {
        var bit__4086__auto__ = G__5493.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4086__auto__ || G__5493.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__5494 = coll;
      if (G__5494) {
        var bit__4086__auto__ = G__5494.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4086__auto__ || G__5494.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__5495__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__5495 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5495__delegate.call(this, x, y, more);
    };
    G__5495.cljs$lang$maxFixedArity = 2;
    G__5495.cljs$lang$applyTo = function(arglist__5496) {
      var x = cljs.core.first(arglist__5496);
      arglist__5496 = cljs.core.next(arglist__5496);
      var y = cljs.core.first(arglist__5496);
      var more = cljs.core.rest(arglist__5496);
      return G__5495__delegate(x, y, more);
    };
    G__5495.cljs$core$IFn$_invoke$arity$variadic = G__5495__delegate;
    return G__5495;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__5497__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__5497 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5497__delegate.call(this, x, y, more);
    };
    G__5497.cljs$lang$maxFixedArity = 2;
    G__5497.cljs$lang$applyTo = function(arglist__5498) {
      var x = cljs.core.first(arglist__5498);
      arglist__5498 = cljs.core.next(arglist__5498);
      var y = cljs.core.first(arglist__5498);
      var more = cljs.core.rest(arglist__5498);
      return G__5497__delegate(x, y, more);
    };
    G__5497.cljs$core$IFn$_invoke$arity$variadic = G__5497__delegate;
    return G__5497;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__5499__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__5499 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5499__delegate.call(this, x, y, more);
    };
    G__5499.cljs$lang$maxFixedArity = 2;
    G__5499.cljs$lang$applyTo = function(arglist__5500) {
      var x = cljs.core.first(arglist__5500);
      arglist__5500 = cljs.core.next(arglist__5500);
      var y = cljs.core.first(arglist__5500);
      var more = cljs.core.rest(arglist__5500);
      return G__5499__delegate(x, y, more);
    };
    G__5499.cljs$core$IFn$_invoke$arity$variadic = G__5499__delegate;
    return G__5499;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__5501__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__5501 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5501__delegate.call(this, x, y, more);
    };
    G__5501.cljs$lang$maxFixedArity = 2;
    G__5501.cljs$lang$applyTo = function(arglist__5502) {
      var x = cljs.core.first(arglist__5502);
      arglist__5502 = cljs.core.next(arglist__5502);
      var y = cljs.core.first(arglist__5502);
      var more = cljs.core.rest(arglist__5502);
      return G__5501__delegate(x, y, more);
    };
    G__5501.cljs$core$IFn$_invoke$arity$variadic = G__5501__delegate;
    return G__5501;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__5503__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__5504 = y;
            var G__5505 = cljs.core.first.call(null, more);
            var G__5506 = cljs.core.next.call(null, more);
            x = G__5504;
            y = G__5505;
            more = G__5506;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5503 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5503__delegate.call(this, x, y, more);
    };
    G__5503.cljs$lang$maxFixedArity = 2;
    G__5503.cljs$lang$applyTo = function(arglist__5507) {
      var x = cljs.core.first(arglist__5507);
      arglist__5507 = cljs.core.next(arglist__5507);
      var y = cljs.core.first(arglist__5507);
      var more = cljs.core.rest(arglist__5507);
      return G__5503__delegate(x, y, more);
    };
    G__5503.cljs$core$IFn$_invoke$arity$variadic = G__5503__delegate;
    return G__5503;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__5508__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__5509 = y;
            var G__5510 = cljs.core.first.call(null, more);
            var G__5511 = cljs.core.next.call(null, more);
            x = G__5509;
            y = G__5510;
            more = G__5511;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5508 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5508__delegate.call(this, x, y, more);
    };
    G__5508.cljs$lang$maxFixedArity = 2;
    G__5508.cljs$lang$applyTo = function(arglist__5512) {
      var x = cljs.core.first(arglist__5512);
      arglist__5512 = cljs.core.next(arglist__5512);
      var y = cljs.core.first(arglist__5512);
      var more = cljs.core.rest(arglist__5512);
      return G__5508__delegate(x, y, more);
    };
    G__5508.cljs$core$IFn$_invoke$arity$variadic = G__5508__delegate;
    return G__5508;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__5513__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__5514 = y;
            var G__5515 = cljs.core.first.call(null, more);
            var G__5516 = cljs.core.next.call(null, more);
            x = G__5514;
            y = G__5515;
            more = G__5516;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5513 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5513__delegate.call(this, x, y, more);
    };
    G__5513.cljs$lang$maxFixedArity = 2;
    G__5513.cljs$lang$applyTo = function(arglist__5517) {
      var x = cljs.core.first(arglist__5517);
      arglist__5517 = cljs.core.next(arglist__5517);
      var y = cljs.core.first(arglist__5517);
      var more = cljs.core.rest(arglist__5517);
      return G__5513__delegate(x, y, more);
    };
    G__5513.cljs$core$IFn$_invoke$arity$variadic = G__5513__delegate;
    return G__5513;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__5518__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__5519 = y;
            var G__5520 = cljs.core.first.call(null, more);
            var G__5521 = cljs.core.next.call(null, more);
            x = G__5519;
            y = G__5520;
            more = G__5521;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5518 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5518__delegate.call(this, x, y, more);
    };
    G__5518.cljs$lang$maxFixedArity = 2;
    G__5518.cljs$lang$applyTo = function(arglist__5522) {
      var x = cljs.core.first(arglist__5522);
      arglist__5522 = cljs.core.next(arglist__5522);
      var y = cljs.core.first(arglist__5522);
      var more = cljs.core.rest(arglist__5522);
      return G__5518__delegate(x, y, more);
    };
    G__5518.cljs$core$IFn$_invoke$arity$variadic = G__5518__delegate;
    return G__5518;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3750__auto__ = x;
    var y__3751__auto__ = y;
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  };
  var max__3 = function() {
    var G__5523__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3750__auto__ = x;
        var y__3751__auto__ = y;
        return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
      }(), more);
    };
    var G__5523 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5523__delegate.call(this, x, y, more);
    };
    G__5523.cljs$lang$maxFixedArity = 2;
    G__5523.cljs$lang$applyTo = function(arglist__5524) {
      var x = cljs.core.first(arglist__5524);
      arglist__5524 = cljs.core.next(arglist__5524);
      var y = cljs.core.first(arglist__5524);
      var more = cljs.core.rest(arglist__5524);
      return G__5523__delegate(x, y, more);
    };
    G__5523.cljs$core$IFn$_invoke$arity$variadic = G__5523__delegate;
    return G__5523;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3757__auto__ = x;
    var y__3758__auto__ = y;
    return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
  };
  var min__3 = function() {
    var G__5525__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3757__auto__ = x;
        var y__3758__auto__ = y;
        return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
      }(), more);
    };
    var G__5525 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5525__delegate.call(this, x, y, more);
    };
    G__5525.cljs$lang$maxFixedArity = 2;
    G__5525.cljs$lang$applyTo = function(arglist__5526) {
      var x = cljs.core.first(arglist__5526);
      arglist__5526 = cljs.core.next(arglist__5526);
      var y = cljs.core.first(arglist__5526);
      var more = cljs.core.rest(arglist__5526);
      return G__5525__delegate(x, y, more);
    };
    G__5525.cljs$core$IFn$_invoke$arity$variadic = G__5525__delegate;
    return G__5525;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__5527__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__5527 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5527__delegate.call(this, x, y, more);
    };
    G__5527.cljs$lang$maxFixedArity = 2;
    G__5527.cljs$lang$applyTo = function(arglist__5528) {
      var x = cljs.core.first(arglist__5528);
      arglist__5528 = cljs.core.next(arglist__5528);
      var y = cljs.core.first(arglist__5528);
      var more = cljs.core.rest(arglist__5528);
      return G__5527__delegate(x, y, more);
    };
    G__5527.cljs$core$IFn$_invoke$arity$variadic = G__5527__delegate;
    return G__5527;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__5529__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__5529 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5529__delegate.call(this, x, y, more);
    };
    G__5529.cljs$lang$maxFixedArity = 2;
    G__5529.cljs$lang$applyTo = function(arglist__5530) {
      var x = cljs.core.first(arglist__5530);
      arglist__5530 = cljs.core.next(arglist__5530);
      var y = cljs.core.first(arglist__5530);
      var more = cljs.core.rest(arglist__5530);
      return G__5529__delegate(x, y, more);
    };
    G__5529.cljs$core$IFn$_invoke$arity$variadic = G__5529__delegate;
    return G__5529;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__5531__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__5531 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5531__delegate.call(this, x, y, more);
    };
    G__5531.cljs$lang$maxFixedArity = 2;
    G__5531.cljs$lang$applyTo = function(arglist__5532) {
      var x = cljs.core.first(arglist__5532);
      arglist__5532 = cljs.core.next(arglist__5532);
      var y = cljs.core.first(arglist__5532);
      var more = cljs.core.rest(arglist__5532);
      return G__5531__delegate(x, y, more);
    };
    G__5531.cljs$core$IFn$_invoke$arity$variadic = G__5531__delegate;
    return G__5531;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__5533__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__5533 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5533__delegate.call(this, x, y, more);
    };
    G__5533.cljs$lang$maxFixedArity = 2;
    G__5533.cljs$lang$applyTo = function(arglist__5534) {
      var x = cljs.core.first(arglist__5534);
      arglist__5534 = cljs.core.next(arglist__5534);
      var y = cljs.core.first(arglist__5534);
      var more = cljs.core.rest(arglist__5534);
      return G__5533__delegate(x, y, more);
    };
    G__5533.cljs$core$IFn$_invoke$arity$variadic = G__5533__delegate;
    return G__5533;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__5535__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__5535 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5535__delegate.call(this, x, y, more);
    };
    G__5535.cljs$lang$maxFixedArity = 2;
    G__5535.cljs$lang$applyTo = function(arglist__5536) {
      var x = cljs.core.first(arglist__5536);
      arglist__5536 = cljs.core.next(arglist__5536);
      var y = cljs.core.first(arglist__5536);
      var more = cljs.core.rest(arglist__5536);
      return G__5535__delegate(x, y, more);
    };
    G__5535.cljs$core$IFn$_invoke$arity$variadic = G__5535__delegate;
    return G__5535;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__5537__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__5537 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5537__delegate.call(this, x, y, more);
    };
    G__5537.cljs$lang$maxFixedArity = 2;
    G__5537.cljs$lang$applyTo = function(arglist__5538) {
      var x = cljs.core.first(arglist__5538);
      arglist__5538 = cljs.core.next(arglist__5538);
      var y = cljs.core.first(arglist__5538);
      var more = cljs.core.rest(arglist__5538);
      return G__5537__delegate(x, y, more);
    };
    G__5537.cljs$core$IFn$_invoke$arity$variadic = G__5537__delegate;
    return G__5537;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__5539__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__5539 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5539__delegate.call(this, x, y, more);
    };
    G__5539.cljs$lang$maxFixedArity = 2;
    G__5539.cljs$lang$applyTo = function(arglist__5540) {
      var x = cljs.core.first(arglist__5540);
      arglist__5540 = cljs.core.next(arglist__5540);
      var y = cljs.core.first(arglist__5540);
      var more = cljs.core.rest(arglist__5540);
      return G__5539__delegate(x, y, more);
    };
    G__5539.cljs$core$IFn$_invoke$arity$variadic = G__5539__delegate;
    return G__5539;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__5567__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5568 = y;
            var G__5569 = cljs.core.first.call(null, more);
            var G__5570 = cljs.core.next.call(null, more);
            x = G__5568;
            y = G__5569;
            more = G__5570;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5567 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5567__delegate.call(this, x, y, more);
    };
    G__5567.cljs$lang$maxFixedArity = 2;
    G__5567.cljs$lang$applyTo = function(arglist__5571) {
      var x = cljs.core.first(arglist__5571);
      arglist__5571 = cljs.core.next(arglist__5571);
      var y = cljs.core.first(arglist__5571);
      var more = cljs.core.rest(arglist__5571);
      return G__5567__delegate(x, y, more);
    };
    G__5567.cljs$core$IFn$_invoke$arity$variadic = G__5567__delegate;
    return G__5567;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__5572 = n__$1 - 1;
      var G__5573 = cljs.core.next.call(null, xs);
      n__$1 = G__5572;
      xs = G__5573;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__5574__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__5575 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__5576 = cljs.core.next.call(null, more);
          sb = G__5575;
          more = G__5576;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__5574 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5574__delegate.call(this, x, ys);
    };
    G__5574.cljs$lang$maxFixedArity = 1;
    G__5574.cljs$lang$applyTo = function(arglist__5577) {
      var x = cljs.core.first(arglist__5577);
      var ys = cljs.core.rest(arglist__5577);
      return G__5574__delegate(x, ys);
    };
    G__5574.cljs$core$IFn$_invoke$arity$variadic = G__5574__delegate;
    return G__5574;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__5578 = cljs.core.next.call(null, xs);
            var G__5579 = cljs.core.next.call(null, ys);
            xs = G__5578;
            ys = G__5579;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__5580 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__5581 = cljs.core.next.call(null, s);
        res = G__5580;
        s = G__5581;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__5582 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__5583 = cljs.core.next.call(null, s);
      h = G__5582;
      s = G__5583;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__5584 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__5585 = cljs.core.next.call(null, s__$1);
      h = G__5584;
      s__$1 = G__5585;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__5592_5598 = cljs.core.seq.call(null, fn_map);
  var chunk__5593_5599 = null;
  var count__5594_5600 = 0;
  var i__5595_5601 = 0;
  while (true) {
    if (i__5595_5601 < count__5594_5600) {
      var vec__5596_5602 = cljs.core._nth.call(null, chunk__5593_5599, i__5595_5601);
      var key_name_5603 = cljs.core.nth.call(null, vec__5596_5602, 0, null);
      var f_5604 = cljs.core.nth.call(null, vec__5596_5602, 1, null);
      var str_name_5605 = cljs.core.name.call(null, key_name_5603);
      obj[str_name_5605] = f_5604;
      var G__5606 = seq__5592_5598;
      var G__5607 = chunk__5593_5599;
      var G__5608 = count__5594_5600;
      var G__5609 = i__5595_5601 + 1;
      seq__5592_5598 = G__5606;
      chunk__5593_5599 = G__5607;
      count__5594_5600 = G__5608;
      i__5595_5601 = G__5609;
      continue;
    } else {
      var temp__4092__auto___5610 = cljs.core.seq.call(null, seq__5592_5598);
      if (temp__4092__auto___5610) {
        var seq__5592_5611__$1 = temp__4092__auto___5610;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5592_5611__$1)) {
          var c__4191__auto___5612 = cljs.core.chunk_first.call(null, seq__5592_5611__$1);
          var G__5613 = cljs.core.chunk_rest.call(null, seq__5592_5611__$1);
          var G__5614 = c__4191__auto___5612;
          var G__5615 = cljs.core.count.call(null, c__4191__auto___5612);
          var G__5616 = 0;
          seq__5592_5598 = G__5613;
          chunk__5593_5599 = G__5614;
          count__5594_5600 = G__5615;
          i__5595_5601 = G__5616;
          continue;
        } else {
          var vec__5597_5617 = cljs.core.first.call(null, seq__5592_5611__$1);
          var key_name_5618 = cljs.core.nth.call(null, vec__5597_5617, 0, null);
          var f_5619 = cljs.core.nth.call(null, vec__5597_5617, 1, null);
          var str_name_5620 = cljs.core.name.call(null, key_name_5618);
          obj[str_name_5620] = f_5619;
          var G__5621 = cljs.core.next.call(null, seq__5592_5611__$1);
          var G__5622 = null;
          var G__5623 = 0;
          var G__5624 = 0;
          seq__5592_5598 = G__5621;
          chunk__5593_5599 = G__5622;
          count__5594_5600 = G__5623;
          i__5595_5601 = G__5624;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__5626 = coll;
  if (G__5626) {
    var bit__4093__auto__ = G__5626.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4093__auto__ || G__5626.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__5626.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__5626);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__5626);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__5627 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__5627;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__5628 = i - 1;
        var G__5629 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__5628;
        r = G__5629;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__5630) {
    var xs = cljs.core.seq(arglist__5630);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3443__auto__ = coll == null;
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      var G__5634 = coll;
      if (G__5634) {
        var bit__4086__auto__ = G__5634.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__5634.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__5636 = x;
  if (G__5636) {
    var bit__4093__auto__ = G__5636.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4093__auto__ || G__5636.cljs$core$IList$) {
      return true;
    } else {
      if (!G__5636.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__5636);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__5636);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__5638 = null;
  var G__5638__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__5638__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__5638 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5638__2.call(this, self__, coll);
      case 3:
        return G__5638__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5638;
}();
cljs.core.Keyword.prototype.apply = function(self__, args5637) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5637)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__5640 = x;
    if (G__5640) {
      var bit__4086__auto__ = G__5640.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4086__auto__ || G__5640.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__5641 = ls.sval();
        ls = G__5641;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__5643 = s;
    if (G__5643) {
      var bit__4086__auto__ = G__5643.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4086__auto__ || G__5643.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__5644 = cljs.core.next.call(null, s__$1);
      s__$1 = G__5644;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_5645 = 0;
  var xs_5646 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_5646) {
      ret[i_5645] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_5646));
      var G__5647 = i_5645 + 1;
      var G__5648 = cljs.core.next.call(null, xs_5646);
      i_5645 = G__5647;
      xs_5646 = G__5648;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5649 = i + 1;
          var G__5650 = cljs.core.next.call(null, s__$1);
          i = G__5649;
          s__$1 = G__5650;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___5651 = size;
      var i_5652 = 0;
      while (true) {
        if (i_5652 < n__4291__auto___5651) {
          a[i_5652] = init_val_or_seq;
          var G__5653 = i_5652 + 1;
          i_5652 = G__5653;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5654 = i + 1;
          var G__5655 = cljs.core.next.call(null, s__$1);
          i = G__5654;
          s__$1 = G__5655;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___5656 = size;
      var i_5657 = 0;
      while (true) {
        if (i_5657 < n__4291__auto___5656) {
          a[i_5657] = init_val_or_seq;
          var G__5658 = i_5657 + 1;
          i_5657 = G__5658;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5659 = i + 1;
          var G__5660 = cljs.core.next.call(null, s__$1);
          i = G__5659;
          s__$1 = G__5660;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___5661 = size;
      var i_5662 = 0;
      while (true) {
        if (i_5662 < n__4291__auto___5661) {
          a[i_5662] = init_val_or_seq;
          var G__5663 = i_5662 + 1;
          i_5662 = G__5663;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5664 = i + 1;
          var G__5665 = cljs.core.next.call(null, s__$1);
          i = G__5664;
          s__$1 = G__5665;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___5666 = size;
      var i_5667 = 0;
      while (true) {
        if (i_5667 < n__4291__auto___5666) {
          a[i_5667] = init_val_or_seq;
          var G__5668 = i_5667 + 1;
          i_5667 = G__5668;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__5669 = cljs.core.next.call(null, s__$1);
        var G__5670 = i - 1;
        var G__5671 = sum + 1;
        s__$1 = G__5669;
        i = G__5670;
        sum = G__5671;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__5672__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__5672 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5672__delegate.call(this, x, y, zs);
    };
    G__5672.cljs$lang$maxFixedArity = 2;
    G__5672.cljs$lang$applyTo = function(arglist__5673) {
      var x = cljs.core.first(arglist__5673);
      arglist__5673 = cljs.core.next(arglist__5673);
      var y = cljs.core.first(arglist__5673);
      var zs = cljs.core.rest(arglist__5673);
      return G__5672__delegate(x, y, zs);
    };
    G__5672.cljs$core$IFn$_invoke$arity$variadic = G__5672__delegate;
    return G__5672;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__5674__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__5674 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5674__delegate.call(this, a, b, c, d, more);
    };
    G__5674.cljs$lang$maxFixedArity = 4;
    G__5674.cljs$lang$applyTo = function(arglist__5675) {
      var a = cljs.core.first(arglist__5675);
      arglist__5675 = cljs.core.next(arglist__5675);
      var b = cljs.core.first(arglist__5675);
      arglist__5675 = cljs.core.next(arglist__5675);
      var c = cljs.core.first(arglist__5675);
      arglist__5675 = cljs.core.next(arglist__5675);
      var d = cljs.core.first(arglist__5675);
      var more = cljs.core.rest(arglist__5675);
      return G__5674__delegate(a, b, c, d, more);
    };
    G__5674.cljs$core$IFn$_invoke$arity$variadic = G__5674__delegate;
    return G__5674;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__5676__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__5677 = ntcoll;
          var G__5678 = cljs.core.first.call(null, vals);
          var G__5679 = cljs.core.next.call(null, vals);
          tcoll = G__5677;
          val = G__5678;
          vals = G__5679;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5676 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5676__delegate.call(this, tcoll, val, vals);
    };
    G__5676.cljs$lang$maxFixedArity = 2;
    G__5676.cljs$lang$applyTo = function(arglist__5680) {
      var tcoll = cljs.core.first(arglist__5680);
      arglist__5680 = cljs.core.next(arglist__5680);
      var val = cljs.core.first(arglist__5680);
      var vals = cljs.core.rest(arglist__5680);
      return G__5676__delegate(tcoll, val, vals);
    };
    G__5676.cljs$core$IFn$_invoke$arity$variadic = G__5676__delegate;
    return G__5676;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__5681__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__5682 = ntcoll;
          var G__5683 = cljs.core.first.call(null, kvs);
          var G__5684 = cljs.core.second.call(null, kvs);
          var G__5685 = cljs.core.nnext.call(null, kvs);
          tcoll = G__5682;
          key = G__5683;
          val = G__5684;
          kvs = G__5685;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5681 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5681__delegate.call(this, tcoll, key, val, kvs);
    };
    G__5681.cljs$lang$maxFixedArity = 3;
    G__5681.cljs$lang$applyTo = function(arglist__5686) {
      var tcoll = cljs.core.first(arglist__5686);
      arglist__5686 = cljs.core.next(arglist__5686);
      var key = cljs.core.first(arglist__5686);
      arglist__5686 = cljs.core.next(arglist__5686);
      var val = cljs.core.first(arglist__5686);
      var kvs = cljs.core.rest(arglist__5686);
      return G__5681__delegate(tcoll, key, val, kvs);
    };
    G__5681.cljs$core$IFn$_invoke$arity$variadic = G__5681__delegate;
    return G__5681;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__5687__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__5688 = ntcoll;
          var G__5689 = cljs.core.first.call(null, ks);
          var G__5690 = cljs.core.next.call(null, ks);
          tcoll = G__5688;
          key = G__5689;
          ks = G__5690;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5687 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5687__delegate.call(this, tcoll, key, ks);
    };
    G__5687.cljs$lang$maxFixedArity = 2;
    G__5687.cljs$lang$applyTo = function(arglist__5691) {
      var tcoll = cljs.core.first(arglist__5691);
      arglist__5691 = cljs.core.next(arglist__5691);
      var key = cljs.core.first(arglist__5691);
      var ks = cljs.core.rest(arglist__5691);
      return G__5687__delegate(tcoll, key, ks);
    };
    G__5687.cljs$core$IFn$_invoke$arity$variadic = G__5687__delegate;
    return G__5687;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__5692__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__5693 = ntcoll;
          var G__5694 = cljs.core.first.call(null, vals);
          var G__5695 = cljs.core.next.call(null, vals);
          tcoll = G__5693;
          val = G__5694;
          vals = G__5695;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5692 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5692__delegate.call(this, tcoll, val, vals);
    };
    G__5692.cljs$lang$maxFixedArity = 2;
    G__5692.cljs$lang$applyTo = function(arglist__5696) {
      var tcoll = cljs.core.first(arglist__5696);
      arglist__5696 = cljs.core.next(arglist__5696);
      var val = cljs.core.first(arglist__5696);
      var vals = cljs.core.rest(arglist__5696);
      return G__5692__delegate(tcoll, val, vals);
    };
    G__5692.cljs$core$IFn$_invoke$arity$variadic = G__5692__delegate;
    return G__5692;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__5697__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__5697 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__5697__delegate.call(this, f, a, b, c, d, args);
    };
    G__5697.cljs$lang$maxFixedArity = 5;
    G__5697.cljs$lang$applyTo = function(arglist__5698) {
      var f = cljs.core.first(arglist__5698);
      arglist__5698 = cljs.core.next(arglist__5698);
      var a = cljs.core.first(arglist__5698);
      arglist__5698 = cljs.core.next(arglist__5698);
      var b = cljs.core.first(arglist__5698);
      arglist__5698 = cljs.core.next(arglist__5698);
      var c = cljs.core.first(arglist__5698);
      arglist__5698 = cljs.core.next(arglist__5698);
      var d = cljs.core.first(arglist__5698);
      var args = cljs.core.rest(arglist__5698);
      return G__5697__delegate(f, a, b, c, d, args);
    };
    G__5697.cljs$core$IFn$_invoke$arity$variadic = G__5697__delegate;
    return G__5697;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__5699__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__5699 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5699__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__5699.cljs$lang$maxFixedArity = 6;
    G__5699.cljs$lang$applyTo = function(arglist__5700) {
      var obj = cljs.core.first(arglist__5700);
      arglist__5700 = cljs.core.next(arglist__5700);
      var f = cljs.core.first(arglist__5700);
      arglist__5700 = cljs.core.next(arglist__5700);
      var a = cljs.core.first(arglist__5700);
      arglist__5700 = cljs.core.next(arglist__5700);
      var b = cljs.core.first(arglist__5700);
      arglist__5700 = cljs.core.next(arglist__5700);
      var c = cljs.core.first(arglist__5700);
      arglist__5700 = cljs.core.next(arglist__5700);
      var d = cljs.core.first(arglist__5700);
      var args = cljs.core.rest(arglist__5700);
      return G__5699__delegate(obj, f, a, b, c, d, args);
    };
    G__5699.cljs$core$IFn$_invoke$arity$variadic = G__5699__delegate;
    return G__5699;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__5701__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__5701 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5701__delegate.call(this, x, y, more);
    };
    G__5701.cljs$lang$maxFixedArity = 2;
    G__5701.cljs$lang$applyTo = function(arglist__5702) {
      var x = cljs.core.first(arglist__5702);
      arglist__5702 = cljs.core.next(arglist__5702);
      var y = cljs.core.first(arglist__5702);
      var more = cljs.core.rest(arglist__5702);
      return G__5701__delegate(x, y, more);
    };
    G__5701.cljs$core$IFn$_invoke$arity$variadic = G__5701__delegate;
    return G__5701;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__5703 = pred;
        var G__5704 = cljs.core.next.call(null, coll);
        pred = G__5703;
        coll = G__5704;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3443__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        var G__5705 = pred;
        var G__5706 = cljs.core.next.call(null, coll);
        pred = G__5705;
        coll = G__5706;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__5707 = null;
    var G__5707__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__5707__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__5707__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__5707__3 = function() {
      var G__5708__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__5708 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__5708__delegate.call(this, x, y, zs);
      };
      G__5708.cljs$lang$maxFixedArity = 2;
      G__5708.cljs$lang$applyTo = function(arglist__5709) {
        var x = cljs.core.first(arglist__5709);
        arglist__5709 = cljs.core.next(arglist__5709);
        var y = cljs.core.first(arglist__5709);
        var zs = cljs.core.rest(arglist__5709);
        return G__5708__delegate(x, y, zs);
      };
      G__5708.cljs$core$IFn$_invoke$arity$variadic = G__5708__delegate;
      return G__5708;
    }();
    G__5707 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__5707__0.call(this);
        case 1:
          return G__5707__1.call(this, x);
        case 2:
          return G__5707__2.call(this, x, y);
        default:
          return G__5707__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__5707.cljs$lang$maxFixedArity = 2;
    G__5707.cljs$lang$applyTo = G__5707__3.cljs$lang$applyTo;
    return G__5707;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__5710__delegate = function(args) {
      return x;
    };
    var G__5710 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5710__delegate.call(this, args);
    };
    G__5710.cljs$lang$maxFixedArity = 0;
    G__5710.cljs$lang$applyTo = function(arglist__5711) {
      var args = cljs.core.seq(arglist__5711);
      return G__5710__delegate(args);
    };
    G__5710.cljs$core$IFn$_invoke$arity$variadic = G__5710__delegate;
    return G__5710;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__5712 = null;
      var G__5712__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__5712__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__5712__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__5712__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__5712__4 = function() {
        var G__5713__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__5713 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5713__delegate.call(this, x, y, z, args);
        };
        G__5713.cljs$lang$maxFixedArity = 3;
        G__5713.cljs$lang$applyTo = function(arglist__5714) {
          var x = cljs.core.first(arglist__5714);
          arglist__5714 = cljs.core.next(arglist__5714);
          var y = cljs.core.first(arglist__5714);
          arglist__5714 = cljs.core.next(arglist__5714);
          var z = cljs.core.first(arglist__5714);
          var args = cljs.core.rest(arglist__5714);
          return G__5713__delegate(x, y, z, args);
        };
        G__5713.cljs$core$IFn$_invoke$arity$variadic = G__5713__delegate;
        return G__5713;
      }();
      G__5712 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5712__0.call(this);
          case 1:
            return G__5712__1.call(this, x);
          case 2:
            return G__5712__2.call(this, x, y);
          case 3:
            return G__5712__3.call(this, x, y, z);
          default:
            return G__5712__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5712.cljs$lang$maxFixedArity = 3;
      G__5712.cljs$lang$applyTo = G__5712__4.cljs$lang$applyTo;
      return G__5712;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__5715 = null;
      var G__5715__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__5715__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__5715__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__5715__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__5715__4 = function() {
        var G__5716__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__5716 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5716__delegate.call(this, x, y, z, args);
        };
        G__5716.cljs$lang$maxFixedArity = 3;
        G__5716.cljs$lang$applyTo = function(arglist__5717) {
          var x = cljs.core.first(arglist__5717);
          arglist__5717 = cljs.core.next(arglist__5717);
          var y = cljs.core.first(arglist__5717);
          arglist__5717 = cljs.core.next(arglist__5717);
          var z = cljs.core.first(arglist__5717);
          var args = cljs.core.rest(arglist__5717);
          return G__5716__delegate(x, y, z, args);
        };
        G__5716.cljs$core$IFn$_invoke$arity$variadic = G__5716__delegate;
        return G__5716;
      }();
      G__5715 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5715__0.call(this);
          case 1:
            return G__5715__1.call(this, x);
          case 2:
            return G__5715__2.call(this, x, y);
          case 3:
            return G__5715__3.call(this, x, y, z);
          default:
            return G__5715__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5715.cljs$lang$maxFixedArity = 3;
      G__5715.cljs$lang$applyTo = G__5715__4.cljs$lang$applyTo;
      return G__5715;
    }();
  };
  var comp__4 = function() {
    var G__5718__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__5719__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__5720 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__5721 = cljs.core.next.call(null, fs__$2);
              ret = G__5720;
              fs__$2 = G__5721;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__5719 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__5719__delegate.call(this, args);
        };
        G__5719.cljs$lang$maxFixedArity = 0;
        G__5719.cljs$lang$applyTo = function(arglist__5722) {
          var args = cljs.core.seq(arglist__5722);
          return G__5719__delegate(args);
        };
        G__5719.cljs$core$IFn$_invoke$arity$variadic = G__5719__delegate;
        return G__5719;
      }();
    };
    var G__5718 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5718__delegate.call(this, f1, f2, f3, fs);
    };
    G__5718.cljs$lang$maxFixedArity = 3;
    G__5718.cljs$lang$applyTo = function(arglist__5723) {
      var f1 = cljs.core.first(arglist__5723);
      arglist__5723 = cljs.core.next(arglist__5723);
      var f2 = cljs.core.first(arglist__5723);
      arglist__5723 = cljs.core.next(arglist__5723);
      var f3 = cljs.core.first(arglist__5723);
      var fs = cljs.core.rest(arglist__5723);
      return G__5718__delegate(f1, f2, f3, fs);
    };
    G__5718.cljs$core$IFn$_invoke$arity$variadic = G__5718__delegate;
    return G__5718;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__5724__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__5724 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__5724__delegate.call(this, args);
      };
      G__5724.cljs$lang$maxFixedArity = 0;
      G__5724.cljs$lang$applyTo = function(arglist__5725) {
        var args = cljs.core.seq(arglist__5725);
        return G__5724__delegate(args);
      };
      G__5724.cljs$core$IFn$_invoke$arity$variadic = G__5724__delegate;
      return G__5724;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__5726__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__5726 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__5726__delegate.call(this, args);
      };
      G__5726.cljs$lang$maxFixedArity = 0;
      G__5726.cljs$lang$applyTo = function(arglist__5727) {
        var args = cljs.core.seq(arglist__5727);
        return G__5726__delegate(args);
      };
      G__5726.cljs$core$IFn$_invoke$arity$variadic = G__5726__delegate;
      return G__5726;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__5728__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__5728 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__5728__delegate.call(this, args);
      };
      G__5728.cljs$lang$maxFixedArity = 0;
      G__5728.cljs$lang$applyTo = function(arglist__5729) {
        var args = cljs.core.seq(arglist__5729);
        return G__5728__delegate(args);
      };
      G__5728.cljs$core$IFn$_invoke$arity$variadic = G__5728__delegate;
      return G__5728;
    }();
  };
  var partial__5 = function() {
    var G__5730__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__5731__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__5731 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__5731__delegate.call(this, args);
        };
        G__5731.cljs$lang$maxFixedArity = 0;
        G__5731.cljs$lang$applyTo = function(arglist__5732) {
          var args = cljs.core.seq(arglist__5732);
          return G__5731__delegate(args);
        };
        G__5731.cljs$core$IFn$_invoke$arity$variadic = G__5731__delegate;
        return G__5731;
      }();
    };
    var G__5730 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5730__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__5730.cljs$lang$maxFixedArity = 4;
    G__5730.cljs$lang$applyTo = function(arglist__5733) {
      var f = cljs.core.first(arglist__5733);
      arglist__5733 = cljs.core.next(arglist__5733);
      var arg1 = cljs.core.first(arglist__5733);
      arglist__5733 = cljs.core.next(arglist__5733);
      var arg2 = cljs.core.first(arglist__5733);
      arglist__5733 = cljs.core.next(arglist__5733);
      var arg3 = cljs.core.first(arglist__5733);
      var more = cljs.core.rest(arglist__5733);
      return G__5730__delegate(f, arg1, arg2, arg3, more);
    };
    G__5730.cljs$core$IFn$_invoke$arity$variadic = G__5730__delegate;
    return G__5730;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__5734 = null;
      var G__5734__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__5734__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__5734__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__5734__4 = function() {
        var G__5735__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__5735 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5735__delegate.call(this, a, b, c, ds);
        };
        G__5735.cljs$lang$maxFixedArity = 3;
        G__5735.cljs$lang$applyTo = function(arglist__5736) {
          var a = cljs.core.first(arglist__5736);
          arglist__5736 = cljs.core.next(arglist__5736);
          var b = cljs.core.first(arglist__5736);
          arglist__5736 = cljs.core.next(arglist__5736);
          var c = cljs.core.first(arglist__5736);
          var ds = cljs.core.rest(arglist__5736);
          return G__5735__delegate(a, b, c, ds);
        };
        G__5735.cljs$core$IFn$_invoke$arity$variadic = G__5735__delegate;
        return G__5735;
      }();
      G__5734 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__5734__1.call(this, a);
          case 2:
            return G__5734__2.call(this, a, b);
          case 3:
            return G__5734__3.call(this, a, b, c);
          default:
            return G__5734__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5734.cljs$lang$maxFixedArity = 3;
      G__5734.cljs$lang$applyTo = G__5734__4.cljs$lang$applyTo;
      return G__5734;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__5737 = null;
      var G__5737__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__5737__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__5737__4 = function() {
        var G__5738__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__5738 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5738__delegate.call(this, a, b, c, ds);
        };
        G__5738.cljs$lang$maxFixedArity = 3;
        G__5738.cljs$lang$applyTo = function(arglist__5739) {
          var a = cljs.core.first(arglist__5739);
          arglist__5739 = cljs.core.next(arglist__5739);
          var b = cljs.core.first(arglist__5739);
          arglist__5739 = cljs.core.next(arglist__5739);
          var c = cljs.core.first(arglist__5739);
          var ds = cljs.core.rest(arglist__5739);
          return G__5738__delegate(a, b, c, ds);
        };
        G__5738.cljs$core$IFn$_invoke$arity$variadic = G__5738__delegate;
        return G__5738;
      }();
      G__5737 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5737__2.call(this, a, b);
          case 3:
            return G__5737__3.call(this, a, b, c);
          default:
            return G__5737__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5737.cljs$lang$maxFixedArity = 3;
      G__5737.cljs$lang$applyTo = G__5737__4.cljs$lang$applyTo;
      return G__5737;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__5740 = null;
      var G__5740__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__5740__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__5740__4 = function() {
        var G__5741__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__5741 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5741__delegate.call(this, a, b, c, ds);
        };
        G__5741.cljs$lang$maxFixedArity = 3;
        G__5741.cljs$lang$applyTo = function(arglist__5742) {
          var a = cljs.core.first(arglist__5742);
          arglist__5742 = cljs.core.next(arglist__5742);
          var b = cljs.core.first(arglist__5742);
          arglist__5742 = cljs.core.next(arglist__5742);
          var c = cljs.core.first(arglist__5742);
          var ds = cljs.core.rest(arglist__5742);
          return G__5741__delegate(a, b, c, ds);
        };
        G__5741.cljs$core$IFn$_invoke$arity$variadic = G__5741__delegate;
        return G__5741;
      }();
      G__5740 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5740__2.call(this, a, b);
          case 3:
            return G__5740__3.call(this, a, b, c);
          default:
            return G__5740__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5740.cljs$lang$maxFixedArity = 3;
      G__5740.cljs$lang$applyTo = G__5740__4.cljs$lang$applyTo;
      return G__5740;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___5743 = size;
          var i_5744 = 0;
          while (true) {
            if (i_5744 < n__4291__auto___5743) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_5744, cljs.core._nth.call(null, c, i_5744)));
              var G__5745 = i_5744 + 1;
              i_5744 = G__5745;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4291__auto___5746 = size;
        var i_5747 = 0;
        while (true) {
          if (i_5747 < n__4291__auto___5746) {
            var x_5748 = f.call(null, cljs.core._nth.call(null, c, i_5747));
            if (x_5748 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_5748);
            }
            var G__5749 = i_5747 + 1;
            i_5747 = G__5749;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___5750 = size;
          var i_5751 = 0;
          while (true) {
            if (i_5751 < n__4291__auto___5750) {
              var x_5752 = f.call(null, idx + i_5751, cljs.core._nth.call(null, c, i_5751));
              if (x_5752 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_5752);
              }
              var G__5753 = i_5751 + 1;
              i_5751 = G__5753;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            return p.call(null, y);
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__5760__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__5760 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5760__delegate.call(this, x, y, z, args);
        };
        G__5760.cljs$lang$maxFixedArity = 3;
        G__5760.cljs$lang$applyTo = function(arglist__5761) {
          var x = cljs.core.first(arglist__5761);
          arglist__5761 = cljs.core.next(arglist__5761);
          var y = cljs.core.first(arglist__5761);
          arglist__5761 = cljs.core.next(arglist__5761);
          var z = cljs.core.first(arglist__5761);
          var args = cljs.core.rest(arglist__5761);
          return G__5760__delegate(x, y, z, args);
        };
        G__5760.cljs$core$IFn$_invoke$arity$variadic = G__5760__delegate;
        return G__5760;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__5762__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5754_SHARP_) {
            var and__3431__auto__ = p1.call(null, p1__5754_SHARP_);
            if (cljs.core.truth_(and__3431__auto__)) {
              return p2.call(null, p1__5754_SHARP_);
            } else {
              return and__3431__auto__;
            }
          }, args));
        };
        var G__5762 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5762__delegate.call(this, x, y, z, args);
        };
        G__5762.cljs$lang$maxFixedArity = 3;
        G__5762.cljs$lang$applyTo = function(arglist__5763) {
          var x = cljs.core.first(arglist__5763);
          arglist__5763 = cljs.core.next(arglist__5763);
          var y = cljs.core.first(arglist__5763);
          arglist__5763 = cljs.core.next(arglist__5763);
          var z = cljs.core.first(arglist__5763);
          var args = cljs.core.rest(arglist__5763);
          return G__5762__delegate(x, y, z, args);
        };
        G__5762.cljs$core$IFn$_invoke$arity$variadic = G__5762__delegate;
        return G__5762;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    var and__3431__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3431__auto____$5)) {
                      var and__3431__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3431__auto____$6)) {
                        var and__3431__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3431__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3431__auto____$7;
                        }
                      } else {
                        return and__3431__auto____$6;
                      }
                    } else {
                      return and__3431__auto____$5;
                    }
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__5764__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5755_SHARP_) {
            var and__3431__auto__ = p1.call(null, p1__5755_SHARP_);
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = p2.call(null, p1__5755_SHARP_);
              if (cljs.core.truth_(and__3431__auto____$1)) {
                return p3.call(null, p1__5755_SHARP_);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }, args));
        };
        var G__5764 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5764__delegate.call(this, x, y, z, args);
        };
        G__5764.cljs$lang$maxFixedArity = 3;
        G__5764.cljs$lang$applyTo = function(arglist__5765) {
          var x = cljs.core.first(arglist__5765);
          arglist__5765 = cljs.core.next(arglist__5765);
          var y = cljs.core.first(arglist__5765);
          arglist__5765 = cljs.core.next(arglist__5765);
          var z = cljs.core.first(arglist__5765);
          var args = cljs.core.rest(arglist__5765);
          return G__5764__delegate(x, y, z, args);
        };
        G__5764.cljs$core$IFn$_invoke$arity$variadic = G__5764__delegate;
        return G__5764;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__5766__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__5756_SHARP_) {
            return p1__5756_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__5757_SHARP_) {
            var and__3431__auto__ = p1__5757_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3431__auto__)) {
              return p1__5757_SHARP_.call(null, y);
            } else {
              return and__3431__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__5758_SHARP_) {
            var and__3431__auto__ = p1__5758_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = p1__5758_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3431__auto____$1)) {
                return p1__5758_SHARP_.call(null, z);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__5767__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5759_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__5759_SHARP_, args);
            }, ps__$1));
          };
          var G__5767 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__5767__delegate.call(this, x, y, z, args);
          };
          G__5767.cljs$lang$maxFixedArity = 3;
          G__5767.cljs$lang$applyTo = function(arglist__5768) {
            var x = cljs.core.first(arglist__5768);
            arglist__5768 = cljs.core.next(arglist__5768);
            var y = cljs.core.first(arglist__5768);
            arglist__5768 = cljs.core.next(arglist__5768);
            var z = cljs.core.first(arglist__5768);
            var args = cljs.core.rest(arglist__5768);
            return G__5767__delegate(x, y, z, args);
          };
          G__5767.cljs$core$IFn$_invoke$arity$variadic = G__5767__delegate;
          return G__5767;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__5766 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5766__delegate.call(this, p1, p2, p3, ps);
    };
    G__5766.cljs$lang$maxFixedArity = 3;
    G__5766.cljs$lang$applyTo = function(arglist__5769) {
      var p1 = cljs.core.first(arglist__5769);
      arglist__5769 = cljs.core.next(arglist__5769);
      var p2 = cljs.core.first(arglist__5769);
      arglist__5769 = cljs.core.next(arglist__5769);
      var p3 = cljs.core.first(arglist__5769);
      var ps = cljs.core.rest(arglist__5769);
      return G__5766__delegate(p1, p2, p3, ps);
    };
    G__5766.cljs$core$IFn$_invoke$arity$variadic = G__5766__delegate;
    return G__5766;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3443__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3443__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__5776__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__5776 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5776__delegate.call(this, x, y, z, args);
        };
        G__5776.cljs$lang$maxFixedArity = 3;
        G__5776.cljs$lang$applyTo = function(arglist__5777) {
          var x = cljs.core.first(arglist__5777);
          arglist__5777 = cljs.core.next(arglist__5777);
          var y = cljs.core.first(arglist__5777);
          arglist__5777 = cljs.core.next(arglist__5777);
          var z = cljs.core.first(arglist__5777);
          var args = cljs.core.rest(arglist__5777);
          return G__5776__delegate(x, y, z, args);
        };
        G__5776.cljs$core$IFn$_invoke$arity$variadic = G__5776__delegate;
        return G__5776;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__5778__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__5770_SHARP_) {
              var or__3443__auto____$1 = p1.call(null, p1__5770_SHARP_);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return p2.call(null, p1__5770_SHARP_);
              }
            }, args);
          }
        };
        var G__5778 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5778__delegate.call(this, x, y, z, args);
        };
        G__5778.cljs$lang$maxFixedArity = 3;
        G__5778.cljs$lang$applyTo = function(arglist__5779) {
          var x = cljs.core.first(arglist__5779);
          arglist__5779 = cljs.core.next(arglist__5779);
          var y = cljs.core.first(arglist__5779);
          arglist__5779 = cljs.core.next(arglist__5779);
          var z = cljs.core.first(arglist__5779);
          var args = cljs.core.rest(arglist__5779);
          return G__5778__delegate(x, y, z, args);
        };
        G__5778.cljs$core$IFn$_invoke$arity$variadic = G__5778__delegate;
        return G__5778;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  var or__3443__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3443__auto____$5)) {
                    return or__3443__auto____$5;
                  } else {
                    var or__3443__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3443__auto____$6)) {
                      return or__3443__auto____$6;
                    } else {
                      var or__3443__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3443__auto____$7)) {
                        return or__3443__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__5780__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__5771_SHARP_) {
              var or__3443__auto____$1 = p1.call(null, p1__5771_SHARP_);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                var or__3443__auto____$2 = p2.call(null, p1__5771_SHARP_);
                if (cljs.core.truth_(or__3443__auto____$2)) {
                  return or__3443__auto____$2;
                } else {
                  return p3.call(null, p1__5771_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__5780 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5780__delegate.call(this, x, y, z, args);
        };
        G__5780.cljs$lang$maxFixedArity = 3;
        G__5780.cljs$lang$applyTo = function(arglist__5781) {
          var x = cljs.core.first(arglist__5781);
          arglist__5781 = cljs.core.next(arglist__5781);
          var y = cljs.core.first(arglist__5781);
          arglist__5781 = cljs.core.next(arglist__5781);
          var z = cljs.core.first(arglist__5781);
          var args = cljs.core.rest(arglist__5781);
          return G__5780__delegate(x, y, z, args);
        };
        G__5780.cljs$core$IFn$_invoke$arity$variadic = G__5780__delegate;
        return G__5780;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__5782__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__5772_SHARP_) {
            return p1__5772_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__5773_SHARP_) {
            var or__3443__auto__ = p1__5773_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return p1__5773_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__5774_SHARP_) {
            var or__3443__auto__ = p1__5774_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              var or__3443__auto____$1 = p1__5774_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return p1__5774_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__5783__delegate = function(x, y, z, args) {
            var or__3443__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__5775_SHARP_) {
                return cljs.core.some.call(null, p1__5775_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__5783 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__5783__delegate.call(this, x, y, z, args);
          };
          G__5783.cljs$lang$maxFixedArity = 3;
          G__5783.cljs$lang$applyTo = function(arglist__5784) {
            var x = cljs.core.first(arglist__5784);
            arglist__5784 = cljs.core.next(arglist__5784);
            var y = cljs.core.first(arglist__5784);
            arglist__5784 = cljs.core.next(arglist__5784);
            var z = cljs.core.first(arglist__5784);
            var args = cljs.core.rest(arglist__5784);
            return G__5783__delegate(x, y, z, args);
          };
          G__5783.cljs$core$IFn$_invoke$arity$variadic = G__5783__delegate;
          return G__5783;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__5782 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5782__delegate.call(this, p1, p2, p3, ps);
    };
    G__5782.cljs$lang$maxFixedArity = 3;
    G__5782.cljs$lang$applyTo = function(arglist__5785) {
      var p1 = cljs.core.first(arglist__5785);
      arglist__5785 = cljs.core.next(arglist__5785);
      var p2 = cljs.core.first(arglist__5785);
      arglist__5785 = cljs.core.next(arglist__5785);
      var p3 = cljs.core.first(arglist__5785);
      var ps = cljs.core.rest(arglist__5785);
      return G__5782__delegate(p1, p2, p3, ps);
    };
    G__5782.cljs$core$IFn$_invoke$arity$variadic = G__5782__delegate;
    return G__5782;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___5787 = size;
          var i_5788 = 0;
          while (true) {
            if (i_5788 < n__4291__auto___5787) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_5788)));
              var G__5789 = i_5788 + 1;
              i_5788 = G__5789;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2__$1) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2__$1);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2__$1, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2__$1);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__5790__delegate = function(f, c1, c2__$1, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__5786_SHARP_) {
        return cljs.core.apply.call(null, f, p1__5786_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2__$1, c1)));
    };
    var G__5790 = function(f, c1, c2__$1, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5790__delegate.call(this, f, c1, c2__$1, c3, colls);
    };
    G__5790.cljs$lang$maxFixedArity = 4;
    G__5790.cljs$lang$applyTo = function(arglist__5791) {
      var f = cljs.core.first(arglist__5791);
      arglist__5791 = cljs.core.next(arglist__5791);
      var c1 = cljs.core.first(arglist__5791);
      arglist__5791 = cljs.core.next(arglist__5791);
      var c2__$1 = cljs.core.first(arglist__5791);
      arglist__5791 = cljs.core.next(arglist__5791);
      var c3 = cljs.core.first(arglist__5791);
      var colls = cljs.core.rest(arglist__5791);
      return G__5790__delegate(f, c1, c2__$1, c3, colls);
    };
    G__5790.cljs$core$IFn$_invoke$arity$variadic = G__5790__delegate;
    return G__5790;
  }();
  map = function(f, c1, c2__$1, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2__$1);
      case 4:
        return map__4.call(this, f, c1, c2__$1, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2__$1, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__5792 = n__$1 - 1;
        var G__5793 = cljs.core.rest.call(null, s);
        n__$1 = G__5792;
        coll__$1 = G__5793;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__5794 = cljs.core.next.call(null, s);
      var G__5795 = cljs.core.next.call(null, lead);
      s = G__5794;
      lead = G__5795;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = s;
        if (and__3431__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3431__auto__;
        }
      }())) {
        var G__5796 = pred__$1;
        var G__5797 = cljs.core.rest.call(null, s);
        pred__$1 = G__5796;
        coll__$1 = G__5797;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2__$1) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2__$1);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__5798__delegate = function(c1, c2__$1, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2__$1, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__5798 = function(c1, c2__$1, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5798__delegate.call(this, c1, c2__$1, colls);
    };
    G__5798.cljs$lang$maxFixedArity = 2;
    G__5798.cljs$lang$applyTo = function(arglist__5799) {
      var c1 = cljs.core.first(arglist__5799);
      arglist__5799 = cljs.core.next(arglist__5799);
      var c2__$1 = cljs.core.first(arglist__5799);
      var colls = cljs.core.rest(arglist__5799);
      return G__5798__delegate(c1, c2__$1, colls);
    };
    G__5798.cljs$core$IFn$_invoke$arity$variadic = G__5798__delegate;
    return G__5798;
  }();
  interleave = function(c1, c2__$1, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2__$1);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2__$1, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__5800__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__5800 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5800__delegate.call(this, f, coll, colls);
    };
    G__5800.cljs$lang$maxFixedArity = 2;
    G__5800.cljs$lang$applyTo = function(arglist__5801) {
      var f = cljs.core.first(arglist__5801);
      arglist__5801 = cljs.core.next(arglist__5801);
      var coll = cljs.core.first(arglist__5801);
      var colls = cljs.core.rest(arglist__5801);
      return G__5800__delegate(f, coll, colls);
    };
    G__5800.cljs$core$IFn$_invoke$arity$variadic = G__5800__delegate;
    return G__5800;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4291__auto___5802 = size;
        var i_5803 = 0;
        while (true) {
          if (i_5803 < n__4291__auto___5802) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_5803)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_5803));
            } else {
            }
            var G__5804 = i_5803 + 1;
            i_5803 = G__5804;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__5805_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__5805_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__5807 = to;
      if (G__5807) {
        var bit__4086__auto__ = G__5807.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4086__auto__ || G__5807.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2__$1) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2__$1));
  };
  var mapv__4 = function(f, c1, c2__$1, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2__$1, c3));
  };
  var mapv__5 = function() {
    var G__5808__delegate = function(f, c1, c2__$1, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2__$1, c3, colls));
    };
    var G__5808 = function(f, c1, c2__$1, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5808__delegate.call(this, f, c1, c2__$1, c3, colls);
    };
    G__5808.cljs$lang$maxFixedArity = 4;
    G__5808.cljs$lang$applyTo = function(arglist__5809) {
      var f = cljs.core.first(arglist__5809);
      arglist__5809 = cljs.core.next(arglist__5809);
      var c1 = cljs.core.first(arglist__5809);
      arglist__5809 = cljs.core.next(arglist__5809);
      var c2__$1 = cljs.core.first(arglist__5809);
      arglist__5809 = cljs.core.next(arglist__5809);
      var c3 = cljs.core.first(arglist__5809);
      var colls = cljs.core.rest(arglist__5809);
      return G__5808__delegate(f, c1, c2__$1, c3, colls);
    };
    G__5808.cljs$core$IFn$_invoke$arity$variadic = G__5808__delegate;
    return G__5808;
  }();
  mapv = function(f, c1, c2__$1, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2__$1);
      case 4:
        return mapv__4.call(this, f, c1, c2__$1, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2__$1, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__5811 = m__$1;
          if (G__5811) {
            var bit__4093__auto__ = G__5811.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4093__auto__ || G__5811.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__5811.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__5811);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__5811);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__5812 = sentinel;
            var G__5813 = m__$2;
            var G__5814 = cljs.core.next.call(null, ks__$1);
            sentinel = G__5812;
            m__$1 = G__5813;
            ks__$1 = G__5814;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__5815, v) {
  var vec__5817 = p__5815;
  var k = cljs.core.nth.call(null, vec__5817, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__5817, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__5818, f) {
    var vec__5828 = p__5818;
    var k = cljs.core.nth.call(null, vec__5828, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5828, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__5819, f, a) {
    var vec__5829 = p__5819;
    var k = cljs.core.nth.call(null, vec__5829, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5829, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__5820, f, a, b) {
    var vec__5830 = p__5820;
    var k = cljs.core.nth.call(null, vec__5830, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5830, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__5821, f, a, b, c) {
    var vec__5831 = p__5821;
    var k = cljs.core.nth.call(null, vec__5831, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5831, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__5833__delegate = function(m, p__5822, f, a, b, c, args) {
      var vec__5832 = p__5822;
      var k = cljs.core.nth.call(null, vec__5832, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__5832, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__5833 = function(m, p__5822, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5833__delegate.call(this, m, p__5822, f, a, b, c, args);
    };
    G__5833.cljs$lang$maxFixedArity = 6;
    G__5833.cljs$lang$applyTo = function(arglist__5834) {
      var m = cljs.core.first(arglist__5834);
      arglist__5834 = cljs.core.next(arglist__5834);
      var p__5822 = cljs.core.first(arglist__5834);
      arglist__5834 = cljs.core.next(arglist__5834);
      var f = cljs.core.first(arglist__5834);
      arglist__5834 = cljs.core.next(arglist__5834);
      var a = cljs.core.first(arglist__5834);
      arglist__5834 = cljs.core.next(arglist__5834);
      var b = cljs.core.first(arglist__5834);
      arglist__5834 = cljs.core.next(arglist__5834);
      var c = cljs.core.first(arglist__5834);
      var args = cljs.core.rest(arglist__5834);
      return G__5833__delegate(m, p__5822, f, a, b, c, args);
    };
    G__5833.cljs$core$IFn$_invoke$arity$variadic = G__5833__delegate;
    return G__5833;
  }();
  update_in = function(m, p__5822, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__5822, f);
      case 4:
        return update_in__4.call(this, m, p__5822, f, a);
      case 5:
        return update_in__5.call(this, m, p__5822, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__5822, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__5822, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__5835 = ll - 5;
      var G__5836 = r;
      ll = G__5835;
      ret = G__5836;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__5837 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__5838 = level - 5;
          node = G__5837;
          level = G__5838;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__5840 = null;
  var G__5840__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__5840__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__5840 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5840__2.call(this, self__, k);
      case 3:
        return G__5840__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5840;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args5839) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5839)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__5841 = j + 1;
              var G__5842 = init__$2;
              j = G__5841;
              init__$1 = G__5842;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__5843 = i + step_init[0];
        i = G__5843;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4291__auto___5844 = len;
    var i_5845 = 0;
    while (true) {
      if (i_5845 < n__4291__auto___5844) {
        new_tail[i_5845] = self__.tail[i_5845];
        var G__5846 = i_5845 + 1;
        i_5845 = G__5846;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__5847 = i + 1;
        var G__5848 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__5847;
        out = G__5848;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__5849) {
    var args = cljs.core.seq(arglist__5849);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__5851 = null;
  var G__5851__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__5851__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__5851 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5851__2.call(this, self__, k);
      case 3:
        return G__5851__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5851;
}();
cljs.core.Subvec.prototype.apply = function(self__, args5850) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5850)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3750__auto__ = self__.end;
    var y__3751__auto__ = v_pos + 1;
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__5852 = meta;
      var G__5853 = v.v;
      var G__5854 = v.start + start;
      var G__5855 = v.start + end;
      var G__5856 = __hash;
      meta = G__5852;
      v = G__5853;
      start = G__5854;
      end = G__5855;
      __hash = G__5856;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj5860 = {};
    return obj5860;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__5861 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__5862 = level - 5;
          node = G__5861;
          level = G__5862;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__5864 = null;
  var G__5864__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5864__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5864 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5864__2.call(this, self__, k);
      case 3:
        return G__5864__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5864;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args5863) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5863)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3443__auto__ = self__.rear;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3443__auto__ = self__.front;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__5865 = i + incr;
        i = G__5865;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__5866 = i + 1;
      var G__5867 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__5866;
      out = G__5867;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj5871 = {};
    return obj5871;
  }();
  var l = ks.length;
  var i_5872 = 0;
  while (true) {
    if (i_5872 < l) {
      var k_5873 = ks[i_5872];
      new_obj[k_5873] = obj[k_5873];
      var G__5874 = i_5872 + 1;
      i_5872 = G__5874;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__5877 = null;
  var G__5877__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5877__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5877 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5877__2.call(this, self__, k);
      case 3:
        return G__5877__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5877;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args5876) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5876)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5878 = cljs.core.rest.call(null, keys__$1);
        var G__5879 = init__$2;
        keys__$1 = G__5878;
        init__$1 = G__5879;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__5875_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__5875_SHARP_, self__.strobj[p1__5875_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj5881 = {};
  return obj5881;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5882 = i + 2;
          i = G__5882;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5883 = i + 2;
          i = G__5883;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5884 = i + 2;
          i = G__5884;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5885 = i + 2;
          i = G__5885;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__5886 = i + 2;
          i = G__5886;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_5887 = 0;
  while (true) {
    if (i_5887 < l) {
      narr[i_5887] = arr[i_5887];
      var G__5888 = i_5887 + 1;
      i_5887 = G__5888;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj5891 = {};
    return obj5891;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__5892 = cljs.core.aclone.call(null, self__.arr);
          G__5892[idx + 1] = v;
          return G__5892;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__5893 = null;
  var G__5893__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5893__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5893 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5893__2.call(this, self__, k);
      case 3:
        return G__5893__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5893;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args5889) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5889)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5894 = i + 2;
        var G__5895 = init__$2;
        i = G__5894;
        init__$1 = G__5895;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__5896 = s + 2;
            var G__5897 = d;
            s = G__5896;
            d = G__5897;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__5898 = s + 2;
              var G__5899 = d + 2;
              s = G__5898;
              d = G__5899;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__5900 = i + 2;
        var G__5901 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__5900;
        ret = G__5901;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__5902_5904 = self__.arr;
      G__5902_5904.pop();
      G__5902_5904.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__5903 = o;
      if (G__5903) {
        var bit__4093__auto__ = G__5903.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4093__auto__ || G__5903.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__5903.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5903);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5903);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__5905 = cljs.core.next.call(null, es);
          var G__5906 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5905;
          tcoll__$2 = G__5906;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__5907 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__5908 = i + 2;
      out = G__5907;
      i = G__5908;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__5911 = cljs.core.aclone.call(null, arr);
    G__5911[i] = a;
    return G__5911;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__5912 = cljs.core.aclone.call(null, arr);
    G__5912[i] = a;
    G__5912[j] = b;
    return G__5912;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5913 = i + 2;
        var G__5914 = init__$2;
        i = G__5913;
        init__$1 = G__5914;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_5915 = 0;
        var j_5916 = 0;
        while (true) {
          if (i_5915 < 32) {
            if ((self__.bitmap >>> i_5915 & 1) === 0) {
              var G__5917 = i_5915 + 1;
              var G__5918 = j_5916;
              i_5915 = G__5917;
              j_5916 = G__5918;
              continue;
            } else {
              nodes[i_5915] = !(self__.arr[j_5916] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_5916]), self__.arr[j_5916], self__.arr[j_5916 + 1], added_leaf_QMARK_) : self__.arr[j_5916 + 1];
              var G__5919 = i_5915 + 1;
              var G__5920 = j_5916 + 2;
              i_5915 = G__5919;
              j_5916 = G__5920;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_5921 = 0;
      var j_5922 = 0;
      while (true) {
        if (i_5921 < 32) {
          if ((self__.bitmap >>> i_5921 & 1) === 0) {
            var G__5923 = i_5921 + 1;
            var G__5924 = j_5922;
            i_5921 = G__5923;
            j_5922 = G__5924;
            continue;
          } else {
            nodes[i_5921] = !(self__.arr[j_5922] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_5922]), self__.arr[j_5922], self__.arr[j_5922 + 1], added_leaf_QMARK_) : self__.arr[j_5922 + 1];
            var G__5925 = i_5921 + 1;
            var G__5926 = j_5922 + 2;
            i_5921 = G__5925;
            j_5922 = G__5926;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__5927 = i + 1;
        var G__5928 = j + 2;
        var G__5929 = bitmap | 1 << i;
        i = G__5927;
        j = G__5928;
        bitmap = G__5929;
        continue;
      } else {
        var G__5930 = i + 1;
        var G__5931 = j;
        var G__5932 = bitmap;
        i = G__5930;
        j = G__5931;
        bitmap = G__5932;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__5933 = i + 1;
          var G__5934 = init__$2;
          i = G__5933;
          init__$1 = G__5934;
          continue;
        }
      } else {
        var G__5935 = i + 1;
        var G__5936 = init__$1;
        i = G__5935;
        init__$1 = G__5936;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__5937 = i + 2;
        i = G__5937;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__5938 = j + 2;
                j = G__5938;
                continue;
              }
            } else {
              var G__5939 = j + 2;
              j = G__5939;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__5940 = j + 1;
              j = G__5940;
              continue;
            }
          } else {
            var G__5941 = j + 1;
            j = G__5941;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj5944 = {};
    return obj5944;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__5945 = null;
  var G__5945__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5945__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5945 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5945__2.call(this, self__, k);
      case 3:
        return G__5945__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5945;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args5942) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5942)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__5946 = i + 1;
      var G__5947 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__5946;
      out = G__5947;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__5948 = o;
      if (G__5948) {
        var bit__4093__auto__ = G__5948.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4093__auto__ || G__5948.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__5948.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5948);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5948);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__5949 = cljs.core.next.call(null, es);
          var G__5950 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5949;
          tcoll__$1 = G__5950;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__5951 = ascending_QMARK_ ? t.left : t.right;
      var G__5952 = cljs.core.conj.call(null, stack__$1, t);
      t = G__5951;
      stack__$1 = G__5952;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__5954 = null;
  var G__5954__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5954__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5954 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5954__2.call(this, self__, k);
      case 3:
        return G__5954__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5954;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args5953) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5953)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__5956 = null;
  var G__5956__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5956__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5956 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5956__2.call(this, self__, k);
      case 3:
        return G__5956__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5956;
}();
cljs.core.RedNode.prototype.apply = function(self__, args5955) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5955)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__5958 = null;
  var G__5958__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5958__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5958 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5958__2.call(this, self__, k);
      case 3:
        return G__5958__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5958;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args5957) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5957)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__5959 = t.left;
          t = G__5959;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__5960 = t.right;
            t = G__5960;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__5961 = cljs.core.conj.call(null, stack, t);
              var G__5962 = t.left;
              stack = G__5961;
              t = G__5962;
              continue;
            } else {
              var G__5963 = stack;
              var G__5964 = t.right;
              stack = G__5963;
              t = G__5964;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__5965 = cljs.core.conj.call(null, stack, t);
                var G__5966 = t.right;
                stack = G__5965;
                t = G__5966;
                continue;
              } else {
                var G__5967 = stack;
                var G__5968 = t.left;
                stack = G__5967;
                t = G__5968;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__5969 = cljs.core.nnext.call(null, in$);
        var G__5970 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5969;
        out = G__5970;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__5971) {
    var keyvals = cljs.core.seq(arglist__5971);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__5972) {
    var keyvals = cljs.core.seq(arglist__5972);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj5976 = {};
      return obj5976;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__5977 = cljs.core.nnext.call(null, kvs);
        kvs = G__5977;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__5978) {
    var keyvals = cljs.core.seq(arglist__5978);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__5979 = cljs.core.nnext.call(null, in$);
        var G__5980 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5979;
        out = G__5980;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__5981) {
    var keyvals = cljs.core.seq(arglist__5981);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__5982 = cljs.core.nnext.call(null, in$);
        var G__5983 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5982;
        out = G__5983;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__5984) {
    var comparator = cljs.core.first(arglist__5984);
    var keyvals = cljs.core.rest(arglist__5984);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__5985 = self__.mseq;
    if (G__5985) {
      var bit__4093__auto__ = G__5985.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__5985.cljs$core$INext$) {
        return true;
      } else {
        if (!G__5985.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5985);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5985);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__5986 = self__.mseq;
    if (G__5986) {
      var bit__4093__auto__ = G__5986.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__5986.cljs$core$INext$) {
        return true;
      } else {
        if (!G__5986.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5986);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5986);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__5987 = self__.mseq;
    if (G__5987) {
      var bit__4093__auto__ = G__5987.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__5987.cljs$core$INext$) {
        return true;
      } else {
        if (!G__5987.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5987);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5987);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__5988 = self__.mseq;
    if (G__5988) {
      var bit__4093__auto__ = G__5988.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__5988.cljs$core$INext$) {
        return true;
      } else {
        if (!G__5988.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5988);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__5988);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__5989_SHARP_, p2__5990_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3443__auto__ = p1__5989_SHARP_;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__5990_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__5991) {
    var maps = cljs.core.seq(arglist__5991);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3443__auto__ = m1;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__5992) {
    var f = cljs.core.first(arglist__5992);
    var maps = cljs.core.rest(arglist__5992);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__5993 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__5994 = cljs.core.next.call(null, keys);
      ret = G__5993;
      keys = G__5994;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__5997 = null;
  var G__5997__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5997__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5997 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5997__2.call(this, self__, k);
      case 3:
        return G__5997__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__5997;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args5996) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5996)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__5995_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__5995_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__5998 = i + 1;
        var G__5999 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__5998;
        out = G__5999;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__6000 = i + 1;
        var G__6001 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__6000;
        out = G__6001;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__6003 = null;
  var G__6003__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__6003__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__6003 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6003__2.call(this, self__, k);
      case 3:
        return G__6003__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6003;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args6002) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6002)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__6006 = null;
  var G__6006__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6006__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6006 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6006__2.call(this, self__, k);
      case 3:
        return G__6006__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6006;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args6005) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6005)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__6004_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6004_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4285__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4285__auto__.length) {
        var G__6007 = i + 1;
        var G__6008 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__6007;
        res = G__6008;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__6009 = cljs.core._next.call(null, in$__$1);
            var G__6010 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__6009;
            out = G__6010;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__6011__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__6011 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6011__delegate.call(this, keys);
    };
    G__6011.cljs$lang$maxFixedArity = 0;
    G__6011.cljs$lang$applyTo = function(arglist__6012) {
      var keys = cljs.core.seq(arglist__6012);
      return G__6011__delegate(keys);
    };
    G__6011.cljs$core$IFn$_invoke$arity$variadic = G__6011__delegate;
    return G__6011;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__6013) {
    var keys = cljs.core.seq(arglist__6013);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__6014) {
    var comparator = cljs.core.first(arglist__6014);
    var keys = cljs.core.rest(arglist__6014);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__6015_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__6015_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__6015_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__6022, seen__$1) {
        while (true) {
          var vec__6023 = p__6022;
          var f = cljs.core.nth.call(null, vec__6023, 0, null);
          var xs__$1 = vec__6023;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__6024 = cljs.core.rest.call(null, s);
              var G__6025 = seen__$1;
              p__6022 = G__6024;
              seen__$1 = G__6025;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__6026 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__6027 = cljs.core.next.call(null, s__$1);
      ret = G__6026;
      s__$1 = G__6027;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__6029 = x;
    if (G__6029) {
      var bit__4086__auto__ = G__6029.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4086__auto__ || G__6029.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__6030 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__6031 = cljs.core.next.call(null, ks);
      var G__6032 = cljs.core.next.call(null, vs);
      map = G__6030;
      ks = G__6031;
      vs = G__6032;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__6035__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6033_SHARP_, p2__6034_SHARP_) {
        return max_key.call(null, k, p1__6033_SHARP_, p2__6034_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__6035 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6035__delegate.call(this, k, x, y, more);
    };
    G__6035.cljs$lang$maxFixedArity = 3;
    G__6035.cljs$lang$applyTo = function(arglist__6036) {
      var k = cljs.core.first(arglist__6036);
      arglist__6036 = cljs.core.next(arglist__6036);
      var x = cljs.core.first(arglist__6036);
      arglist__6036 = cljs.core.next(arglist__6036);
      var y = cljs.core.first(arglist__6036);
      var more = cljs.core.rest(arglist__6036);
      return G__6035__delegate(k, x, y, more);
    };
    G__6035.cljs$core$IFn$_invoke$arity$variadic = G__6035__delegate;
    return G__6035;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__6039__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6037_SHARP_, p2__6038_SHARP_) {
        return min_key.call(null, k, p1__6037_SHARP_, p2__6038_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__6039 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6039__delegate.call(this, k, x, y, more);
    };
    G__6039.cljs$lang$maxFixedArity = 3;
    G__6039.cljs$lang$applyTo = function(arglist__6040) {
      var k = cljs.core.first(arglist__6040);
      arglist__6040 = cljs.core.next(arglist__6040);
      var x = cljs.core.first(arglist__6040);
      arglist__6040 = cljs.core.next(arglist__6040);
      var y = cljs.core.first(arglist__6040);
      var more = cljs.core.rest(arglist__6040);
      return G__6039__delegate(k, x, y, more);
    };
    G__6039.cljs$core$IFn$_invoke$arity$variadic = G__6039__delegate;
    return G__6039;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__6043 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__6043, 0, null);
        var s = vec__6043;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__6044 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__6044, 0, null);
      var s = vec__6044;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__6047 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__6047, 0, null);
        var s = vec__6047;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__6048 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__6048, 0, null);
      var s = vec__6048;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__6049_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__6049_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__6060 = null;
      var G__6060__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__6060__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__6060__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__6060__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__6060__4 = function() {
        var G__6061__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__6061 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6061__delegate.call(this, x, y, z, args);
        };
        G__6061.cljs$lang$maxFixedArity = 3;
        G__6061.cljs$lang$applyTo = function(arglist__6062) {
          var x = cljs.core.first(arglist__6062);
          arglist__6062 = cljs.core.next(arglist__6062);
          var y = cljs.core.first(arglist__6062);
          arglist__6062 = cljs.core.next(arglist__6062);
          var z = cljs.core.first(arglist__6062);
          var args = cljs.core.rest(arglist__6062);
          return G__6061__delegate(x, y, z, args);
        };
        G__6061.cljs$core$IFn$_invoke$arity$variadic = G__6061__delegate;
        return G__6061;
      }();
      G__6060 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6060__0.call(this);
          case 1:
            return G__6060__1.call(this, x);
          case 2:
            return G__6060__2.call(this, x, y);
          case 3:
            return G__6060__3.call(this, x, y, z);
          default:
            return G__6060__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6060.cljs$lang$maxFixedArity = 3;
      G__6060.cljs$lang$applyTo = G__6060__4.cljs$lang$applyTo;
      return G__6060;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__6063 = null;
      var G__6063__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__6063__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__6063__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__6063__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__6063__4 = function() {
        var G__6064__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__6064 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6064__delegate.call(this, x, y, z, args);
        };
        G__6064.cljs$lang$maxFixedArity = 3;
        G__6064.cljs$lang$applyTo = function(arglist__6065) {
          var x = cljs.core.first(arglist__6065);
          arglist__6065 = cljs.core.next(arglist__6065);
          var y = cljs.core.first(arglist__6065);
          arglist__6065 = cljs.core.next(arglist__6065);
          var z = cljs.core.first(arglist__6065);
          var args = cljs.core.rest(arglist__6065);
          return G__6064__delegate(x, y, z, args);
        };
        G__6064.cljs$core$IFn$_invoke$arity$variadic = G__6064__delegate;
        return G__6064;
      }();
      G__6063 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6063__0.call(this);
          case 1:
            return G__6063__1.call(this, x);
          case 2:
            return G__6063__2.call(this, x, y);
          case 3:
            return G__6063__3.call(this, x, y, z);
          default:
            return G__6063__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6063.cljs$lang$maxFixedArity = 3;
      G__6063.cljs$lang$applyTo = G__6063__4.cljs$lang$applyTo;
      return G__6063;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__6066 = null;
      var G__6066__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__6066__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__6066__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__6066__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__6066__4 = function() {
        var G__6067__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__6067 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6067__delegate.call(this, x, y, z, args);
        };
        G__6067.cljs$lang$maxFixedArity = 3;
        G__6067.cljs$lang$applyTo = function(arglist__6068) {
          var x = cljs.core.first(arglist__6068);
          arglist__6068 = cljs.core.next(arglist__6068);
          var y = cljs.core.first(arglist__6068);
          arglist__6068 = cljs.core.next(arglist__6068);
          var z = cljs.core.first(arglist__6068);
          var args = cljs.core.rest(arglist__6068);
          return G__6067__delegate(x, y, z, args);
        };
        G__6067.cljs$core$IFn$_invoke$arity$variadic = G__6067__delegate;
        return G__6067;
      }();
      G__6066 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6066__0.call(this);
          case 1:
            return G__6066__1.call(this, x);
          case 2:
            return G__6066__2.call(this, x, y);
          case 3:
            return G__6066__3.call(this, x, y, z);
          default:
            return G__6066__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6066.cljs$lang$maxFixedArity = 3;
      G__6066.cljs$lang$applyTo = G__6066__4.cljs$lang$applyTo;
      return G__6066;
    }();
  };
  var juxt__4 = function() {
    var G__6069__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__6070 = null;
        var G__6070__0 = function() {
          return cljs.core.reduce.call(null, function(p1__6050_SHARP_, p2__6051_SHARP_) {
            return cljs.core.conj.call(null, p1__6050_SHARP_, p2__6051_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__6070__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__6052_SHARP_, p2__6053_SHARP_) {
            return cljs.core.conj.call(null, p1__6052_SHARP_, p2__6053_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__6070__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__6054_SHARP_, p2__6055_SHARP_) {
            return cljs.core.conj.call(null, p1__6054_SHARP_, p2__6055_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__6070__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__6056_SHARP_, p2__6057_SHARP_) {
            return cljs.core.conj.call(null, p1__6056_SHARP_, p2__6057_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__6070__4 = function() {
          var G__6071__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__6058_SHARP_, p2__6059_SHARP_) {
              return cljs.core.conj.call(null, p1__6058_SHARP_, cljs.core.apply.call(null, p2__6059_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6071 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__6071__delegate.call(this, x, y, z, args);
          };
          G__6071.cljs$lang$maxFixedArity = 3;
          G__6071.cljs$lang$applyTo = function(arglist__6072) {
            var x = cljs.core.first(arglist__6072);
            arglist__6072 = cljs.core.next(arglist__6072);
            var y = cljs.core.first(arglist__6072);
            arglist__6072 = cljs.core.next(arglist__6072);
            var z = cljs.core.first(arglist__6072);
            var args = cljs.core.rest(arglist__6072);
            return G__6071__delegate(x, y, z, args);
          };
          G__6071.cljs$core$IFn$_invoke$arity$variadic = G__6071__delegate;
          return G__6071;
        }();
        G__6070 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__6070__0.call(this);
            case 1:
              return G__6070__1.call(this, x);
            case 2:
              return G__6070__2.call(this, x, y);
            case 3:
              return G__6070__3.call(this, x, y, z);
            default:
              return G__6070__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6070.cljs$lang$maxFixedArity = 3;
        G__6070.cljs$lang$applyTo = G__6070__4.cljs$lang$applyTo;
        return G__6070;
      }();
    };
    var G__6069 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6069__delegate.call(this, f, g, h, fs);
    };
    G__6069.cljs$lang$maxFixedArity = 3;
    G__6069.cljs$lang$applyTo = function(arglist__6073) {
      var f = cljs.core.first(arglist__6073);
      arglist__6073 = cljs.core.next(arglist__6073);
      var g = cljs.core.first(arglist__6073);
      arglist__6073 = cljs.core.next(arglist__6073);
      var h = cljs.core.first(arglist__6073);
      var fs = cljs.core.rest(arglist__6073);
      return G__6069__delegate(f, g, h, fs);
    };
    G__6069.cljs$core$IFn$_invoke$arity$variadic = G__6069__delegate;
    return G__6069;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__6074 = cljs.core.next.call(null, coll);
        coll = G__6074;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__6075 = n - 1;
        var G__6076 = cljs.core.next.call(null, coll);
        n = G__6075;
        coll = G__6076;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__6078 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__6078, 0, null);
  var flags = cljs.core.nth.call(null, vec__6078, 1, null);
  var pattern = cljs.core.nth.call(null, vec__6078, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_6080 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_6081__$1 = cljs.core.next.call(null, coll);
      var n_6082 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_6081__$1 && (n_6082 == null || !(n_6082 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_6081__$1), writer, opts);
          var G__6083 = cljs.core.next.call(null, coll_6081__$1);
          var G__6084 = n_6082 - 1;
          coll_6081__$1 = G__6083;
          n_6082 = G__6084;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_6080;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__6089 = cljs.core.seq.call(null, ss);
    var chunk__6090 = null;
    var count__6091 = 0;
    var i__6092 = 0;
    while (true) {
      if (i__6092 < count__6091) {
        var s = cljs.core._nth.call(null, chunk__6090, i__6092);
        cljs.core._write.call(null, writer, s);
        var G__6093 = seq__6089;
        var G__6094 = chunk__6090;
        var G__6095 = count__6091;
        var G__6096 = i__6092 + 1;
        seq__6089 = G__6093;
        chunk__6090 = G__6094;
        count__6091 = G__6095;
        i__6092 = G__6096;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__6089);
        if (temp__4092__auto__) {
          var seq__6089__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6089__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__6089__$1);
            var G__6097 = cljs.core.chunk_rest.call(null, seq__6089__$1);
            var G__6098 = c__4191__auto__;
            var G__6099 = cljs.core.count.call(null, c__4191__auto__);
            var G__6100 = 0;
            seq__6089 = G__6097;
            chunk__6090 = G__6098;
            count__6091 = G__6099;
            i__6092 = G__6100;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__6089__$1);
            cljs.core._write.call(null, writer, s);
            var G__6101 = cljs.core.next.call(null, seq__6089__$1);
            var G__6102 = null;
            var G__6103 = 0;
            var G__6104 = 0;
            seq__6089 = G__6101;
            chunk__6090 = G__6102;
            count__6091 = G__6103;
            i__6092 = G__6104;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__6105) {
    var writer = cljs.core.first(arglist__6105);
    var ss = cljs.core.rest(arglist__6105);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj6107 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj6107;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3431__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = function() {
              var G__6113 = obj;
              if (G__6113) {
                var bit__4093__auto__ = G__6113.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4093__auto__ || G__6113.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__6113.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6113);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6113);
              }
            }();
            if (and__3431__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__6114 = obj;
              if (G__6114) {
                var bit__4086__auto__ = G__6114.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4086__auto__ || G__6114.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__6116 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__6116;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__6115 = obj;
                              if (G__6115) {
                                var bit__4093__auto__ = G__6115.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4093__auto__ || G__6115.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__6115.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6115);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6115);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__6121 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__6122 = null;
  var count__6123 = 0;
  var i__6124 = 0;
  while (true) {
    if (i__6124 < count__6123) {
      var obj = cljs.core._nth.call(null, chunk__6122, i__6124);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__6125 = seq__6121;
      var G__6126 = chunk__6122;
      var G__6127 = count__6123;
      var G__6128 = i__6124 + 1;
      seq__6121 = G__6125;
      chunk__6122 = G__6126;
      count__6123 = G__6127;
      i__6124 = G__6128;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__6121);
      if (temp__4092__auto__) {
        var seq__6121__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6121__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__6121__$1);
          var G__6129 = cljs.core.chunk_rest.call(null, seq__6121__$1);
          var G__6130 = c__4191__auto__;
          var G__6131 = cljs.core.count.call(null, c__4191__auto__);
          var G__6132 = 0;
          seq__6121 = G__6129;
          chunk__6122 = G__6130;
          count__6123 = G__6131;
          i__6124 = G__6132;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__6121__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__6133 = cljs.core.next.call(null, seq__6121__$1);
          var G__6134 = null;
          var G__6135 = 0;
          var G__6136 = 0;
          seq__6121 = G__6133;
          chunk__6122 = G__6134;
          count__6123 = G__6135;
          i__6124 = G__6136;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__6137) {
    var objs = cljs.core.seq(arglist__6137);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__6138) {
    var objs = cljs.core.seq(arglist__6138);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__6139) {
    var objs = cljs.core.seq(arglist__6139);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__6140) {
    var objs = cljs.core.seq(arglist__6140);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__6141) {
    var objs = cljs.core.seq(arglist__6141);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__6142) {
    var objs = cljs.core.seq(arglist__6142);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__6143) {
    var objs = cljs.core.seq(arglist__6143);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__6144) {
    var objs = cljs.core.seq(arglist__6144);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj6146 = {};
  return obj6146;
}();
cljs.core.IReset = function() {
  var obj6148 = {};
  return obj6148;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj6150 = {};
  return obj6150;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__6151 = cljs.core.seq.call(null, self__.watches);
  var chunk__6152 = null;
  var count__6153 = 0;
  var i__6154 = 0;
  while (true) {
    if (i__6154 < count__6153) {
      var vec__6155 = cljs.core._nth.call(null, chunk__6152, i__6154);
      var key = cljs.core.nth.call(null, vec__6155, 0, null);
      var f = cljs.core.nth.call(null, vec__6155, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__6157 = seq__6151;
      var G__6158 = chunk__6152;
      var G__6159 = count__6153;
      var G__6160 = i__6154 + 1;
      seq__6151 = G__6157;
      chunk__6152 = G__6158;
      count__6153 = G__6159;
      i__6154 = G__6160;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__6151);
      if (temp__4092__auto__) {
        var seq__6151__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6151__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__6151__$1);
          var G__6161 = cljs.core.chunk_rest.call(null, seq__6151__$1);
          var G__6162 = c__4191__auto__;
          var G__6163 = cljs.core.count.call(null, c__4191__auto__);
          var G__6164 = 0;
          seq__6151 = G__6161;
          chunk__6152 = G__6162;
          count__6153 = G__6163;
          i__6154 = G__6164;
          continue;
        } else {
          var vec__6156 = cljs.core.first.call(null, seq__6151__$1);
          var key = cljs.core.nth.call(null, vec__6156, 0, null);
          var f = cljs.core.nth.call(null, vec__6156, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__6165 = cljs.core.next.call(null, seq__6151__$1);
          var G__6166 = null;
          var G__6167 = 0;
          var G__6168 = 0;
          seq__6151 = G__6165;
          chunk__6152 = G__6166;
          count__6153 = G__6167;
          i__6154 = G__6168;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__6172__delegate = function(x, p__6169) {
      var map__6171 = p__6169;
      var map__6171__$1 = cljs.core.seq_QMARK_.call(null, map__6171) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6171) : map__6171;
      var validator = cljs.core.get.call(null, map__6171__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__6171__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__6172 = function(x, var_args) {
      var p__6169 = null;
      if (arguments.length > 1) {
        p__6169 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6172__delegate.call(this, x, p__6169);
    };
    G__6172.cljs$lang$maxFixedArity = 1;
    G__6172.cljs$lang$applyTo = function(arglist__6173) {
      var x = cljs.core.first(arglist__6173);
      var p__6169 = cljs.core.rest(arglist__6173);
      return G__6172__delegate(x, p__6169);
    };
    G__6172.cljs$core$IFn$_invoke$arity$variadic = G__6172__delegate;
    return G__6172;
  }();
  atom = function(x, var_args) {
    var p__6169 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__6174__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__6174 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6174__delegate.call(this, a, f, x, y, more);
    };
    G__6174.cljs$lang$maxFixedArity = 4;
    G__6174.cljs$lang$applyTo = function(arglist__6175) {
      var a = cljs.core.first(arglist__6175);
      arglist__6175 = cljs.core.next(arglist__6175);
      var f = cljs.core.first(arglist__6175);
      arglist__6175 = cljs.core.next(arglist__6175);
      var x = cljs.core.first(arglist__6175);
      arglist__6175 = cljs.core.next(arglist__6175);
      var y = cljs.core.first(arglist__6175);
      var more = cljs.core.rest(arglist__6175);
      return G__6174__delegate(a, f, x, y, more);
    };
    G__6174.cljs$core$IFn$_invoke$arity$variadic = G__6174__delegate;
    return G__6174;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__6176) {
    var iref = cljs.core.first(arglist__6176);
    arglist__6176 = cljs.core.next(arglist__6176);
    var f = cljs.core.first(arglist__6176);
    var args = cljs.core.rest(arglist__6176);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__6177) {
    var map__6178 = p__6177;
    var map__6178__$1 = cljs.core.seq_QMARK_.call(null, map__6178) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6178) : map__6178;
    var curr_state = map__6178__$1;
    var done = cljs.core.get.call(null, map__6178__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj6180 = {};
  return obj6180;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__6182 = k;
    if (G__6182) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__6182.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__6182.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6182);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6182);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__6196 = x;
      if (G__6196) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__6196.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__6196.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6196);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6196);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj6198 = {};
              return obj6198;
            }();
            var seq__6199_6209 = cljs.core.seq.call(null, x);
            var chunk__6200_6210 = null;
            var count__6201_6211 = 0;
            var i__6202_6212 = 0;
            while (true) {
              if (i__6202_6212 < count__6201_6211) {
                var vec__6203_6213 = cljs.core._nth.call(null, chunk__6200_6210, i__6202_6212);
                var k_6214 = cljs.core.nth.call(null, vec__6203_6213, 0, null);
                var v_6215 = cljs.core.nth.call(null, vec__6203_6213, 1, null);
                m[cljs.core.key__GT_js.call(null, k_6214)] = clj__GT_js.call(null, v_6215);
                var G__6216 = seq__6199_6209;
                var G__6217 = chunk__6200_6210;
                var G__6218 = count__6201_6211;
                var G__6219 = i__6202_6212 + 1;
                seq__6199_6209 = G__6216;
                chunk__6200_6210 = G__6217;
                count__6201_6211 = G__6218;
                i__6202_6212 = G__6219;
                continue;
              } else {
                var temp__4092__auto___6220 = cljs.core.seq.call(null, seq__6199_6209);
                if (temp__4092__auto___6220) {
                  var seq__6199_6221__$1 = temp__4092__auto___6220;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__6199_6221__$1)) {
                    var c__4191__auto___6222 = cljs.core.chunk_first.call(null, seq__6199_6221__$1);
                    var G__6223 = cljs.core.chunk_rest.call(null, seq__6199_6221__$1);
                    var G__6224 = c__4191__auto___6222;
                    var G__6225 = cljs.core.count.call(null, c__4191__auto___6222);
                    var G__6226 = 0;
                    seq__6199_6209 = G__6223;
                    chunk__6200_6210 = G__6224;
                    count__6201_6211 = G__6225;
                    i__6202_6212 = G__6226;
                    continue;
                  } else {
                    var vec__6204_6227 = cljs.core.first.call(null, seq__6199_6221__$1);
                    var k_6228 = cljs.core.nth.call(null, vec__6204_6227, 0, null);
                    var v_6229 = cljs.core.nth.call(null, vec__6204_6227, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_6228)] = clj__GT_js.call(null, v_6229);
                    var G__6230 = cljs.core.next.call(null, seq__6199_6221__$1);
                    var G__6231 = null;
                    var G__6232 = 0;
                    var G__6233 = 0;
                    seq__6199_6209 = G__6230;
                    chunk__6200_6210 = G__6231;
                    count__6201_6211 = G__6232;
                    i__6202_6212 = G__6233;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__6205_6234 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__6206_6235 = null;
              var count__6207_6236 = 0;
              var i__6208_6237 = 0;
              while (true) {
                if (i__6208_6237 < count__6207_6236) {
                  var x_6238__$1 = cljs.core._nth.call(null, chunk__6206_6235, i__6208_6237);
                  arr.push(x_6238__$1);
                  var G__6239 = seq__6205_6234;
                  var G__6240 = chunk__6206_6235;
                  var G__6241 = count__6207_6236;
                  var G__6242 = i__6208_6237 + 1;
                  seq__6205_6234 = G__6239;
                  chunk__6206_6235 = G__6240;
                  count__6207_6236 = G__6241;
                  i__6208_6237 = G__6242;
                  continue;
                } else {
                  var temp__4092__auto___6243 = cljs.core.seq.call(null, seq__6205_6234);
                  if (temp__4092__auto___6243) {
                    var seq__6205_6244__$1 = temp__4092__auto___6243;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__6205_6244__$1)) {
                      var c__4191__auto___6245 = cljs.core.chunk_first.call(null, seq__6205_6244__$1);
                      var G__6246 = cljs.core.chunk_rest.call(null, seq__6205_6244__$1);
                      var G__6247 = c__4191__auto___6245;
                      var G__6248 = cljs.core.count.call(null, c__4191__auto___6245);
                      var G__6249 = 0;
                      seq__6205_6234 = G__6246;
                      chunk__6206_6235 = G__6247;
                      count__6207_6236 = G__6248;
                      i__6208_6237 = G__6249;
                      continue;
                    } else {
                      var x_6250__$1 = cljs.core.first.call(null, seq__6205_6244__$1);
                      arr.push(x_6250__$1);
                      var G__6251 = cljs.core.next.call(null, seq__6205_6244__$1);
                      var G__6252 = null;
                      var G__6253 = 0;
                      var G__6254 = 0;
                      seq__6205_6234 = G__6251;
                      chunk__6206_6235 = G__6252;
                      count__6207_6236 = G__6253;
                      i__6208_6237 = G__6254;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj6256 = {};
  return obj6256;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__6277__delegate = function(x, opts) {
      if (function() {
        var G__6267 = x;
        if (G__6267) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__6267.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__6267.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6267);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6267);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__6268 = opts;
          var map__6268__$1 = cljs.core.seq_QMARK_.call(null, map__6268) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6268) : map__6268;
          var keywordize_keys = cljs.core.get.call(null, map__6268__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__6268, map__6268__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4160__auto__ = function(map__6268, map__6268__$1, keywordize_keys, keyfn) {
                          return function iter__6273(s__6274) {
                            return new cljs.core.LazySeq(null, function(map__6268, map__6268__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__6274__$1 = s__6274;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__6274__$1);
                                  if (temp__4092__auto__) {
                                    var s__6274__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__6274__$2)) {
                                      var c__4158__auto__ = cljs.core.chunk_first.call(null, s__6274__$2);
                                      var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
                                      var b__6276 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
                                      if (function() {
                                        var i__6275 = 0;
                                        while (true) {
                                          if (i__6275 < size__4159__auto__) {
                                            var k = cljs.core._nth.call(null, c__4158__auto__, i__6275);
                                            cljs.core.chunk_append.call(null, b__6276, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__6278 = i__6275 + 1;
                                            i__6275 = G__6278;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6276), iter__6273.call(null, cljs.core.chunk_rest.call(null, s__6274__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6276), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__6274__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__6273.call(null, cljs.core.rest.call(null, s__6274__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__6268, map__6268__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__6268, map__6268__$1, keywordize_keys, keyfn);
                        return iter__4160__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__6268, map__6268__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__6277 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6277__delegate.call(this, x, opts);
    };
    G__6277.cljs$lang$maxFixedArity = 1;
    G__6277.cljs$lang$applyTo = function(arglist__6279) {
      var x = cljs.core.first(arglist__6279);
      var opts = cljs.core.rest(arglist__6279);
      return G__6277__delegate(x, opts);
    };
    G__6277.cljs$core$IFn$_invoke$arity$variadic = G__6277__delegate;
    return G__6277;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__6280__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__6280 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6280__delegate.call(this, args);
    };
    G__6280.cljs$lang$maxFixedArity = 0;
    G__6280.cljs$lang$applyTo = function(arglist__6281) {
      var args = cljs.core.seq(arglist__6281);
      return G__6280__delegate(args);
    };
    G__6280.cljs$core$IFn$_invoke$arity$variadic = G__6280__delegate;
    return G__6280;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__6282 = ret;
        f = G__6282;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__6283__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__6283 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6283__delegate.call(this, f, args);
    };
    G__6283.cljs$lang$maxFixedArity = 1;
    G__6283.cljs$lang$applyTo = function(arglist__6284) {
      var f = cljs.core.first(arglist__6284);
      var args = cljs.core.rest(arglist__6284);
      return G__6283__delegate(f, args);
    };
    G__6283.cljs$core$IFn$_invoke$arity$variadic = G__6283__delegate;
    return G__6283;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__6285) {
    var f = cljs.core.first(arglist__6285);
    var args = cljs.core.rest(arglist__6285);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3443__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      var or__3443__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3443__auto____$1) {
        return or__3443__auto____$1;
      } else {
        var and__3431__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3431__auto__) {
          var and__3431__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3431__auto____$1) {
            var and__3431__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3431__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__6286 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__6287 = i + 1;
                  ret = G__6286;
                  i = G__6287;
                  continue;
                }
                break;
              }
            } else {
              return and__3431__auto____$2;
            }
          } else {
            return and__3431__auto____$1;
          }
        } else {
          return and__3431__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3443__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__6288_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__6288_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__6288_SHARP_), cljs.core.second.call(null, p1__6288_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__6289_SHARP_, p2__6290_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__6289_SHARP_, p2__6290_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3443__auto__ = cljs.core.truth_(function() {
    var and__3431__auto__ = xprefs;
    if (cljs.core.truth_(and__3431__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3431__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    var or__3443__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__6291 = cljs.core.rest.call(null, ps);
          ps = G__6291;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3443__auto____$1)) {
      return or__3443__auto____$1;
    } else {
      var or__3443__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__6292 = cljs.core.rest.call(null, ps);
            ps = G__6292;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3443__auto____$2)) {
        return or__3443__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3443__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__6295) {
    var vec__6296 = p__6295;
    var k = cljs.core.nth.call(null, vec__6296, 0, null);
    var _ = cljs.core.nth.call(null, vec__6296, 1, null);
    var e = vec__6296;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3443__auto__ = be == null;
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj6298 = {};
  return obj6298;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._reset[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._reset["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._add_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._add_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._remove_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._remove_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._prefer_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._get_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._get_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._methods[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._methods["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._prefers[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._prefers["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._dispatch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dispatch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__6299__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__6299 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__6299__delegate.call(this, _, args);
  };
  G__6299.cljs$lang$maxFixedArity = 1;
  G__6299.cljs$lang$applyTo = function(arglist__6300) {
    var _ = cljs.core.first(arglist__6300);
    var args = cljs.core.rest(arglist__6300);
    return G__6299__delegate(_, args);
  };
  G__6299.cljs$core$IFn$_invoke$arity$variadic = G__6299__delegate;
  return G__6299;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("progl.languages");
goog.require("cljs.core");
progl.languages.languages = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "bliss", "bliss", 1107731313), new cljs.core.Keyword(null, "pico", "pico", 1017344919), new cljs.core.Keyword(null, "cobra", "cobra", 1108737431), new cljs.core.Keyword(null, "hypertalk", "hypertalk", 1765429386), new cljs.core.Keyword(null, "intercal", "intercal", 1584304356), new cljs.core.Keyword(null, "applescript", "applescript", 3772963863), new cljs.core.Keyword(null, "sequentielle-formel\u00fcbersetzung", 
"sequentielle-formel\u00fcbersetzung", 4553552113), new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), new cljs.core.Keyword(null, "r", "r", 1013904356), new cljs.core.Keyword(null, "dart", "dart", 1016980209), new cljs.core.Keyword(null, "mimic", "mimic", 1117804189), new cljs.core.Keyword(null, "opl", "opl", 1014014493), new cljs.core.Keyword(null, "object-rexx", "object-rexx", 3985440179), new cljs.core.Keyword(null, "rebol", "rebol", 1122292254), new cljs.core.Keyword(null, "it", "it", 
1013907613), new cljs.core.Keyword(null, "cbasic", "cbasic", 3941698845), new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), new cljs.core.Keyword(null, "mapper", "mapper", 4227510707), new cljs.core.Keyword(null, "comtran", "comtran", 1964523422), new cljs.core.Keyword(null, "clu", "clu", 1014002846), new cljs.core.Keyword(null, "logo", "logo", 1017231645), new cljs.core.Keyword(null, "curl", "curl", 1016969630), new cljs.core.Keyword(null, "cdl", "cdl", 1014002589), new cljs.core.Keyword(null, 
"m2001", "m2001", 1116105246), new cljs.core.Keyword(null, "ipl-i", "ipl-i", 1114315827), new cljs.core.Keyword(null, "lis", "lis", 1014011400), new cljs.core.Keyword(null, "ada-95", "ada-95", 3886218781), new cljs.core.Keyword(null, "klammerausdr\u00fccke", "klammerausdr\u00fccke", 2046840883), new cljs.core.Keyword(null, "coffeescript", "coffeescript", 3529808649), new cljs.core.Keyword(null, "cs-4", "cs-4", 1016965513), new cljs.core.Keyword(null, "print", "print", 1120839199), new cljs.core.Keyword(null, 
"telcomp", "telcomp", 3879460124), new cljs.core.Keyword(null, "algae", "algae", 1106805298), new cljs.core.Keyword(null, "miranda", "miranda", 2081898546), new cljs.core.Keyword(null, "matlab", "matlab", 4227625887), new cljs.core.Keyword(null, "mark-iv", "mark-iv", 1853100959), new cljs.core.Keyword(null, "basic", "basic", 1107412896), new cljs.core.Keyword(null, "matrix-math", "matrix-math", 617362694), new cljs.core.Keyword(null, "borland-pascal", "borland-pascal", 1175582363), new cljs.core.Keyword(null, 
"sue", "sue", 1014018485), new cljs.core.Keyword(null, "curry-notation-system", "curry-notation-system", 4650721414), new cljs.core.Keyword("mad", "i", "mad/i", 1020791775), new cljs.core.Keyword(null, "ceylon", "ceylon", 3945177862), new cljs.core.Keyword(null, "xslt", "xslt", 1017593141), new cljs.core.Keyword(null, "harbour", "harbour", 1710345525), new cljs.core.Keyword(null, "borland-delphi", "borland-delphi", 835530805), new cljs.core.Keyword(null, "true-basic", "true-basic", 2672520865), new cljs.core.Keyword(null, 
"freebasic", "freebasic", 582669492), new cljs.core.Keyword(null, "boo", "boo", 1014001972), new cljs.core.Keyword(null, "boehm-unnamed-coding-system", "boehm-unnamed-coding-system", 2386620807), new cljs.core.Keyword(null, "standard-ml", "standard-ml", 4144739873), new cljs.core.Keyword(null, "ampl", "ampl", 1016902298), new cljs.core.Keyword(null, "commodore-basic", "commodore-basic", 2027863092), new cljs.core.Keyword(null, "unrealscript", "unrealscript", 2045858484), new cljs.core.Keyword(null, 
"gw-basic", "gw-basic", 4050285699), new cljs.core.Keyword(null, "speakeasy-iv", "speakeasy-iv", 1513594424), new cljs.core.Keyword(null, "python", "python", 4335674446), new cljs.core.Keyword(null, "red", "red", 1014017027), new cljs.core.Keyword(null, "scala", "scala", 1123155128), new cljs.core.Keyword(null, "gnu-e", "gnu-e", 1112417848), new cljs.core.Keyword(null, "occam", "occam", 1119462637), new cljs.core.Keyword(null, "chapel", "chapel", 3947236973), new cljs.core.Keyword(null, "abap", "abap", 
1016891266), new cljs.core.Keyword(null, "tcl", "tcl", 1014018895), new cljs.core.Keyword(null, "spark", "spark", 1123542607), new cljs.core.Keyword(null, "ibm-rpg", "ibm-rpg", 2620284546), new cljs.core.Keyword(null, "lasso", "lasso", 1116648428), new cljs.core.Keyword(null, "speakeasy-3", "speakeasy-3", 2831138540), new cljs.core.Keyword(null, "unicode", "unicode", 726888015), new cljs.core.Keyword(null, "omnibac-symbolic-assembler", "omnibac-symbolic-assembler", 1904982201), new cljs.core.Keyword(null, 
"tea", "tea", 1014018946), new cljs.core.Keyword(null, "netrexx", "netrexx", 2857231106), new cljs.core.Keyword(null, "claire", "claire", 3950924726), new cljs.core.Keyword(null, "editing-generator", "editing-generator", 1812351056), new cljs.core.Keyword(null, "a-0", "a-0", 1013998902), new cljs.core.Keyword(null, "icon", "icon", 1017130987), new cljs.core.Keyword(null, "pike", "pike", 1017345157), new cljs.core.Keyword(null, "islisp", "islisp", 4129492022), new cljs.core.Keyword(null, "standard-cpp", 
"standard-cpp", 3580518917), new cljs.core.Keyword(null, "processing", "processing", 1436099205), new cljs.core.Keyword(null, "speakeasy-2", "speakeasy-2", 2831138539), new cljs.core.Keyword(null, "fsharp", "fsharp", 4043477686), new cljs.core.Keyword(null, "mathematica", "mathematica", 847399222), new cljs.core.Keyword(null, "fantom", "fantom", 4027051217), new cljs.core.Keyword(null, "ada-2005", "ada-2005", 3938960388), new cljs.core.Keyword(null, "lua", "lua", 1014011754), new cljs.core.Keyword(null, 
"standard-mumps", "standard-mumps", 2228763882), new cljs.core.Keyword(null, "quorum", "quorum", 4360470353), new cljs.core.Keyword(null, "dibol-8", "dibol-8", 2669937079), new cljs.core.Keyword(null, "aspectj", "aspectj", 4601309828), new cljs.core.Keyword(null, "lpc", "lpc", 1014011601), new cljs.core.Keyword(null, "f-script", "f-script", 3062173572), new cljs.core.Keyword(null, "php", "php", 1014015210), new cljs.core.Keyword(null, "pure", "pure", 1017356906), new cljs.core.Keyword(null, "pop-2", 
"pop-2", 1120754472), new cljs.core.Keyword(null, "visual-basic", "visual-basic", 1513288403), new cljs.core.Keyword(null, "quickbasic", "quickbasic", 2695777747), new cljs.core.Keyword(null, "purebasic", "purebasic", 3569071016), new cljs.core.Keyword(null, "lolcode", "lolcode", 1360689192), new cljs.core.Keyword(null, "eiffel", "eiffel", 4005558141), new cljs.core.Keyword(null, "promal", "promal", 4329065213), new cljs.core.Keyword(null, "grass", "grass", 1112519976), new cljs.core.Keyword(null, 
"tutor", "tutor", 1124633256), new cljs.core.Keyword(null, "occam-2", "occam-2", 3671275474), new cljs.core.Keyword(null, "vissim", "vissim", 4492653609), new cljs.core.Keyword(null, "livescript", "livescript", 2785154089), new cljs.core.Keyword(null, "modula-2", "modula-2", 4704609663), new cljs.core.Keyword(null, "ada-83", "ada-83", 3886218748), new cljs.core.Keyword(null, "vala", "vala", 1017516242), new cljs.core.Keyword(null, "bacaic", "bacaic", 3912188457), new cljs.core.Keyword(null, "brief-code", 
"brief-code", 4058879698), new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "modula-3", "modula-3", 4704609664), new cljs.core.Keyword(null, "jovial", "jovial", 4154724437), new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), new cljs.core.Keyword(null, "groovy", "groovy", 4071405440), new cljs.core.Keyword(null, "pop-1", "pop-1", 1120754471), new cljs.core.Keyword(null, "abc", "abc", 1014000596), new cljs.core.Keyword(null, "mumps", "mumps", 1118161914), 
new cljs.core.Keyword(null, "alma-0", "alma-0", 3894014036), new cljs.core.Keyword(null, "joss-ii", "joss-ii", 3887527162), new cljs.core.Keyword(null, "altair-basic", "altair-basic", 1387137492), new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, "common-lisp", "common-lisp", 3337688750), new cljs.core.Keyword(null, "simula-67", "simula-67", 3327469005), new cljs.core.Keyword(null, "amos-basic", "amos-basic", 4526837411), new cljs.core.Keyword(null, "coral66", "coral66", 
1968567843), new cljs.core.Keyword(null, "seed7", "seed7", 1123218264), new cljs.core.Keyword(null, "regional-assembly-language", "regional-assembly-language", 2996202147), new cljs.core.Keyword(null, "idl", "idl", 1014008355), new cljs.core.Keyword(null, "stos-basic", "stos-basic", 1222314968), new cljs.core.Keyword(null, "mesa", "mesa", 1017252184), new cljs.core.Keyword(null, "component-pascal", "component-pascal", 2090176046), new cljs.core.Keyword(null, "p\u2032\u2032", "p\u2032\u2032", 1014275618), 
new cljs.core.Keyword(null, "eniac-coding-system", "eniac-coding-system", 1608213465), new cljs.core.Keyword(null, "blue", "blue", 1016931276), new cljs.core.Keyword(null, "perl-data-language", "perl-data-language", 3952455471), new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), new cljs.core.Keyword(null, "octave", "octave", 4286721314), new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), new cljs.core.Keyword(null, "d", "d", 1013904342), new cljs.core.Keyword(null, "birkbeck-assembler", 
"birkbeck-assembler", 2557645232), new cljs.core.Keyword(null, "rust", "rust", 1017416534), new cljs.core.Keyword(null, "gamemaker-language", "gamemaker-language", 1531435685), new cljs.core.Keyword(null, "squeak-smalltalk", "squeak-smalltalk", 1157327920), new cljs.core.Keyword(null, "newtonscript", "newtonscript", 2509907376), new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), new cljs.core.Keyword(null, "squirrel", "squirrel", 4527387339), new cljs.core.Keyword(null, "optimj", 
"optimj", 4298734501), new cljs.core.Keyword(null, "laning-and-zierler-system", "laning-and-zierler-system", 4586357835), new cljs.core.Keyword(null, "turbo-pascal-oop", "turbo-pascal-oop", 3250795440), new cljs.core.Keyword(null, "clojure", "clojure", 1880188502), new cljs.core.Keyword(null, "dylan", "dylan", 1109967958), new cljs.core.Keyword(null, "julia", "julia", 1115390155), new cljs.core.Keyword(null, "ansi-common-lisp", "ansi-common-lisp", 2148998948), new cljs.core.Keyword(null, "draco", 
"draco", 1109748913), new cljs.core.Keyword(null, "e", "e", 1013904343), new cljs.core.Keyword(null, "basic-four", "basic-four", 4138318551), new cljs.core.Keyword(null, "labview", "labview", 951206180), new cljs.core.Keyword(null, "turbo-basic", "turbo-basic", 1719524145), new cljs.core.Keyword(null, "krl", "krl", 1014010711), new cljs.core.Keyword(null, "ada-iso-8652", "ada-iso-8652", 4541786660), new cljs.core.Keyword("read", "print", "read/print", 1342647190), new cljs.core.Keyword(null, "join-java", 
"join-java", 4768304215), new cljs.core.Keyword(null, "sas", "sas", 1014017879), new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), new cljs.core.Keyword(null, "prose-modeling-language-time-sharing-version", "prose-modeling-language-time-sharing-version", 2632145352), new cljs.core.Keyword(null, "ans-forth", "ans-forth", 589728200), new cljs.core.Keyword(null, "genie", "genie", 1112144862), new cljs.core.Keyword(null, "joss-i", "joss-i", 4154643059), new cljs.core.Keyword(null, "actionscript", 
"actionscript", 3422437875), new cljs.core.Keyword(null, "ppl", "ppl", 1014015454), new cljs.core.Keyword(null, "comit", "comit", 1108747742), new cljs.core.Keyword(null, "fact", "fact", 1017039326), new cljs.core.Keyword(null, "comal", "comal", 1108747486), new cljs.core.Keyword(null, "k", "k", 1013904349), new cljs.core.Keyword(null, "ibm-basica", "ibm-basica", 1692471006), new cljs.core.Keyword(null, "ocaml", "ocaml", 1119461086), new cljs.core.Keyword(null, "postscript", "postscript", 3533464797), 
new cljs.core.Keyword(null, "arc-assembly", "arc-assembly", 3871520371), new cljs.core.Keyword(null, "oz", "oz", 1013907805), new cljs.core.Keyword(null, "subtext", "subtext", 3441284831), new cljs.core.Keyword(null, "paradox", "paradox", 4515367135), new cljs.core.Keyword(null, "mark-i-autocode", "mark-i-autocode", 1168116594), new cljs.core.Keyword(null, "j", "j", 1013904348), new cljs.core.Keyword(null, "brainfuck", "brainfuck", 4388222175), new cljs.core.Keyword(null, "ttm", "ttm", 1014019423), 
new cljs.core.Keyword(null, "object-oberon", "object-oberon", 4712428895), new cljs.core.Keyword(null, "a+", "a+", 1013907292), new cljs.core.Keyword(null, "ksh", "ksh", 1014010738), new cljs.core.Keyword(null, "javascript", "javascript", 1202900191), new cljs.core.Keyword(null, "rpl", "rpl", 1014017376), new cljs.core.Keyword(null, "joy", "joy", 1014009670), new cljs.core.Keyword(null, "green", "green", 1112523381), new cljs.core.Keyword(null, "plankalk\u00fcl", "plankalk\u00fcl", 2093938400), new cljs.core.Keyword(null, 
"corvision", "corvision", 4217902176), new cljs.core.Keyword(null, "gfa-basic", "gfa-basic", 2773014901), new cljs.core.Keyword(null, "cowsel", "cowsel", 3954359905), new cljs.core.Keyword(null, "modula", "modula", 4240087514), new cljs.core.Keyword(null, "gdscript", "gdscript", 2078078810), new cljs.core.Keyword(null, "coldfusion", "coldfusion", 807719770), new cljs.core.Keyword(null, "windows-powershell", "windows-powershell", 1119735111), new cljs.core.Keyword(null, "sh", "sh", 1013907911), new cljs.core.Keyword(null, 
"perl", "perl", 1017341537), new cljs.core.Keyword(null, "go", "go", 1013907546), new cljs.core.Keyword(null, "falcon", "falcon", 4026975299), new cljs.core.Keyword(null, "autocode", "autocode", 2453081998), new cljs.core.Keyword(null, "mad", "mad", 1014012098), new cljs.core.Keyword("pl", "m", "pl/m", 1014131474), new cljs.core.Keyword(null, "revolution-transcript", "revolution-transcript", 1009131564), new cljs.core.Keyword(null, "object-pascal", "object-pascal", 4740536748), new cljs.core.Keyword(null, 
"compool", "compool", 1964401807), new cljs.core.Keyword(null, "ada-80", "ada-80", 3886218745), new cljs.core.Keyword(null, "fortran-i", "fortran-i", 3041025986), new cljs.core.Keyword(null, "apl", "apl", 1014001039), new cljs.core.Keyword(null, "small", "small", 1123453049), new cljs.core.Keyword(null, "fortran-66", "fortran-66", 3725134635), new cljs.core.Keyword(null, "ratfor", "ratfor", 4370766326), new cljs.core.Keyword(null, "fortress", "fortress", 1494941328), new cljs.core.Keyword(null, "short-code", 
"short-code", 2533207056), new cljs.core.Keyword(null, "atlas-autocode", "atlas-autocode", 2973645456), new cljs.core.Keyword(null, "bbc-basic", "bbc-basic", 2319085942), new cljs.core.Keyword(null, "links", "links", 1116881707), new cljs.core.Keyword(null, "oberon-2", "oberon-2", 973610230), new cljs.core.Keyword(null, "smalltalk-76", "smalltalk-76", 2856985643), new cljs.core.Keyword(null, "cobol", "cobol", 1108737349), new cljs.core.Keyword(null, "visicalc", "visicalc", 2598067600), new cljs.core.Keyword(null, 
"arith-matic", "arith-matic", 577039275), new cljs.core.Keyword(null, "typescript", "typescript", 4786585591), new cljs.core.Keyword(null, "oberon", "oberon", 4285367057), new cljs.core.Keyword(null, "gom", "gom", 1014006775), new cljs.core.Keyword(null, "cpl", "cpl", 1014002961), new cljs.core.Keyword(null, "ml", "ml", 1013907729), new cljs.core.Keyword(null, "interlisp", "interlisp", 1516714728), new cljs.core.Keyword(null, "zpl", "zpl", 1014025064), new cljs.core.Keyword(null, "stanislaus", "stanislaus", 
4183982653), new cljs.core.Keyword(null, "hack", "hack", 1017098899), new cljs.core.Keyword(null, "self", "self", 1017430718), new cljs.core.Keyword(null, "snobol", "snobol", 4411248445), new cljs.core.Keyword(null, "iitran", "iitran", 4120503229), new cljs.core.Keyword(null, "little-b", "little-b", 2388891325), new cljs.core.Keyword(null, "fp", "fp", 1013907516), new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), new cljs.core.Keyword(null, "setl", "setl", 1017430972), new cljs.core.Keyword(null, 
"clipper", "clipper", 1874820927), new cljs.core.Keyword(null, "whirlwind-assembler", "whirlwind-assembler", 2878051647), new cljs.core.Keyword(null, "eulisp", "eulisp", 4016822460), new cljs.core.Keyword(null, "open-source-erlang", "open-source-erlang", 2995191612), new cljs.core.Keyword(null, "intermediate-programming-language", "intermediate-programming-language", 3982129554), new cljs.core.Keyword(null, "trac", "trac", 1017472658), new cljs.core.Keyword(null, "prolog", "prolog", 4329064681), 
new cljs.core.Keyword(null, "gosu", "gosu", 1017083068), new cljs.core.Keyword(null, "xpl", "xpl", 1014023142), new cljs.core.Keyword(null, "snobol4", "snobol4", 3252359483), new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), new cljs.core.Keyword(null, "eniac-short-code", "eniac-short-code", 1532323259), new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), new cljs.core.Keyword(null, "c-with-classes", "c-with-classes", 2317858491), new cljs.core.Keyword(null, "ipl-v", "ipl-v", 1114315840), 
new cljs.core.Keyword(null, "yellow", "yellow", 4574631910), new cljs.core.Keyword(null, "powerbasic", "powerbasic", 1457068475), new cljs.core.Keyword(null, "clean", "clean", 1108650427), new cljs.core.Keyword(null, "xl", "xl", 1013908070), new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), new cljs.core.Keyword(null, "sql", "sql", 1014018368), new cljs.core.Keyword(null, "fancy", "fancy", 1111102011), new cljs.core.Keyword(null, "algol-w", "algol-w", 4392898453), new cljs.core.Keyword(null, 
"false", "false", 1111100565), new cljs.core.Keyword(null, "objective-c", "objective-c", 4040968257), new cljs.core.Keyword(null, "factor", "factor", 4026723521), new cljs.core.Keyword(null, "java", "java", 1017159060), new cljs.core.Keyword(null, "snobol3", "snobol3", 3252359482), new cljs.core.Keyword(null, "awk", "awk", 1014001255), new cljs.core.Keyword(null, "vulcan-dbase-ii", "vulcan-dbase-ii", 1833441172), new cljs.core.Keyword(null, "sort-merge-generator", "sort-merge-generator", 2710776001), 
new cljs.core.Keyword(null, "pikt", "pikt", 1017345172), new cljs.core.Keyword(null, "zsh", "zsh", 1014025153), new cljs.core.Keyword(null, "cobol-61", "cobol-61", 4393526375), new cljs.core.Keyword(null, "ipl-ii", "ipl-ii", 4126663482), new cljs.core.Keyword(null, "math-matic", "math-matic", 1344963303), new cljs.core.Keyword(null, "oberon-07", "oberon-07", 4059757159), new cljs.core.Keyword(null, "q", "q", 1013904355), new cljs.core.Keyword(null, "visual-basic-.net", "visual-basic-.net", 4503182605), 
new cljs.core.Keyword(null, "io", "io", 1013907608), new cljs.core.Keyword(null, "rapid", "rapid", 1122186350), new cljs.core.Keyword(null, "von-neumann-and-goldstine-graphing-system", "von-neumann-and-goldstine-graphing-system", 3258107491), new cljs.core.Keyword(null, "erlang", "erlang", 4014044045), new cljs.core.Keyword(null, "nemerle", "nemerle", 2850391278), new cljs.core.Keyword(null, "flow-matic", "flow-matic", 4616931469), new cljs.core.Keyword(null, "fortran-iv", "fortran-iv", 3725136280), 
new cljs.core.Keyword(null, "speedcoding", "speedcoding", 3545064931), new cljs.core.Keyword(null, "edinburgh-imp", "edinburgh-imp", 3776327181), new cljs.core.Keyword(null, "elm", "elm", 1014004760), new cljs.core.Keyword(null, "iswim", "iswim", 1114417635), new cljs.core.Keyword(null, "cpc-coding-scheme", "cpc-coding-scheme", 4685641955), new cljs.core.Keyword(null, "ferite", "ferite", 4030854041), new cljs.core.Keyword(null, "forth", "forth", 1111523439), new cljs.core.Keyword(null, "lisp", "lisp", 
1017226252), new cljs.core.Keyword(null, "ecmascript", "ecmascript", 4360102255), new cljs.core.Keyword(null, "bcpl", "bcpl", 1016922479), new cljs.core.Keyword(null, "plus", "plus", 1017348364), new cljs.core.Keyword("pl", "i", "pl/i", 1014131478), new cljs.core.Keyword(null, "s", "s", 1013904357), new cljs.core.Keyword(null, "redcode", "redcode", 2097064304), new cljs.core.Keyword(null, "refal", "refal", 1122295664), new cljs.core.Keyword(null, "simula", "simula", 4406589413), new cljs.core.Keyword(null, 
"sam76", "sam76", 1123105392), new cljs.core.Keyword(null, "rochester-assembler", "rochester-assembler", 1978936342), new cljs.core.Keyword(null, "pact-i", "pact-i", 4313012976), new cljs.core.Keyword(null, "superplan", "superplan", 681883798), new cljs.core.Keyword(null, "fortran-ii", "fortran-ii", 3725136267), new cljs.core.Keyword(null, "informix-4gl", "informix-4gl", 2141856406), new cljs.core.Keyword(null, "rexx", "rexx", 1017401317), new cljs.core.Keyword(null, "prose-modeling-language", "prose-modeling-language", 
3878284656)], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1970, new cljs.core.Keyword(null, "name", "name", 1017277949), "BLISS", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Russell", null, "Habermann at Carnegie Mellon University", null, "Wulf", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/BLISS"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "Pico", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Free University of Brussels", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Pico_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2006, new cljs.core.Keyword(null, "name", "name", 1017277949), "Cobra", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["ChuckEsterbrook", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"python", "python", 4335674446), null, new cljs.core.Keyword(null, "eiffel", "eiffel", 4005558141), null, new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null, new cljs.core.Keyword(null, "objective-c", "objective-c", 4040968257), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Cobra_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "HyperTalk", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Apple Computer Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/HyperTalk"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1972, new cljs.core.Keyword(null, "name", "name", 1017277949), "INTERCAL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Don Woods and James M. Lyon", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/INTERCAL"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "AppleScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Apple Computer Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "hypertalk", "hypertalk", 1765429386), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/AppleScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1955, new cljs.core.Keyword(null, "name", "name", 1017277949), "Sequentielle Formel\u00fcbersetzung", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Fritz Bauer and Karl Samelson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "boehm-unnamed-coding-system", "boehm-unnamed-coding-system", 2386620807), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1975, new cljs.core.Keyword(null, "name", "name", 1017277949), "Scheme", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Sussman", null, "Steele", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Scheme_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "R", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Robert Gentleman and Ross Ihaka", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "s", "s", 1013904357), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/R_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2011, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Dart", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Google", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "coffeescript", "coffeescript", 3529808649), null, new cljs.core.Keyword(null, "javascript", "javascript", 
1202900191), null, new cljs.core.Keyword(null, "go", "go", 1013907546), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Dart_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "MIMIC", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["H. E. Petersen", null, "et al.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MIMIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", 
"name", 1017277949), "OPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["PSION", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Open_programming_language"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1988, new cljs.core.Keyword(null, "name", "name", 1017277949), "Object REXX", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Simon C. Nash", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rexx", "rexx", 1017401317), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Object_REXX"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "REBOL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, ["Carl Sassenrath", null, "Rebol Technologies", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "logo", "logo", 1017231645), null, new cljs.core.Keyword(null, "self", "self", 1017430718), null, new cljs.core.Keyword(null, "forth", "forth", 1111523439), null, new cljs.core.Keyword(null, "lisp", "lisp", 
1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/REBOL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1955, new cljs.core.Keyword(null, "name", "name", 1017277949), "IT", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Team led by Alan Perlis", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "laning-and-zierler-system", "laning-and-zierler-system", 4586357835), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1980, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"CBASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Gordon Eubanks", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/CBASIC"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, "name", "name", 1017277949), "ALGOL 68", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["B.J. Mailloux", null, "et al.", null, "J.E.L. Peck and Cornelis H. A. Koster", null, "A. van Wijngaarden", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ALGOL_68"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, "name", "name", 1017277949), "MAPPER", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Unisys", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MAPPER"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1957, new cljs.core.Keyword(null, "name", 
"name", 1017277949), "COMTRAN", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Bob Bemer", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "flow-matic", "flow-matic", 4616931469), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/COMTRAN"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1974, new cljs.core.Keyword(null, "name", "name", 1017277949), "CLU", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Barbara Liskov", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null, new cljs.core.Keyword(null, "simula", "simula", 4406589413), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/CLU_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "LOGO", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Papert", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/Logo_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1996, new cljs.core.Keyword(null, "name", "name", 1017277949), "Curl", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Steve Ward", null, "Chris Terman at MIT", null, "David Kranz", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Curl_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1971, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "CDL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Koster at University of Nijmegen", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Compiler_Description_Language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1998, new cljs.core.Keyword(null, "name", "name", 1017277949), "M2001", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Ronald E. Prather", null, "Trinity University (Texas)", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/M2001"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, "name", "name", 1017277949), "IPL I", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Herbert A. Simon", null, "Cliff Shaw", null, "Allen Newell", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Information_Processing_Language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1973, new cljs.core.Keyword(null, "name", "name", 1017277949), "LIS", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ichbiah et al. at CII Honeywell Bull", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sue", "sue", 1014018485), null, new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/LIS_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ada 95", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["S. Tucker Taft", null, "et al. at Intermetrics", null, "Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"ada-83", "ada-83", 3886218748), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ada_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Klammerausdr\u00fccke", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Konrad Zuse", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "plankalk\u00fcl", "plankalk\u00fcl", 2093938400), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2009, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "CoffeeScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jeremy Ashkenas", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "python", "python", 4335674446), null, new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), 
null, new cljs.core.Keyword(null, "javascript", "javascript", 1202900191), null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/CoffeeScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1975, new cljs.core.Keyword(null, "name", "name", 1017277949), "CS-4", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Miller", null, "Brosgol et al. at Intermetrics", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bliss", "bliss", 1107731313), null, new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null], null), null), new cljs.core.Keyword(null, "url", "url", 
1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1955, new cljs.core.Keyword(null, "name", "name", 1017277949), "PRINT", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, 
new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1965, new cljs.core.Keyword(null, "name", "name", 1017277949), "TELCOMP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["BBN", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "joss-i", "joss-i", 4154643059), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/TELCOMP"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "ALGAE", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Edward A Voorhees and Karl Balke", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 
1017277949), "Miranda", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["David Turner at University of Kent", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Miranda_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1978, new cljs.core.Keyword(null, "name", "name", 1017277949), "MATLAB", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Moler at the University of New Mexico", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MATLAB"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "Mark-IV", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Informatics", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/MARK_IV_(software)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "BASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Kemeny and Kurtz at Dartmouth College", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "joss-i", "joss-i", 4154643059), null, new cljs.core.Keyword(null, "fortran-ii", "fortran-ii", 3725136267), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/BASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "MATRIX MATH", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["H G Kahrimanian", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1992, new cljs.core.Keyword(null, "name", "name", 1017277949), "Borland Pascal", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "turbo-pascal-oop", "turbo-pascal-oop", 3250795440), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Turbo_Pascal"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1971, new cljs.core.Keyword(null, "name", "name", 1017277949), "Sue", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Holt et al. at University of Toronto", null], null), null), 
new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null, new cljs.core.Keyword(null, "xpl", "xpl", 1014023142), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1948, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Curry notation system", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Haskell Curry", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eniac-coding-system", "eniac-coding-system", 1608213465), null], null), null), 
new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1965, new cljs.core.Keyword(null, "name", "name", 1017277949), "MAD/I", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["University of Michigan", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null, new cljs.core.Keyword(null, "mad", "mad", 1014012098), null, new cljs.core.Keyword("pl", "i", "pl/i", 1014131478), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MAD_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 2011, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ceylon", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Red Hat", null, "Gavin King", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "java", "java", 
1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ceylon_Project"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1999, new cljs.core.Keyword(null, "name", "name", 1017277949), "XSLT", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["W3C", null, "James Clark", null], null), 
null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/XSL_Transformations"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1999, new cljs.core.Keyword(null, "name", "name", 1017277949), "Harbour", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Antonio Linares", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vulcan-dbase-ii", "vulcan-dbase-ii", 1833441172), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Harbour_(software)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "Borland Delphi", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Anders Hejlsberg at Borland", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"borland-pascal", "borland-pascal", 1175582363), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/CodeGear_Delphi"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 1017277949), "True BASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, 
["Kurtz at Dartmouth College", null, "Kemeny", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/True_BASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 
2004, new cljs.core.Keyword(null, "name", "name", 1017277949), "FreeBASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["V1ctor", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/FreeBASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2004, new cljs.core.Keyword(null, "name", "name", 1017277949), "Boo", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Rodrigo B. de Oliveira", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "python", "python", 4335674446), null, new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Boo_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", 
"name", 1017277949), "Boehm unnamed coding system", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Corrado B\u00f6hm", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cpc-coding-scheme", "cpc-coding-scheme", 4685641955), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", "name", 1017277949), "Standard ML", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ml", "ml", 1013907729), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Standard_ML"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, "name", "name", 1017277949), "AMPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, ["David Gay and Brian Kernighan at Bell Laboratories", null, "Robert Fourer", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/AMPL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "Commodore BASIC", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jack Tramiel", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Commodore_BASIC"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1998, new cljs.core.Keyword(null, "name", "name", 1017277949), "UnrealScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Tim Sweeney at Epic Games", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/UnrealScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 1017277949), "GW-BASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Microsoft", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ibm-basica", "ibm-basica", 1692471006), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/GW-BASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1982, new cljs.core.Keyword(null, "name", "name", 1017277949), "Speakeasy-IV", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["et al. at Speakeasy Computing Corporation", null, "Stanley Cohen", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"speakeasy-3", "speakeasy-3", 2831138540), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Speakeasy_(computational_environment)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1991, new cljs.core.Keyword(null, "name", "name", 1017277949), "Python", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Van Rossum", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null, new cljs.core.Keyword(null, "icon", "icon", 1017130987), null, new cljs.core.Keyword(null, "modula-3", "modula-3", 4704609664), null, new cljs.core.Keyword(null, "abc", "abc", 1014000596), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Python_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "Red", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Brosgol et al. at Intermetrics for US Dept of Defense", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null, new cljs.core.Keyword(null, "cs-4", "cs-4", 1016965513), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Red_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2003, 
new cljs.core.Keyword(null, "name", "name", 1017277949), "Scala", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Martin Odersky", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "standard-ml", "standard-ml", 4144739873), null, new cljs.core.Keyword(null, 
"smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "ocaml", "ocaml", 1119461086), null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Scala_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1991, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "GNU E", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["David J. DeWitt", null, "Michael J. Carey", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/GNU_E"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 1017277949), "occam", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["David May", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, 
new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Occam_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2010, new cljs.core.Keyword(null, "name", "name", 1017277949), "Chapel", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Cray Inc.", null, "Brad Chamberlain", null], null), null), 
new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "zpl", "zpl", 1014025064), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Chapel_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 
1017277949), "ABAP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["SAP AG", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cobol", "cobol", 1108737349), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ABAP"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1988, new cljs.core.Keyword(null, "name", "name", 1017277949), "Tcl", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ousterhout", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "awk", "awk", 1014001255), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Tcl"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1988, new cljs.core.Keyword(null, "name", "name", 1017277949), "SPARK", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Bernard A. Carr\u00e9", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ada-80", "ada-80", 3886218745), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SPARK_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "IBM RPG", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/IBM_RPG"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1996, new cljs.core.Keyword(null, "name", "name", 1017277949), "Lasso", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Blue World Communications Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", 
"url", 1014020321), "/wiki/Lasso_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1973, new cljs.core.Keyword(null, "name", "name", 1017277949), "Speakeasy-3", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Steven Pieper at Argonne National Laboratory", null, "Stanley Cohen", null], null), null), 
new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "speakeasy-2", "speakeasy-2", 2831138539), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Speakeasy_(computational_environment)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1957, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "UNICODE", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Remington Rand UNIVAC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "math-matic", "math-matic", 1344963303), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "OMNIBAC Symbolic Assembler", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Charles Katz", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "short-code", "short-code", 2533207056), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "Tea", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jorge Nunes", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), null, new cljs.core.Keyword(null, "tcl", "tcl", 1014018895), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Tea_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1996, new cljs.core.Keyword(null, "name", "name", 1017277949), "NetRexx", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Cowlishaw", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rexx", "rexx", 1017401317), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/REXX"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1994, new cljs.core.Keyword(null, "name", "name", 1017277949), "Claire", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Yves Caseau", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "ml", "ml", 1013907729), null, new cljs.core.Keyword(null, "setl", "setl", 
1017430972), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Claire_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1952, new cljs.core.Keyword(null, "name", "name", 1017277949), "Editing Generator", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Milly Koss", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sort-merge-generator", "sort-merge-generator", 2710776001), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1952, new cljs.core.Keyword(null, "name", "name", 1017277949), "A-0", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Grace Hopper", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "short-code", "short-code", 2533207056), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/A-0_System"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1979, new cljs.core.Keyword(null, "name", "name", 1017277949), "Icon", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Griswold", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "snobol", "snobol", 4411248445), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Icon_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1994, new cljs.core.Keyword(null, "name", "name", 1017277949), "Pike", 
new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Fredrik H\u00fcbinette et al. at Link\u00f6ping University", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "lpc", "lpc", 1014011601), null, new cljs.core.Keyword(null, "c", "c", 1013904341), null], 
null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Pike_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "ISLISP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["ISO Standard ISLISP", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "common-lisp", "common-lisp", 3337688750), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ISLISP"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1998, new cljs.core.Keyword(null, "name", "name", 1017277949), "Standard C++", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["ANSI/ISO Standard C++", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/C%2B%2B"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2001, new cljs.core.Keyword(null, "name", "name", 1017277949), "Processing", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Casey Reas and Ben Fry", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, 
new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Processing_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "Speakeasy-2", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Stanley Cohen at Argonne National Laboratory", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Speakeasy_(computational_environment)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2005, new cljs.core.Keyword(null, "name", "name", 1017277949), "F#", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, ["Microsoft Research", null, "Don Syme", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null, new cljs.core.Keyword(null, "ocaml", "ocaml", 1119461086), null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/F_Sharp_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 1017277949), "Mathematica", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Wolfram Research", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Mathematica"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2007, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fantom", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Andy Frank", 
null, "Brian Frank", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "scala", "scala", 1123155128), null, new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), null, new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null, new cljs.core.Keyword(null, "erlang", "erlang", 4014044045), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Fantom_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2007, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ada 2005", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ada Rapporteur Group", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ada-95", "ada-95", 3886218781), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ada_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "Lua", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["PUC-Rio", null, "Roberto Ierusalimschy et al. at Tecgraf", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), null, new cljs.core.Keyword(null, "clu", "clu", 1014002846), null, new cljs.core.Keyword(null, 
"modula", "modula", 4240087514), null, new cljs.core.Keyword(null, "snobol", "snobol", 4411248445), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Lua_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "Standard MUMPS", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mumps", "mumps", 1118161914), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MUMPS"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 2012, new cljs.core.Keyword(null, "name", "name", 1017277949), "Quorum", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["Susanna Siebert", null, "Andreas Stefik", null, "Kim Slattery", null, "Melissa Stefik", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), null, new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, "name", "name", 1017277949), "DIBOL-8", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["DEC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/DIBOL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2001, new cljs.core.Keyword(null, "name", "name", 
1017277949), "AspectJ", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Xerox PARC", null, "Gregor Kiczales", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "common-lisp", "common-lisp", 3337688750), null, new cljs.core.Keyword(null, "java", "java", 
1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/AspectJ"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1989, new cljs.core.Keyword(null, "name", "name", 1017277949), "LPC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Lars Pensj\u00f6", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/LPC_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "F-Script", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Philippe Mougin", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "apl", "apl", 1014001039), null, new cljs.core.Keyword(null, "objective-c", "objective-c", 4040968257), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/F-Script_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "PHP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Rasmus Lerdorf", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "perl", "perl", 1017341537), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PHP"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2008, new cljs.core.Keyword(null, "name", "name", 1017277949), "Pure", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Albert Gr\u00e4f", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "q", "q", 1013904355), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Pure_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1970, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "POP-2", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pop-1", "pop-1", 1120754471), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/POP-2"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1991, new cljs.core.Keyword(null, "name", "name", 1017277949), "Visual Basic", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Alan Cooper", null, "sold to Microsoft", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "quickbasic", "quickbasic", 2695777747), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Visual_Basic"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1985, new cljs.core.Keyword(null, "name", "name", 1017277949), "QuickBASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Microsoft", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/QuickBASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1998, new cljs.core.Keyword(null, "name", "name", 1017277949), "PureBasic", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Fantaisie Software", null, "Frederic Laboureur", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PureBasic"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2007, new cljs.core.Keyword(null, "name", "name", 1017277949), "LOLCODE", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Adam Lindsay", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/LOLCODE"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "Eiffel", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Meyer", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "simula-67", "simula-67", 3327469005), null, new cljs.core.Keyword(null, "ada-80", "ada-80", 3886218745), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Eiffel_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "PROMAL", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c", "c", 1013904341), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PROMAL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1974, new cljs.core.Keyword(null, "name", "name", 1017277949), "GRASS", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["DeFanti", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 
1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/GRASS_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1969, new cljs.core.Keyword(null, "name", "name", 1017277949), "TUTOR", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Paul Tenczar \x26 University of Illinois at Urbana-Champaign", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/TUTOR_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 1017277949), "occam 2", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["David May and INMOS", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "occam", "occam", 1119462637), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Occam_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1989, new cljs.core.Keyword(null, "name", "name", 1017277949), "VisSim", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Peter Darnell", null, "Visual Solutions", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/VisSim"], null), 
new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "LiveScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Brendan Eich at Netscape", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), null, new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "self", "self", 1017430718), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/JavaScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1979, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"Modula-2", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Wirth", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mesa", "mesa", 1017252184), null, new cljs.core.Keyword(null, "modula", "modula", 4240087514), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Modula-2"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ada 83", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ichbiah at Alsys", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "green", "green", 1112523381), null, new cljs.core.Keyword(null, "ada-80", "ada-80", 3886218745), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ada_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2007, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"Vala", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["GNOME", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Vala_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1955, new cljs.core.Keyword(null, "name", "name", 1017277949), "BACAIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["M. Grems and R. Porter", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, 
new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1949, new cljs.core.Keyword(null, "name", "name", 1017277949), "Brief Code", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["John Mauchly and William F. Schmitt", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eniac-short-code", "eniac-short-code", 1532323259), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Short_Code_(computer_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1972, new cljs.core.Keyword(null, "name", "name", 
1017277949), "C", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Dennis Ritchie", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null, new cljs.core.Keyword(null, "b", "b", 1013904340), null, new cljs.core.Keyword(null, 
"bcpl", "bcpl", 1016922479), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/C_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1989, new cljs.core.Keyword(null, "name", "name", 1017277949), "Modula-3", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["et al. DEC and Olivetti", 
null, "Cardeli", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "modula-2", "modula-2", 4704609663), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Modula-3"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1959, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "JOVIAL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jules Schwartz at SDC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/JOVIAL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1960, new cljs.core.Keyword(null, "name", "name", 1017277949), "ALGOL 60", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ALGOL_60"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2004, new cljs.core.Keyword(null, "name", "name", 1017277949), "Groovy", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["James Strachan", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Groovy_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, "name", "name", 1017277949), "POP-1", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Burstall", null, "Popplestone", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cowsel", "cowsel", 
3954359905), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/COWSEL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1975, new cljs.core.Keyword(null, "name", "name", 1017277949), "ABC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Leo Geurts and Lambert Meertens", null], null), null), 
new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "setl", "setl", 1017430972), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ABC_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1967, new cljs.core.Keyword(null, "name", "name", 
1017277949), "MUMPS", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Massachusetts General Hospital", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "telcomp", "telcomp", 3879460124), null, new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MUMPS"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2004, new cljs.core.Keyword(null, "name", "name", 1017277949), "Alma-0", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Krzysztof Apt", null, "Centrum Wiskunde \x26 Informatica", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Alma-0"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1966, new cljs.core.Keyword(null, "name", "name", 1017277949), "JOSS II", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, ["RAND", null, "Chuck Baker", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "joss-i", "joss-i", 4154643059), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/JOSS"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1975, new cljs.core.Keyword(null, "name", "name", 1017277949), "Altair BASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Gates", null, "Allen", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], 
null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Altair_BASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1969, new cljs.core.Keyword(null, "name", "name", 1017277949), "B", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Ken Thompson", null, "with contributions from Dennis Ritchie", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bcpl", "bcpl", 1016922479), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/B_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Common Lisp", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Jr. and many others", null, "Guy L. Steele", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Common_Lisp"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1967, new cljs.core.Keyword(null, "name", "name", 1017277949), "Simula 67", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Myhrhaug", null, "Dahl", null, "Nygaard at Norsk Regnesentral", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Simula"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, "name", "name", 1017277949), "AMOS BASIC", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Fran\u00e7ois Lionet and Constantin Sotiropoulos", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stos-basic", "stos-basic", 1222314968), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/AMOS_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1966, new cljs.core.Keyword(null, "name", "name", 1017277949), "CORAL66", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Coral_66"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2005, new cljs.core.Keyword(null, "name", "name", 1017277949), "Seed7", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Thomas Mertes", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Seed7"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Regional Assembly Language", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Maurice Wilkes", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "IDL", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["David Stern of Research Systems Inc", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/IDL_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1988, new cljs.core.Keyword(null, "name", "name", 1017277949), "STOS BASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Fran\u00e7ois Lionet and Constantin Sotiropoulos", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/STOS_BASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "Mesa", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Xerox PARC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Mesa_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "Component Pascal", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Oberon microsystems", null, "Inc", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"oberon-2", "oberon-2", 973610230), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Component_Pascal"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "P\u2032\u2032", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["B\u00f6hm", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/P%E2%80%B2%E2%80%B2"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1943, new cljs.core.Keyword(null, "name", "name", 1017277949), "ENIAC coding system", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 4, ["J. Presper Eckert", null, "John von Neumann", null, "Herman Goldstine after Alan Turing", null, "John Mauchly", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Blue", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Goodenough et al. at SofTech for US Dept of Defense", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null], null), null), 
new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Blue_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1996, new cljs.core.Keyword(null, "name", "name", 1017277949), "Perl Data Language", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["Karl Glazebrook", null, "and Christian Soeller", 
null, "Tuomas Lukka", null, "Jarle Brinchmann", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "perl", "perl", 1017341537), null, new cljs.core.Keyword(null, "apl", "apl", 1014001039), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Perl_Data_Language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ruby", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Yukihiro Matsumoto", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "smalltalk", 
"smalltalk", 3686588837), null, new cljs.core.Keyword(null, "perl", "perl", 1017341537), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ruby_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1988, new cljs.core.Keyword(null, "name", "name", 1017277949), "Octave", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "matlab", "matlab", 4227625887), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/GNU_Octave"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 
2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "C#", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Microsoft (ECMA)", null, "Anders Hejlsberg", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "modula-2", "modula-2", 4704609663), 
null, new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "object-pascal", "object-pascal", 4740536748), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/C_Sharp_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 
2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "D", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Walter Bright", null, "Digital Mars", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, 
"csharp", "csharp", 3957590233), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/D_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1950, new cljs.core.Keyword(null, "name", "name", 1017277949), "Birkbeck Assembler", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Kathleen Booth", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arc-assembly", "arc-assembly", 3871520371), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2010, new cljs.core.Keyword(null, "name", "name", 1017277949), "Rust", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Graydon Hoare", null, "Mozilla", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
4, [new cljs.core.Keyword(null, "standard-ml", "standard-ml", 4144739873), null, new cljs.core.Keyword(null, "common-lisp", "common-lisp", 3337688750), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "erlang", "erlang", 4014044045), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Rust_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1999, new cljs.core.Keyword(null, "name", "name", 1017277949), "GameMaker Language", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Mark Overmars", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, 
[new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "Squeak Smalltalk", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["et al. at Apple Computer Inc.", null, "Alan Kay", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "self", "self", 1017430718), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Squeak"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "NewtonScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Walter Smith", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dylan", "dylan", 1109967958), null, new cljs.core.Keyword(null, "self", "self", 1017430718), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/NewtonScript"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1972, new cljs.core.Keyword(null, "name", "name", 1017277949), "Smalltalk", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Jr.", null, "Daniel Henry Holmes Ingalls", null, "Xerox PARC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "simula-67", "simula-67", 3327469005), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Smalltalk"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2003, new cljs.core.Keyword(null, "name", "name", 1017277949), "Squirrel", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Alberto Demichelis", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lua", "lua", 1014011754), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Squirrel_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 2006, new cljs.core.Keyword(null, "name", "name", 1017277949), "OptimJ", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ateji", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "java", "java", 1017159060), null], 
null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/OptimJ"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, "name", "name", 1017277949), "Laning and Zierler system", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Laning", null, "Adams at MIT Project Whirlwind", 
null, "Zierler", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Laning_and_Zierler_system"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1989, new cljs.core.Keyword(null, "name", "name", 1017277949), "Turbo Pascal OOP", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Hejlsberg at Borland", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null, new cljs.core.Keyword(null, "object-pascal", "object-pascal", 4740536748), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/Turbo_Pascal#Object_oriented_programming"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2007, new cljs.core.Keyword(null, "name", "name", 1017277949), "Clojure", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Rich Hickey", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ml", "ml", 1013907729), null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null, new cljs.core.Keyword(null, "erlang", "erlang", 4014044045), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Clojure"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1992, new cljs.core.Keyword(null, "name", "name", 1017277949), "Dylan", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["many people at Apple Computer Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"scheme", "scheme", 4400883991), null, new cljs.core.Keyword(null, "common-lisp", "common-lisp", 3337688750), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Dylan_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2012, new cljs.core.Keyword(null, "name", "name", 1017277949), "Julia", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 4, ["Stefan Karpinski", null, "Alan Edelman", null, "Viral Shah", null, "Jeff Bezanson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "matlab", "matlab", 4227625887), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Julia_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1994, new cljs.core.Keyword(null, "name", "name", 1017277949), "ANSI Common Lisp", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"common-lisp", "common-lisp", 3337688750), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Common_Lisp"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1982, new cljs.core.Keyword(null, "name", "name", 1017277949), "Draco", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Chris Gray", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null, new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Draco_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "E", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Mark S. Miller", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/E_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1974, new cljs.core.Keyword(null, "name", "name", 1017277949), "BASIC FOUR", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["MAI BASIC Four Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MAI_Basic_Four"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "LabVIEW", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["National Instruments", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/LabVIEW"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"Turbo Basic", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Robert 'Bob' Zale", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Turbo_Basic"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1971, new cljs.core.Keyword(null, "name", "name", 1017277949), "KRL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Daniel G. Bobrow at Xerox PARC", null, "Terry Winograd at Stanford University", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/KRL_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ada ISO 8652:1987", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["ANSI/MIL-STD-1815A unchanged", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ada-83", "ada-83", 3886218748), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ada_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1953, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "READ/PRINT", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["James Fishman", null, "George Ryckman", null, "Don Harroff", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "Join Java", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["G Stewart von Itzstein", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Join_Java"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "SAS", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["SAS Institute", null], null), 
null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SAS_language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1970, new cljs.core.Keyword(null, "name", "name", 1017277949), "Pascal", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, ["Jensen", null, "Wirth", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null, new cljs.core.Keyword(null, "algol-w", "algol-w", 4392898453), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Pascal_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1975, new cljs.core.Keyword(null, "name", "name", 1017277949), "PROSE modeling language Time-Sharing Version", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["CDC 6400 Cybernet KRONOS Services", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PROSE_modeling_language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1994, new cljs.core.Keyword(null, "name", "name", 1017277949), "ANS Forth", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, ["Elizabeth Rather", null, "et al.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "forth", "forth", 1111523439), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Forth_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 2008, new cljs.core.Keyword(null, "name", "name", 1017277949), "Genie", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jamie McCracken", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "boo", "boo", 
1014001972), null, new cljs.core.Keyword(null, "python", "python", 4335674446), null, new cljs.core.Keyword(null, "d", "d", 1013904342), null, new cljs.core.Keyword(null, "object-pascal", "object-pascal", 4740536748), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Genie_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1963, new cljs.core.Keyword(null, "name", 
"name", 1017277949), "JOSS I", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["RAND", null, "Cliff Shaw", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null], null), null), new cljs.core.Keyword(null, "url", 
"url", 1014020321), "/wiki/JOSS"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "ActionScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Gary Grossman", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ecmascript", "ecmascript", 4360102255), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ActionScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1969, new cljs.core.Keyword(null, "name", "name", 1017277949), "PPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Thomas A. Standish at Harvard University", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Polymorphic_Programming_Language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1961, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "COMIT", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/COMIT"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1959, new cljs.core.Keyword(null, "name", "name", 1017277949), "FACT", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Robert L. Patrick", null, "Roy Nutt", null, "Fletcher R. Jones", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/FACT_computer_language"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1973, new cljs.core.Keyword(null, "name", "name", 1017277949), "COMAL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Christensen", null, "L\u00f8fstedt", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null, new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/COMAL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "K", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Arthur Whitney", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "apl", "apl", 1014001039), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/K_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1981, new cljs.core.Keyword(null, "name", "name", 1017277949), "IBM BASICA", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Microsoft", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/IBM_BASICA"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1996, new cljs.core.Keyword(null, "name", "name", 1017277949), "OCaml", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["INRIA", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "standard-ml", "standard-ml", 4144739873), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/OCaml"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1982, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "PostScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Warnock", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PostScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1947, new cljs.core.Keyword(null, "name", "name", 1017277949), "ARC Assembly", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Kathleen Booth[1][2]", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eniac-coding-system", 
"eniac-coding-system", 1608213465), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1991, new cljs.core.Keyword(null, "name", "name", 1017277949), "Oz", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Gert Smolka and his students", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prolog", "prolog", 4329064681), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Oz_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2004, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Subtext", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jonathan Edwards", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Subtext_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1985, new cljs.core.Keyword(null, "name", "name", 1017277949), "PARADOX", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Borland", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vulcan-dbase-ii", 
"vulcan-dbase-ii", 1833441172), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Paradox_(database)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, "name", "name", 1017277949), "Mark I Autocode", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Tony Brooker", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "autocode", "autocode", 2453081998), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Autocode"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, "name", 
"name", 1017277949), "J", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["R. Hui at Iverson Software", null, "Iverson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "apl", "apl", 1014001039), null, new cljs.core.Keyword(null, "fp", "fp", 1013907516), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/J_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "Brainfuck", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Urban M\u00fcller", null], null), null), 
new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p\u2032\u2032", "p\u2032\u2032", 1014275618), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Brainfuck"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, "name", "name", 
1017277949), "TTM", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["California Institute of Technology", null, "Steven Caine and E. Kent Gordon", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/TTM_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, "name", "name", 1017277949), "Object Oberon", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["J Templ", null, "H M\u00f6ssenb\u00f6ck", null, "R Griesemer", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "oberon", "oberon", 4285367057), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Object_Oberon"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1988, new cljs.core.Keyword(null, "name", "name", 1017277949), "A+", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Arthur Whitney", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "apl", "apl", 1014001039), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/A%2B_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", "name", 1017277949), "Korn Shell", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["David Korn", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sh", "sh", 1013907911), null], 
null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Korn_shell"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "JavaScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Brendan Eich at Netscape", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "livescript", "livescript", 2785154089), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/JavaScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", "name", 1017277949), "RPL", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Hewlett-Packard", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "forth", "forth", 1111523439), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/RPL_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "Joy", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["von Thun", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fp", "fp", 1013907516), null, new cljs.core.Keyword(null, "forth", "forth", 1111523439), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Joy_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "Green", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ichbiah et al. at CII Honeywell Bull for US Dept of Defense", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null, new cljs.core.Keyword(null, "lis", "lis", 1014011400), null], null), null), 
new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1948, new cljs.core.Keyword(null, "name", "name", 1017277949), "Plankalk\u00fcl", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Konrad Zuse", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Plankalk%C3%BCl"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "CorVision", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Cortex", null], null), 
null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/CorVision"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "GFA BASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Frank Ostrowski", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/GFA_BASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "COWSEL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Burstall", null, "Popplestone", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "cpl", "cpl", 1014002961), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/COWSEL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1975, new cljs.core.Keyword(null, "name", "name", 1017277949), "Modula", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Wirth", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Modula"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2001, new cljs.core.Keyword(null, "name", "name", 1017277949), "GDScript", new cljs.core.Keyword(null, "creators", 
"creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["OKAM Studio", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"ColdFusion", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Allaire", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ColdFusion"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 
2006, new cljs.core.Keyword(null, "name", "name", 1017277949), "Windows PowerShell", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Microsoft", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null, new cljs.core.Keyword(null, 
"ksh", "ksh", 1014010738), null, new cljs.core.Keyword(null, "perl", "perl", 1017341537), null, new cljs.core.Keyword(null, "sql", "sql", 1014018368), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Windows_PowerShell"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "Bourne Shell", new cljs.core.Keyword(null, "creators", 
"creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Bourne", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Bourne_shell"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 
1017277949), "Perl", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Wall", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "sh", "sh", 1013907911), null, new cljs.core.Keyword(null, "awk", 
"awk", 1014001255), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Perl"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2009, new cljs.core.Keyword(null, "name", "name", 1017277949), "Go", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Google", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "oberon", "oberon", 4285367057), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Go_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2003, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Falcon", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Giancarlo Niccolai", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "python", "python", 4335674446), null, new cljs.core.Keyword(null, "lua", "lua", 1014011754), 
null, new cljs.core.Keyword(null, "php", "php", 1014015210), null, new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), null, new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "perl", "perl", 1017341537), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Falcon_(programming_language)"], null), 
new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1952, new cljs.core.Keyword(null, "name", "name", 1017277949), "Autocode", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Alick Glennie after Alan Turing", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cpc-coding-scheme", "cpc-coding-scheme", 4685641955), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Autocode"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1959, new cljs.core.Keyword(null, "name", "name", 1017277949), "MAD \u2013 Michigan Algorithm Decoder", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["and Graham", null, "Galler", null, "Arden", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MAD_(programming_language)"], null), 
new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1972, new cljs.core.Keyword(null, "name", "name", 1017277949), "PL/M", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Kildall at Digital Research", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-58", "algol-58", 2683507689), null, new cljs.core.Keyword(null, "xpl", "xpl", 1014023142), null, new cljs.core.Keyword("pl", "i", "pl/i", 1014131478), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PL/M"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"Revolution Transcript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "hypertalk", "hypertalk", 1765429386), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Revolution_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "Object Pascal", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Apple Computer Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Object_Pascal"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1952, new cljs.core.Keyword(null, "name", "name", 1017277949), "COMPOOL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["RAND/SDC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1980, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ada 80", new cljs.core.Keyword(null, "creators", "creators", 
2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ichbiah at CII Honeywell Bull", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "green", "green", 1112523381), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ada_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1957, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fortran I", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["John W. Backus at IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/FORTRAN_I"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1966, new cljs.core.Keyword(null, "name", "name", 1017277949), "APL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Iverson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/APL_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1978, new cljs.core.Keyword(null, "name", "name", 1017277949), "SMALL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Brownlee at the University of Auckland", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SMALL"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1966, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fortran 66", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"fortran-iv", "fortran-iv", 3725136280), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/FORTRAN_66"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ratfor", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Kernighan", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ratfor"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 
2007, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fortress", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Guy Steele", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "scala", "scala", 1123155128), null, new cljs.core.Keyword(null, 
"ml", "ml", 1013907729), null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Fortress_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1950, new cljs.core.Keyword(null, "name", "name", 1017277949), "Short Code", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, ["[3] J.R. Logan", null, "William F Schmidt", null, "A.B. Tonik", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "brief-code", "brief-code", 4058879698), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Short_Code_(computer_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1965, new cljs.core.Keyword(null, "name", "name", 1017277949), "Atlas Autocode", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Tony Brooker", null, "Derrick Morris at Manchester University", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null, new cljs.core.Keyword(null, "autocode", "autocode", 2453081998), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Atlas_Autocode"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1981, new cljs.core.Keyword(null, "name", "name", 1017277949), "BBC BASIC", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Acorn Computers", null, "Sophie Wilson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/BBC_BASIC"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2006, new cljs.core.Keyword(null, "name", "name", 1017277949), "Links", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["University of Edinburgh", null, "Philip Wadler", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Links_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1991, new cljs.core.Keyword(null, "name", "name", 1017277949), "Oberon-2", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, ["Hanspeter M\u00f6ssenb\u00f6ck", null, "Wirth", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "object-oberon", "object-oberon", 4712428895), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Oberon-2_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "Smalltalk-76", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Xerox PARC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "smalltalk", 
"smalltalk", 3686588837), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Smalltalk"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1959, new cljs.core.Keyword(null, "name", "name", 1017277949), "COBOL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["The CODASYL Committee", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comtran", "comtran", 1964523422), null, new cljs.core.Keyword(null, "fact", "fact", 1017039326), null, new cljs.core.Keyword(null, "flow-matic", "flow-matic", 4616931469), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/COBOL"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1978, new cljs.core.Keyword(null, "name", "name", 1017277949), "VisiCalc", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Frankston marketed by VisiCorp", null, "Bricklin", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/VisiCalc"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, "name", "name", 1017277949), "ARITH-MATIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Team led by Grace Hopper at UNIVAC", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a-0", "a-0", 1013998902), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ARITH-MATIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2012, new cljs.core.Keyword(null, "name", "name", 1017277949), "TypeScript", new cljs.core.Keyword(null, "creators", 
"creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Microsoft", null, "Anders Hejlsberg", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coffeescript", "coffeescript", 3529808649), null, new cljs.core.Keyword(null, "javascript", "javascript", 1202900191), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/TypeScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 1017277949), "Oberon", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Wirth", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "modula-2", "modula-2", 4704609663), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Oberon_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", "name", 1017277949), "GOM \u2013 Good Old Mad", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Don Boettner", null, "University of Michigan", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mad", "mad", 1014012098), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MAD_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1963, new cljs.core.Keyword(null, "name", "name", 1017277949), "CPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Strachey", null, "et al.", null, "Barron", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Combined_Programming_Language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1973, new cljs.core.Keyword(null, "name", "name", 1017277949), "ML", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Robin Milner", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ML_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1967, new cljs.core.Keyword(null, "name", "name", 1017277949), "InterLisp", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["D.G. Bobrow and D.L. Murphy", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Interlisp"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "ZPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Chamberlain et al. at University of Washington", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "c", "c", 1013904341), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ZPL_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Stanislaus", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Fritz Bauer", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2014, new cljs.core.Keyword(null, "name", "name", 1017277949), "Hack", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Facebook", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "php", "php", 1014015210), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Hack_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "Self", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Sun Microsystems Inc.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null], 
null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Self_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1962, new cljs.core.Keyword(null, "name", "name", 1017277949), "SNOBOL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Griswold", null, "et al.", null], null), null), 
new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comit", "comit", 1108747742), null, new cljs.core.Keyword(null, "fortran-ii", "fortran-ii", 3725136267), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SNOBOL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 
1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "IITRAN", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/IITRAN"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 2004, new cljs.core.Keyword(null, "name", "name", 1017277949), "Little b", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Department of Systems Biology", null, "Aneil Mallavarapu", null, "Harvard Medical School", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Little_b_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "FP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["John Backus", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/FP_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1958, new cljs.core.Keyword(null, "name", "name", 1017277949), "ALGOL 58", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["ACM/GAMM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "sequentielle-formel\u00fcbersetzung", "sequentielle-formel\u00fcbersetzung", 4553552113), null, new cljs.core.Keyword(null, "it", "it", 1013907613), null, new cljs.core.Keyword(null, "fortran", "fortran", 
4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ALGOL_58"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1969, new cljs.core.Keyword(null, "name", "name", 1017277949), "SETL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Jack Schwartz at Courant Institute of Mathematical Sciences", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SETL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", "name", 1017277949), "CLIPPER", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Nantucket", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vulcan-dbase-ii", "vulcan-dbase-ii", 1833441172), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Clipper_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Whirlwind assembler", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Charles Adams and Jack Gilmore at MIT Project Whirlwind", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, "name", "name", 1017277949), "EuLisp", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), null, new cljs.core.Keyword(null, "common-lisp", "common-lisp", 3337688750), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/EuLisp"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1998, new cljs.core.Keyword(null, "name", "name", 1017277949), "Open Source Erlang", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ericsson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "erlang", "erlang", 4014044045), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Erlang_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Intermediate Programming Language", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Arthur Burks", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "short-code", "short-code", 2533207056), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1964, new cljs.core.Keyword(null, "name", "name", 1017277949), "TRAC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, 
["Mooers", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/TRAC_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1972, new cljs.core.Keyword(null, "name", "name", 1017277949), "Prolog", new cljs.core.Keyword(null, "creators", "creators", 2834331961), 
new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Colmerauer", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Prolog"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2002, new cljs.core.Keyword(null, "name", "name", 1017277949), "Gosu", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Guidewire Software", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Gosu_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1967, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "XPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["William McKeeman", null, "et al. at Stanford University", null, "California\nJ. J. Horning", null, "et al. at University of California Santa Cruz", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword("pl", "i", "pl/i", 1014131478), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/XPL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1967, new cljs.core.Keyword(null, "name", "name", 1017277949), "SNOBOL4", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Griswold", 
null, "et al.", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "snobol3", "snobol3", 3252359482), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SNOBOL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Haskell", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "miranda", "miranda", 2081898546), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/Haskell_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1946, new cljs.core.Keyword(null, "name", "name", 1017277949), "ENIAC Short Code", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["John von Neumann after Alan Turing", null, "Richard Clippinger", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eniac-coding-system", "eniac-coding-system", 1608213465), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 1017277949), "C++", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Stroustrup", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "c-with-classes", "c-with-classes", 2317858491), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/C%2B%2B"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1980, new cljs.core.Keyword(null, "name", "name", 1017277949), "C with classes", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Bjarne Stroustrup[5]", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "simula-67", "simula-67", 3327469005), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/C%2B%2B"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1958, new cljs.core.Keyword(null, "name", "name", 1017277949), "IPL V", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, ["Herbert A. Simon", null, "Cliff Shaw", null, "Allen Newell", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ipl-ii", "ipl-ii", 4126663482), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Information_Processing_Language"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1977, new cljs.core.Keyword(null, "name", "name", 1017277949), "Yellow", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Spitzen et al. at SRI International for US Dept of Defense", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "algol-68", "algol-68", 2683507720), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1989, new cljs.core.Keyword(null, "name", "name", 1017277949), "PowerBASIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, 
["Robert 'Bob' Zale", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "turbo-basic", "turbo-basic", 1719524145), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PowerBASIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1987, 
new cljs.core.Keyword(null, "name", "name", 1017277949), "Clean", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Software Technology Research Group of Radboud University Nijmegen", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Clean_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "XL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Christophe de Dinechin", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ada-80", "ada-80", 3886218745), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/XL_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Fortran", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Team led by John W. Backus at IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "speedcoding", "speedcoding", 3545064931), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Fortran"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1972, new cljs.core.Keyword(null, "name", "name", 1017277949), "SQL aka structured query language", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SQL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2010, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fancy", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Christopher Bertels", null], null), 
null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), null, new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "io", "io", 1013907608), null, new cljs.core.Keyword(null, "erlang", "erlang", 4014044045), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Fancy_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1966, new cljs.core.Keyword(null, "name", "name", 1017277949), "ALGOL W", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["C. A. R. Hoare", null, "Niklaus Wirth", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ALGOL_W"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1993, new cljs.core.Keyword(null, "name", "name", 1017277949), "FALSE", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Wouter van Oortmerssen", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "forth", "forth", 1111523439), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/FALSE"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1983, new cljs.core.Keyword(null, "name", "name", 1017277949), "Objective-C", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Brad Cox", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, 
"smalltalk", "smalltalk", 3686588837), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Objective-C"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2003, new cljs.core.Keyword(null, "name", "name", 1017277949), "Factor", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Slava Pestov", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "joy", "joy", 1014009670), null, new cljs.core.Keyword(null, "forth", "forth", 1111523439), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Factor_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1995, new cljs.core.Keyword(null, "name", "name", 1017277949), "Java", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["James Gosling at Sun Microsystems", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
7, [new cljs.core.Keyword(null, "ada-83", "ada-83", 3886218748), null, new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "simula-67", "simula-67", 3327469005), null, new cljs.core.Keyword(null, "mesa", "mesa", 1017252184), null, new cljs.core.Keyword(null, "smalltalk", "smalltalk", 3686588837), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "objective-c", "objective-c", 4040968257), null], null), null), new cljs.core.Keyword(null, 
"url", "url", 1014020321), "/wiki/Java_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1963, new cljs.core.Keyword(null, "name", "name", 1017277949), "SNOBOL3", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Griswold", null, "et al.", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "snobol", "snobol", 4411248445), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/SNOBOL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1979, new cljs.core.Keyword(null, "name", "name", 1017277949), "AWK", new cljs.core.Keyword(null, "creators", 
"creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Kernighan", null, "Aho", null, "Weinberger", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "snobol", "snobol", 4411248445), null], null), null), new cljs.core.Keyword(null, "url", 
"url", 1014020321), "/wiki/AWK"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1979, new cljs.core.Keyword(null, "name", "name", 1017277949), "Vulcan dBase-II", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Ratliff", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, 
new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/DBase"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Sort Merge Generator", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Betty Holberton", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Sort_Merge_Generator"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1998, new cljs.core.Keyword(null, "name", "name", 1017277949), "Pikt", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Robert Osterlund (then at University of Chicago)", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "sh", "sh", 1013907911), null, new cljs.core.Keyword(null, "perl", "perl", 1017341537), null, new cljs.core.Keyword(null, "awk", "awk", 1014001255), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PIKT"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1990, new cljs.core.Keyword(null, "name", "name", 1017277949), "Z Shell", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Paul Falstad at Princeton University", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ksh", "ksh", 1014010738), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Z_shell"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1960, new cljs.core.Keyword(null, "name", "name", 1017277949), "COBOL 61", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["The CODASYL Committee", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comtran", "comtran", 1964523422), null, new cljs.core.Keyword(null, "flow-matic", "flow-matic", 4616931469), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/COBOL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"appearance-year", "appearance-year", 2753822584), 1958, new cljs.core.Keyword(null, "name", "name", 1017277949), "IPL II", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["Herbert A. Simon", null, "Cliff Shaw", null, "Allen Newell", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "ipl-i", "ipl-i", 1114315827), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Information_Processing_Language"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1954, new cljs.core.Keyword(null, "name", "name", 1017277949), "MATH-MATIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Team led by Charles Katz", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a-0", "a-0", 1013998902), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/MATH-MATIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2007, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Oberon-07", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Wirth[6]", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "oberon", "oberon", 4285367057), null], null), null), new cljs.core.Keyword(null, "url", "url", 
1014020321), "/wiki/Oberon_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1991, new cljs.core.Keyword(null, "name", "name", 1017277949), "Q", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Albert Gr\u00e4f", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Q_(equational_programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2001, new cljs.core.Keyword(null, "name", "name", 1017277949), "Visual Basic .NET", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Microsoft", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "visual-basic", "visual-basic", 1513288403), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Visual_Basic_.NET"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2002, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Io", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Steve Dekorte", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "newtonscript", "newtonscript", 2509907376), null, new cljs.core.Keyword(null, "self", "self", 1017430718), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Io_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1994, new cljs.core.Keyword(null, "name", "name", 1017277949), "RAPID", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["ABB Group", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/RAPID"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1946, new cljs.core.Keyword(null, "name", "name", 1017277949), "Von Neumann and Goldstine graphing system", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["John von Neumann and Herman Goldstine", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eniac-coding-system", "eniac-coding-system", 1608213465), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 
2753822584), 1987, new cljs.core.Keyword(null, "name", "name", 1017277949), "Erlang", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Joe Armstrong and others in Ericsson", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prolog", "prolog", 4329064681), 
null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Erlang_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2003, new cljs.core.Keyword(null, "name", "name", 1017277949), "Nemerle", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["University of Wroc\u0142aw", null], 
null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "csharp", "csharp", 3957590233), null, new cljs.core.Keyword(null, "ml", "ml", 1013907729), null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Nemerle"], null), new cljs.core.PersistentArrayMap(null, 5, 
[new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1955, new cljs.core.Keyword(null, "name", "name", 1017277949), "FLOW-MATIC", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Team led by Grace Hopper at UNIVAC", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "a-0", "a-0", 1013998902), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/FLOW-MATIC"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1962, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fortran IV", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fortran-ii", "fortran-ii", 3725136267), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Fortran#FORTRAN_IV"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1953, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "Speedcoding", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["John W. Backus", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Speedcoding"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 1969, new cljs.core.Keyword(null, "name", "name", 1017277949), "Edinburgh IMP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Edinburgh University", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-60", "algol-60", 
2683507712), null, new cljs.core.Keyword(null, "autocode", "autocode", 2453081998), null, new cljs.core.Keyword(null, "atlas-autocode", "atlas-autocode", 2973645456), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Edinburgh_IMP"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 2011, new cljs.core.Keyword(null, "name", "name", 1017277949), "Elm", new cljs.core.Keyword(null, "creators", 
"creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Evan Czaplicki", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "standard-ml", "standard-ml", 4144739873), null, new cljs.core.Keyword(null, "fsharp", "fsharp", 4043477686), null, new cljs.core.Keyword(null, "ocaml", "ocaml", 1119461086), 
null, new cljs.core.Keyword(null, "haskell", "haskell", 1711527270), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Elm_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1966, new cljs.core.Keyword(null, "name", "name", 1017277949), "ISWIM", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["Landin", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ISWIM"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1948, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "CPC Coding scheme", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Howard H. Aiken", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", 
"appearance-year", 2753822584), 2E3, new cljs.core.Keyword(null, "name", "name", 1017277949), "Ferite", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Chris Ross", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), 
null, new cljs.core.Keyword(null, "python", "python", 4335674446), null, new cljs.core.Keyword(null, "php", "php", 1014015210), null, new cljs.core.Keyword(null, "c", "c", 1013904341), null, new cljs.core.Keyword(null, "ruby", "ruby", 1017416012), null, new cljs.core.Keyword(null, "cpp", "cpp", 1014002965), null, new cljs.core.Keyword(null, "java", "java", 1017159060), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Ferite"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1970, new cljs.core.Keyword(null, "name", "name", 1017277949), "Forth", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Moore", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Forth_(programming_language)"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1959, new cljs.core.Keyword(null, "name", "name", 1017277949), "LISP", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["John McCarthy", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "ipl-i", "ipl-i", 1114315827), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Lisp_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1997, new cljs.core.Keyword(null, "name", "name", 1017277949), "ECMAScript", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, ["ECMA TC39-TG1", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "javascript", "javascript", 1202900191), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/ECMAScript"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1967, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "BCPL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Richards", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cpl", "cpl", 1014002961), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/BCPL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "Plus", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Allan Ballard", null, "Paul Whaley at the University of British Columbia", null], null), null), new cljs.core.Keyword(null, "influenced-by", 
"influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sue", "sue", 1014018485), null, new cljs.core.Keyword(null, "pascal", "pascal", 4313474910), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Plus_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1969, new cljs.core.Keyword(null, 
"name", "name", 1017277949), "PL/I", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null, new cljs.core.Keyword(null, "cobol", "cobol", 1108737349), null, 
new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PL/I"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "S", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["John Chambers at Bell Labs", 
null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "scheme", "scheme", 4400883991), null, new cljs.core.Keyword(null, "ppl", "ppl", 1014015454), null, new cljs.core.Keyword(null, "apl", "apl", 1014001039), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/S_(programming_language)"], null), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1984, new cljs.core.Keyword(null, "name", "name", 1017277949), "Redcode", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Alexander Dewdney and D.G. Jones", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", 
"url", 1014020321), "/wiki/Core_War"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1968, new cljs.core.Keyword(null, "name", "name", 1017277949), "REFAL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Valentin Turchin", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), 
cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/REFAL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1962, new cljs.core.Keyword(null, "name", "name", 1017277949), "Simula", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["", null], null), null), new cljs.core.Keyword(null, 
"influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "algol-60", "algol-60", 2683507712), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Simula"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1976, new cljs.core.Keyword(null, "name", "name", 1017277949), "SAM76", new cljs.core.Keyword(null, 
"creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Claude A.R. Kagan", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "trac", "trac", 1017472658), null, new cljs.core.Keyword(null, "lisp", "lisp", 1017226252), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
"/wiki/SAM76"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), "Rochester assembler", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Nat Rochester", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, 
new cljs.core.Keyword(null, "url", "url", 1014020321), null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1955, new cljs.core.Keyword(null, "name", "name", 1017277949), "PACT I", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["SHARE", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 
3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "a-0", "a-0", 1013998902), null, new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PACT_I"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1951, new cljs.core.Keyword(null, "name", "name", 1017277949), 
"Superplan", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Heinz Rutishauser", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "plankalk\u00fcl", "plankalk\u00fcl", 2093938400), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), 
null], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1958, new cljs.core.Keyword(null, "name", "name", 1017277949), "Fortran II", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Team led by John W. Backus at IBM", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fortran-i", "fortran-i", 3041025986), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/Fortran#FORTRAN_II"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1986, new cljs.core.Keyword(null, "name", "name", 1017277949), "Informix-4GL", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, ["Informix", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/IBM_Informix-4GL"], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1979, new cljs.core.Keyword(null, "name", "name", 1017277949), "REXX", new cljs.core.Keyword(null, "creators", 
"creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Cowlishaw", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "basic", "basic", 1107412896), null, new cljs.core.Keyword("pl", "i", "pl/i", 1014131478), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/REXX"], 
null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584), 1974, new cljs.core.Keyword(null, "name", "name", 1017277949), "PROSE modeling language", new cljs.core.Keyword(null, "creators", "creators", 2834331961), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["CDC 6600 Cybernet Services", null], null), null), new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fortran", "fortran", 4631652070), null], null), null), new cljs.core.Keyword(null, "url", "url", 1014020321), "/wiki/PROSE_modeling_language"], null)]);
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
var array_p, dom_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_namespace_sep, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x;
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
re_namespace_sep = /:(.+)/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", xlink:"http://www.w3.org/1999/xlink", svg:"http://www.w3.org/2000/svg", xml:"http://www.w3.org/XML/1998/namespace", xmlns:"http://www.w3.org/2000/xmlns"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if (tag != null) {
    return[xmlns[nsp] || nsp, tag];
  } else {
    if (tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str];
    } else {
      return[xmlns.xhtml, tag_str];
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:";
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify;
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore;
};
array_p = function(x) {
  return x != null && x.forEach != null;
};
map_p = function(x) {
  return x != null && (!array_p(x) && (!unify_p(x) && (!ignore_p(x) && x instanceof Object)));
};
dom_p = function(x) {
  return x != null && x.nodeType != null;
};
string_p = function(x) {
  return x != null && x.substring != null;
};
number_p = function(x) {
  return x != null && x.toFixed != null;
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace);
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for (k in m) {
    if (!__hasProp.call(m, k)) {
      continue;
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v);
  }
  return _results;
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for (prop in m) {
    if (!__hasProp.call(m, prop)) {
      continue;
    }
    v = m[prop];
    _results.push($e[prop] = v);
  }
  return _results;
};
singult.coffee.attr = function($e, attr_map) {
  var attr, k, ns, v, _ref, _results;
  if (attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"];
  }
  if (attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"];
  }
  if (array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"];
  }
  _results = [];
  for (k in attr_map) {
    if (!__hasProp.call(attr_map, k)) {
      continue;
    }
    v = attr_map[k];
    if (v != null) {
      _ref = k.split(re_namespace_sep), ns = _ref[0], attr = _ref[1];
      if (attr != null) {
        _results.push($e.setAttributeNS(xmlns[ns] || ns, attr, v));
      } else {
        _results.push($e.setAttribute(k, v));
      }
    } else {
      _results.push($e.removeAttribute(k));
    }
  }
  return _results;
};
singult.coffee.node_data = function($e, d) {
  if (d != null) {
    return $e["__singult_data__"] = d;
  } else {
    return $e["__singult_data__"];
  }
};
singult.coffee.canonicalize = function(x) {
  if (number_p(x)) {
    return x.toString();
  } else {
    if (array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x);
    } else {
      return x;
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if (id != null) {
    attr["id"] = id;
  }
  if (cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if (array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes);
    } else {
      if (string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]]);
      } else {
        if (!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes;
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if (v != null) {
      if (explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v));
        });
      } else {
        return canonical_children.push(singult.coffee.canonicalize(v));
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical;
};
singult.coffee.render = function(m) {
  var $e, c;
  if (unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  } else {
    if (ignore_p(m)) {
      return null;
    } else {
      if (string_p(m)) {
        return document.createTextNode(m);
      } else {
        if (dom_p(m)) {
          return m;
        } else {
          $e = document.createElementNS(m.nsp, m.tag);
          singult.coffee.attr($e, m.attr);
          if (unify_p(c = m.children[0])) {
            if (c.enter != null) {
              c.data.forEach(function(d) {
                var $el;
                $el = c.enter(d);
                singult.coffee.node_data($el, d);
                return $e.appendChild($el);
              });
            } else {
              c.data.forEach(function(d) {
                var $el;
                $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
                singult.coffee.node_data($el, d);
                return $e.appendChild($el);
              });
            }
          } else {
            m.children.forEach(function(c) {
              var $c;
              $c = singult.coffee.render(c);
              if ($c != null) {
                return $e.appendChild($c);
              }
            });
          }
          return $e;
        }
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this;
};
singult.coffee.Ignore = function() {
  return this;
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el;
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)));
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n);
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx;
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while (i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1;
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if ($n = nodes_by_key[key]) {
      if (u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d);
      } else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if (!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d);
        }
      }
      return delete nodes_by_key[key];
    } else {
      $el = enter(d);
      return singult.coffee.node_data($el, d);
    }
  });
  for (_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n);
  }
  return null;
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if (unify_p(m)) {
    singult.coffee.unify_($e, m);
  } else {
    if (ignore_p(m)) {
    } else {
      if ($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if ($e.hasChildNodes()) {
        for (i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if (whitespace_node_p($c)) {
            $e.removeChild($c);
          }
        }
      }
      if (unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0]);
      } else {
        if ($e.childNodes.length > m.children.length) {
          for (i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i]);
          }
        }
        i = 0;
        while (i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if (string_p(c)) {
            if ($c != null) {
              $c.textContent = c;
            } else {
              $e.appendChild(document.createTextNode(c));
            }
          } else {
            if (ignore_p(c)) {
            } else {
              if (map_p(c)) {
                if ($c != null) {
                  singult.coffee.merge($c, c);
                } else {
                  $e.appendChild(singult.coffee.render(c));
                }
              } else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1;
        }
      }
    }
  }
  return $e;
};
goog.provide("reflex.core");
goog.require("cljs.core");
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed6416 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "meta", "meta", 1017252215), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "no-deref-monitor", "no-deref-monitor", 1440459621), true], null));
    var res = f.call(null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "res", "res", 1014017042), res, new cljs.core.Keyword(null, "derefed", "derefed", 2569894915), cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)], null);
  } finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed6416;
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = reflex.core._BANG_recently_derefed;
    if (cljs.core.truth_(and__3431__auto__)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword(null, "no-deref-monitor", "no-deref-monitor", 1440459621)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, derefable)));
    } else {
      return and__3431__auto__;
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__6417_SHARP_) {
      return cljs.core.conj.call(null, p1__6417_SHARP_, derefable);
    });
  } else {
    return null;
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this$__$1 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$__$1);
  return this$__$1.state;
};
reflex.core.IDisposable = function() {
  var obj6419 = {};
  return obj6419;
}();
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = reflex.core.dispose_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = reflex.core.dispose_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229700362;
  this.cljs$lang$protocol_mask$partition1$ = 8194;
  if (arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k6421, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k6421, new cljs.core.Keyword(null, "state", "state", 1123661827))) {
    return self__.state;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k6421, new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511))) {
      return self__.dirty_QMARK_;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k6421, new cljs.core.Keyword(null, "f", "f", 1013904344))) {
        return self__.f;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k6421, new cljs.core.Keyword(null, "key", "key", 1014010321))) {
          return self__.key;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k6421, new cljs.core.Keyword(null, "parent-watchables", "parent-watchables", 1046094687))) {
            return self__.parent_watchables;
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, k6421, new cljs.core.Keyword(null, "watches", "watches", 2139868463))) {
              return self__.watches;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core.get.call(null, self__.__extmap, k6421, else__4032__auto__);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__6420) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__6423 = cljs.core.keyword_identical_QMARK_;
  var expr__6424 = k__4037__auto__;
  if (cljs.core.truth_(pred__6423.call(null, new cljs.core.Keyword(null, "state", "state", 1123661827), expr__6424))) {
    return new reflex.core.ComputedObservable(G__6420, self__.dirty_QMARK_, self__.f, self__.key, self__.parent_watchables, self__.watches, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__6423.call(null, new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511), expr__6424))) {
      return new reflex.core.ComputedObservable(self__.state, G__6420, self__.f, self__.key, self__.parent_watchables, self__.watches, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__6423.call(null, new cljs.core.Keyword(null, "f", "f", 1013904344), expr__6424))) {
        return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, G__6420, self__.key, self__.parent_watchables, self__.watches, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__6423.call(null, new cljs.core.Keyword(null, "key", "key", 1014010321), expr__6424))) {
          return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, G__6420, self__.parent_watchables, self__.watches, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__6423.call(null, new cljs.core.Keyword(null, "parent-watchables", "parent-watchables", 1046094687), expr__6424))) {
            return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, self__.key, G__6420, self__.watches, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__6423.call(null, new cljs.core.Keyword(null, "watches", "watches", 2139868463), expr__6424))) {
              return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, self__.key, self__.parent_watchables, G__6420, self__.__meta, self__.__extmap, null);
            } else {
              return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, self__.key, self__.parent_watchables, self__.watches, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__6420), null);
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$__$1);
  if (cljs.core.not.call(null, self__.dirty_QMARK_)) {
    return this$__$1.state;
  } else {
    var map__6426 = reflex.core.capture_derefed.call(null, self__.f);
    var map__6426__$1 = cljs.core.seq_QMARK_.call(null, map__6426) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6426) : map__6426;
    var derefed = cljs.core.get.call(null, map__6426__$1, new cljs.core.Keyword(null, "derefed", "derefed", 2569894915));
    var res = cljs.core.get.call(null, map__6426__$1, new cljs.core.Keyword(null, "res", "res", 1014017042));
    var seq__6427_6445 = cljs.core.seq.call(null, self__.parent_watchables);
    var chunk__6428_6446 = null;
    var count__6429_6447 = 0;
    var i__6430_6448 = 0;
    while (true) {
      if (i__6430_6448 < count__6429_6447) {
        var w_6449 = cljs.core._nth.call(null, chunk__6428_6446, i__6430_6448);
        cljs.core.remove_watch.call(null, w_6449, self__.key);
        var G__6450 = seq__6427_6445;
        var G__6451 = chunk__6428_6446;
        var G__6452 = count__6429_6447;
        var G__6453 = i__6430_6448 + 1;
        seq__6427_6445 = G__6450;
        chunk__6428_6446 = G__6451;
        count__6429_6447 = G__6452;
        i__6430_6448 = G__6453;
        continue;
      } else {
        var temp__4092__auto___6454 = cljs.core.seq.call(null, seq__6427_6445);
        if (temp__4092__auto___6454) {
          var seq__6427_6455__$1 = temp__4092__auto___6454;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6427_6455__$1)) {
            var c__4191__auto___6456 = cljs.core.chunk_first.call(null, seq__6427_6455__$1);
            var G__6457 = cljs.core.chunk_rest.call(null, seq__6427_6455__$1);
            var G__6458 = c__4191__auto___6456;
            var G__6459 = cljs.core.count.call(null, c__4191__auto___6456);
            var G__6460 = 0;
            seq__6427_6445 = G__6457;
            chunk__6428_6446 = G__6458;
            count__6429_6447 = G__6459;
            i__6430_6448 = G__6460;
            continue;
          } else {
            var w_6461 = cljs.core.first.call(null, seq__6427_6455__$1);
            cljs.core.remove_watch.call(null, w_6461, self__.key);
            var G__6462 = cljs.core.next.call(null, seq__6427_6455__$1);
            var G__6463 = null;
            var G__6464 = 0;
            var G__6465 = 0;
            seq__6427_6445 = G__6462;
            chunk__6428_6446 = G__6463;
            count__6429_6447 = G__6464;
            i__6430_6448 = G__6465;
            continue;
          }
        } else {
        }
      }
      break;
    }
    this$__$1.parent_watchables = derefed;
    var seq__6431_6466 = cljs.core.seq.call(null, derefed);
    var chunk__6432_6467 = null;
    var count__6433_6468 = 0;
    var i__6434_6469 = 0;
    while (true) {
      if (i__6434_6469 < count__6433_6468) {
        var w_6470 = cljs.core._nth.call(null, chunk__6432_6467, i__6434_6469);
        cljs.core.add_watch.call(null, w_6470, self__.key, function(seq__6431_6466, chunk__6432_6467, count__6433_6468, i__6434_6469, w_6470) {
          return function() {
            this$__$1.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$__$1, null, null);
          };
        }(seq__6431_6466, chunk__6432_6467, count__6433_6468, i__6434_6469, w_6470));
        var G__6471 = seq__6431_6466;
        var G__6472 = chunk__6432_6467;
        var G__6473 = count__6433_6468;
        var G__6474 = i__6434_6469 + 1;
        seq__6431_6466 = G__6471;
        chunk__6432_6467 = G__6472;
        count__6433_6468 = G__6473;
        i__6434_6469 = G__6474;
        continue;
      } else {
        var temp__4092__auto___6475 = cljs.core.seq.call(null, seq__6431_6466);
        if (temp__4092__auto___6475) {
          var seq__6431_6476__$1 = temp__4092__auto___6475;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6431_6476__$1)) {
            var c__4191__auto___6477 = cljs.core.chunk_first.call(null, seq__6431_6476__$1);
            var G__6478 = cljs.core.chunk_rest.call(null, seq__6431_6476__$1);
            var G__6479 = c__4191__auto___6477;
            var G__6480 = cljs.core.count.call(null, c__4191__auto___6477);
            var G__6481 = 0;
            seq__6431_6466 = G__6478;
            chunk__6432_6467 = G__6479;
            count__6433_6468 = G__6480;
            i__6434_6469 = G__6481;
            continue;
          } else {
            var w_6482 = cljs.core.first.call(null, seq__6431_6476__$1);
            cljs.core.add_watch.call(null, w_6482, self__.key, function(seq__6431_6466, chunk__6432_6467, count__6433_6468, i__6434_6469, w_6482, seq__6431_6476__$1, temp__4092__auto___6475) {
              return function() {
                this$__$1.dirty_QMARK_ = true;
                return cljs.core._notify_watches.call(null, this$__$1, null, null);
              };
            }(seq__6431_6466, chunk__6432_6467, count__6433_6468, i__6434_6469, w_6482, seq__6431_6476__$1, temp__4092__auto___6475));
            var G__6483 = cljs.core.next.call(null, seq__6431_6476__$1);
            var G__6484 = null;
            var G__6485 = 0;
            var G__6486 = 0;
            seq__6431_6466 = G__6483;
            chunk__6432_6467 = G__6484;
            count__6433_6468 = G__6485;
            i__6434_6469 = G__6486;
            continue;
          }
        } else {
        }
      }
      break;
    }
    this$__$1.state = res;
    this$__$1.dirty_QMARK_ = false;
    return res;
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#reflex.core.ComputedObservable{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", 1123661827), self__.state], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511), self__.dirty_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), self__.f], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key", "key", 1014010321), self__.key], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "parent-watchables", "parent-watchables", 1046094687), self__.parent_watchables], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "watches", "watches", 2139868463), self__.watches], null)], null), self__.__extmap));
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _, ___$1) {
  var self__ = this;
  var this$__$1 = this;
  var seq__6435 = cljs.core.seq.call(null, self__.watches);
  var chunk__6436 = null;
  var count__6437 = 0;
  var i__6438 = 0;
  while (true) {
    if (i__6438 < count__6437) {
      var vec__6439 = cljs.core._nth.call(null, chunk__6436, i__6438);
      var key__$1 = cljs.core.nth.call(null, vec__6439, 0, null);
      var wf = cljs.core.nth.call(null, vec__6439, 1, null);
      wf.call(null);
      var G__6487 = seq__6435;
      var G__6488 = chunk__6436;
      var G__6489 = count__6437;
      var G__6490 = i__6438 + 1;
      seq__6435 = G__6487;
      chunk__6436 = G__6488;
      count__6437 = G__6489;
      i__6438 = G__6490;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__6435);
      if (temp__4092__auto__) {
        var seq__6435__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6435__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__6435__$1);
          var G__6491 = cljs.core.chunk_rest.call(null, seq__6435__$1);
          var G__6492 = c__4191__auto__;
          var G__6493 = cljs.core.count.call(null, c__4191__auto__);
          var G__6494 = 0;
          seq__6435 = G__6491;
          chunk__6436 = G__6492;
          count__6437 = G__6493;
          i__6438 = G__6494;
          continue;
        } else {
          var vec__6440 = cljs.core.first.call(null, seq__6435__$1);
          var key__$1 = cljs.core.nth.call(null, vec__6440, 0, null);
          var wf = cljs.core.nth.call(null, vec__6440, 1, null);
          wf.call(null);
          var G__6495 = cljs.core.next.call(null, seq__6435__$1);
          var G__6496 = null;
          var G__6497 = 0;
          var G__6498 = 0;
          seq__6435 = G__6495;
          chunk__6436 = G__6496;
          count__6437 = G__6497;
          i__6438 = G__6498;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key__$1, wf) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key__$1, wf);
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key__$1) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key__$1);
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__6441_6499 = cljs.core.seq.call(null, self__.parent_watchables);
  var chunk__6442_6500 = null;
  var count__6443_6501 = 0;
  var i__6444_6502 = 0;
  while (true) {
    if (i__6444_6502 < count__6443_6501) {
      var w_6503 = cljs.core._nth.call(null, chunk__6442_6500, i__6444_6502);
      cljs.core.remove_watch.call(null, w_6503, self__.key);
      var G__6504 = seq__6441_6499;
      var G__6505 = chunk__6442_6500;
      var G__6506 = count__6443_6501;
      var G__6507 = i__6444_6502 + 1;
      seq__6441_6499 = G__6504;
      chunk__6442_6500 = G__6505;
      count__6443_6501 = G__6506;
      i__6444_6502 = G__6507;
      continue;
    } else {
      var temp__4092__auto___6508 = cljs.core.seq.call(null, seq__6441_6499);
      if (temp__4092__auto___6508) {
        var seq__6441_6509__$1 = temp__4092__auto___6508;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6441_6509__$1)) {
          var c__4191__auto___6510 = cljs.core.chunk_first.call(null, seq__6441_6509__$1);
          var G__6511 = cljs.core.chunk_rest.call(null, seq__6441_6509__$1);
          var G__6512 = c__4191__auto___6510;
          var G__6513 = cljs.core.count.call(null, c__4191__auto___6510);
          var G__6514 = 0;
          seq__6441_6499 = G__6511;
          chunk__6442_6500 = G__6512;
          count__6443_6501 = G__6513;
          i__6444_6502 = G__6514;
          continue;
        } else {
          var w_6515 = cljs.core.first.call(null, seq__6441_6509__$1);
          cljs.core.remove_watch.call(null, w_6515, self__.key);
          var G__6516 = cljs.core.next.call(null, seq__6441_6509__$1);
          var G__6517 = null;
          var G__6518 = 0;
          var G__6519 = 0;
          seq__6441_6499 = G__6516;
          chunk__6442_6500 = G__6517;
          count__6443_6501 = G__6518;
          i__6444_6502 = G__6519;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return this$__$1.watches = null;
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", 1123661827), self__.state], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511), self__.dirty_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), self__.f], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key", "key", 1014010321), self__.key], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent-watchables", "parent-watchables", 1046094687), self__.parent_watchables], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "watches", "watches", 2139868463), self__.watches], null)], null), self__.__extmap));
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__6420) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, self__.key, self__.parent_watchables, self__.watches, G__6420, self__.__extmap, self__.__hash);
};
reflex.core.ComputedObservable.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, self__.key, self__.parent_watchables, self__.watches, self__.__meta, self__.__extmap, self__.__hash);
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "key", "key", 1014010321), null, new cljs.core.Keyword(null, "f", "f", 1013904344), null, new cljs.core.Keyword(null, "watches", "watches", 2139868463), null, new cljs.core.Keyword(null, "parent-watchables", "parent-watchables", 
  1046094687), null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new reflex.core.ComputedObservable(self__.state, self__.dirty_QMARK_, self__.f, self__.key, self__.parent_watchables, self__.watches, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "reflex.core/ComputedObservable");
};
reflex.core.ComputedObservable.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "reflex.core/ComputedObservable");
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches);
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__6422) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword(null, "state", "state", 1123661827)).cljs$core$IFn$_invoke$arity$1(G__6422), (new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511)).cljs$core$IFn$_invoke$arity$1(G__6422), (new cljs.core.Keyword(null, "f", "f", 1013904344)).cljs$core$IFn$_invoke$arity$1(G__6422), (new cljs.core.Keyword(null, "key", "key", 1014010321)).cljs$core$IFn$_invoke$arity$1(G__6422), (new cljs.core.Keyword(null, "parent-watchables", "parent-watchables", 
  1046094687)).cljs$core$IFn$_invoke$arity$1(G__6422), (new cljs.core.Keyword(null, "watches", "watches", 2139868463)).cljs$core$IFn$_invoke$arity$1(G__6422), null, cljs.core.dissoc.call(null, G__6422, new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.Keyword(null, "dirty?", "dirty?", 3977300511), new cljs.core.Keyword(null, "f", "f", 1013904344), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "parent-watchables", "parent-watchables", 1046094687), 
  new cljs.core.Keyword(null, "watches", "watches", 2139868463)));
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.key;
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0;
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__6520 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__6520;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__6524 = cljs.core._EQ_;
    var expr__6525 = limit;
    if (cljs.core.truth_(pred__6524.call(null, 1, expr__6525))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__6524.call(null, 2, expr__6525))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__6527 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__6528 = limit__$1 - 1;
            var G__6529 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__6527;
            limit__$1 = G__6528;
            parts = G__6529;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__6530 = index - 1;
        index = G__6530;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___6531 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___6531)) {
        var replacement_6532 = temp__4090__auto___6531;
        buffer.append([cljs.core.str(replacement_6532)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__6533 = index + 1;
      index = G__6533;
      continue;
    }
    break;
  }
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k6390, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
    return self__.data;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "mapping", "mapping", 1851460672))) {
      return self__.mapping;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248))) {
        return self__.key_fn;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "enter", "enter", 1110571594))) {
          return self__.enter;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "update", "update", 4470025275))) {
            return self__.update;
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "exit", "exit", 1017031824))) {
              return self__.exit;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, k6390, new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390))) {
                return self__.force_update_QMARK_;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k6390, else__4032__auto__);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__6389) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__6392 = cljs.core.keyword_identical_QMARK_;
  var expr__6393 = k__4037__auto__;
  if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__6393))) {
    return new singult.core.Unify(G__6389, self__.mapping, self__.key_fn, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "mapping", "mapping", 1851460672), expr__6393))) {
      return new singult.core.Unify(self__.data, G__6389, self__.key_fn, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248), expr__6393))) {
        return new singult.core.Unify(self__.data, self__.mapping, G__6389, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "enter", "enter", 1110571594), expr__6393))) {
          return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, G__6389, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "update", "update", 4470025275), expr__6393))) {
            return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, G__6389, self__.exit, self__.force_update_QMARK_, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "exit", "exit", 1017031824), expr__6393))) {
              return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, self__.update, G__6389, self__.force_update_QMARK_, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__6392.call(null, new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390), expr__6393))) {
                return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, self__.update, self__.exit, G__6389, self__.__meta, self__.__extmap, null);
              } else {
                return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__6389), null);
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#singult.core.Unify{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "mapping", "mapping", 1851460672), self__.mapping], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248), self__.key_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "enter", "enter", 1110571594), self__.enter], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "update", "update", 4470025275), self__.update], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "exit", "exit", 1017031824), self__.exit], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390), self__.force_update_QMARK_], null)], null), self__.__extmap));
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mapping", "mapping", 1851460672), self__.mapping], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248), self__.key_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "enter", "enter", 1110571594), self__.enter], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "update", "update", 4470025275), self__.update], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "exit", "exit", 1017031824), self__.exit], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390), self__.force_update_QMARK_], null)], null), self__.__extmap));
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap);
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__6389) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, G__6389, self__.__extmap, self__.__hash);
};
singult.core.Unify.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, self__.__extmap, self__.__hash);
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390), null, new cljs.core.Keyword(null, "enter", "enter", 1110571594), null, new cljs.core.Keyword(null, "exit", "exit", 1017031824), null, new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248), null, new cljs.core.Keyword(null, "update", 
  "update", 4470025275), null, new cljs.core.Keyword(null, "mapping", "mapping", 1851460672), null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new singult.core.Unify(self__.data, self__.mapping, self__.key_fn, self__.enter, self__.update, self__.exit, self__.force_update_QMARK_, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "singult.core/Unify");
};
singult.core.Unify.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "singult.core/Unify");
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_);
};
singult.core.map__GT_Unify = function map__GT_Unify(G__6391) {
  return new singult.core.Unify((new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__6391), (new cljs.core.Keyword(null, "mapping", "mapping", 1851460672)).cljs$core$IFn$_invoke$arity$1(G__6391), (new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248)).cljs$core$IFn$_invoke$arity$1(G__6391), (new cljs.core.Keyword(null, "enter", "enter", 1110571594)).cljs$core$IFn$_invoke$arity$1(G__6391), (new cljs.core.Keyword(null, "update", "update", 4470025275)).cljs$core$IFn$_invoke$arity$1(G__6391), 
  (new cljs.core.Keyword(null, "exit", "exit", 1017031824)).cljs$core$IFn$_invoke$arity$1(G__6391), (new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390)).cljs$core$IFn$_invoke$arity$1(G__6391), null, cljs.core.dissoc.call(null, G__6391, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "mapping", "mapping", 1851460672), new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248), new cljs.core.Keyword(null, "enter", "enter", 1110571594), new cljs.core.Keyword(null, 
  "update", "update", 4470025275), new cljs.core.Keyword(null, "exit", "exit", 1017031824), new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390)));
};
singult.core.clj__GT_js = function clj__GT_js(x) {
  if (x instanceof singult.core.Unify) {
    var map__6417 = x;
    var map__6417__$1 = cljs.core.seq_QMARK_.call(null, map__6417) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6417) : map__6417;
    var force_update_QMARK_ = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390));
    var exit = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "exit", "exit", 1017031824));
    var update = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "update", "update", 4470025275));
    var enter = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "enter", "enter", 1110571594));
    var key_fn = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248));
    var mapping = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "mapping", "mapping", 1851460672));
    var data = cljs.core.get.call(null, map__6417__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
    var data_arr = function() {
      var a = [];
      var seq__6418_6438 = cljs.core.seq.call(null, data);
      var chunk__6419_6439 = null;
      var count__6420_6440 = 0;
      var i__6421_6441 = 0;
      while (true) {
        if (i__6421_6441 < count__6420_6440) {
          var d_6442 = cljs.core._nth.call(null, chunk__6419_6439, i__6421_6441);
          a.push(d_6442);
          var G__6443 = seq__6418_6438;
          var G__6444 = chunk__6419_6439;
          var G__6445 = count__6420_6440;
          var G__6446 = i__6421_6441 + 1;
          seq__6418_6438 = G__6443;
          chunk__6419_6439 = G__6444;
          count__6420_6440 = G__6445;
          i__6421_6441 = G__6446;
          continue;
        } else {
          var temp__4092__auto___6447 = cljs.core.seq.call(null, seq__6418_6438);
          if (temp__4092__auto___6447) {
            var seq__6418_6448__$1 = temp__4092__auto___6447;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6418_6448__$1)) {
              var c__4191__auto___6449 = cljs.core.chunk_first.call(null, seq__6418_6448__$1);
              var G__6450 = cljs.core.chunk_rest.call(null, seq__6418_6448__$1);
              var G__6451 = c__4191__auto___6449;
              var G__6452 = cljs.core.count.call(null, c__4191__auto___6449);
              var G__6453 = 0;
              seq__6418_6438 = G__6450;
              chunk__6419_6439 = G__6451;
              count__6420_6440 = G__6452;
              i__6421_6441 = G__6453;
              continue;
            } else {
              var d_6454 = cljs.core.first.call(null, seq__6418_6448__$1);
              a.push(d_6454);
              var G__6455 = cljs.core.next.call(null, seq__6418_6448__$1);
              var G__6456 = null;
              var G__6457 = 0;
              var G__6458 = 0;
              seq__6418_6438 = G__6455;
              chunk__6419_6439 = G__6456;
              count__6420_6440 = G__6457;
              i__6421_6441 = G__6458;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return a;
    }();
    return new singult.coffee.Unify(data_arr, function(p1__6395_SHARP_) {
      return clj__GT_js.call(null, mapping.call(null, p1__6395_SHARP_));
    }, key_fn, enter, update, exit, force_update_QMARK_);
  } else {
    if (x instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, x);
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        var o = function() {
          var obj6423 = {};
          return obj6423;
        }();
        var seq__6424_6459 = cljs.core.seq.call(null, x);
        var chunk__6425_6460 = null;
        var count__6426_6461 = 0;
        var i__6427_6462 = 0;
        while (true) {
          if (i__6427_6462 < count__6426_6461) {
            var vec__6428_6463 = cljs.core._nth.call(null, chunk__6425_6460, i__6427_6462);
            var k_6464 = cljs.core.nth.call(null, vec__6428_6463, 0, null);
            var v_6465 = cljs.core.nth.call(null, vec__6428_6463, 1, null);
            var key_6466 = clj__GT_js.call(null, k_6464);
            if (typeof key_6466 === "string") {
            } else {
              throw "Cannot convert; JavaScript map keys must be strings";
            }
            o[key_6466] = clj__GT_js.call(null, v_6465);
            var G__6467 = seq__6424_6459;
            var G__6468 = chunk__6425_6460;
            var G__6469 = count__6426_6461;
            var G__6470 = i__6427_6462 + 1;
            seq__6424_6459 = G__6467;
            chunk__6425_6460 = G__6468;
            count__6426_6461 = G__6469;
            i__6427_6462 = G__6470;
            continue;
          } else {
            var temp__4092__auto___6471 = cljs.core.seq.call(null, seq__6424_6459);
            if (temp__4092__auto___6471) {
              var seq__6424_6472__$1 = temp__4092__auto___6471;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6424_6472__$1)) {
                var c__4191__auto___6473 = cljs.core.chunk_first.call(null, seq__6424_6472__$1);
                var G__6474 = cljs.core.chunk_rest.call(null, seq__6424_6472__$1);
                var G__6475 = c__4191__auto___6473;
                var G__6476 = cljs.core.count.call(null, c__4191__auto___6473);
                var G__6477 = 0;
                seq__6424_6459 = G__6474;
                chunk__6425_6460 = G__6475;
                count__6426_6461 = G__6476;
                i__6427_6462 = G__6477;
                continue;
              } else {
                var vec__6429_6478 = cljs.core.first.call(null, seq__6424_6472__$1);
                var k_6479 = cljs.core.nth.call(null, vec__6429_6478, 0, null);
                var v_6480 = cljs.core.nth.call(null, vec__6429_6478, 1, null);
                var key_6481 = clj__GT_js.call(null, k_6479);
                if (typeof key_6481 === "string") {
                } else {
                  throw "Cannot convert; JavaScript map keys must be strings";
                }
                o[key_6481] = clj__GT_js.call(null, v_6480);
                var G__6482 = cljs.core.next.call(null, seq__6424_6472__$1);
                var G__6483 = null;
                var G__6484 = 0;
                var G__6485 = 0;
                seq__6424_6459 = G__6482;
                chunk__6425_6460 = G__6483;
                count__6426_6461 = G__6484;
                i__6427_6462 = G__6485;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return o;
      } else {
        if (cljs.core.seq_QMARK_.call(null, x)) {
          var a = [];
          a.push(":*:");
          var seq__6430_6486 = cljs.core.seq.call(null, x);
          var chunk__6431_6487 = null;
          var count__6432_6488 = 0;
          var i__6433_6489 = 0;
          while (true) {
            if (i__6433_6489 < count__6432_6488) {
              var item_6490 = cljs.core._nth.call(null, chunk__6431_6487, i__6433_6489);
              a.push(clj__GT_js.call(null, item_6490));
              var G__6491 = seq__6430_6486;
              var G__6492 = chunk__6431_6487;
              var G__6493 = count__6432_6488;
              var G__6494 = i__6433_6489 + 1;
              seq__6430_6486 = G__6491;
              chunk__6431_6487 = G__6492;
              count__6432_6488 = G__6493;
              i__6433_6489 = G__6494;
              continue;
            } else {
              var temp__4092__auto___6495 = cljs.core.seq.call(null, seq__6430_6486);
              if (temp__4092__auto___6495) {
                var seq__6430_6496__$1 = temp__4092__auto___6495;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__6430_6496__$1)) {
                  var c__4191__auto___6497 = cljs.core.chunk_first.call(null, seq__6430_6496__$1);
                  var G__6498 = cljs.core.chunk_rest.call(null, seq__6430_6496__$1);
                  var G__6499 = c__4191__auto___6497;
                  var G__6500 = cljs.core.count.call(null, c__4191__auto___6497);
                  var G__6501 = 0;
                  seq__6430_6486 = G__6498;
                  chunk__6431_6487 = G__6499;
                  count__6432_6488 = G__6500;
                  i__6433_6489 = G__6501;
                  continue;
                } else {
                  var item_6502 = cljs.core.first.call(null, seq__6430_6496__$1);
                  a.push(clj__GT_js.call(null, item_6502));
                  var G__6503 = cljs.core.next.call(null, seq__6430_6496__$1);
                  var G__6504 = null;
                  var G__6505 = 0;
                  var G__6506 = 0;
                  seq__6430_6486 = G__6503;
                  chunk__6431_6487 = G__6504;
                  count__6432_6488 = G__6505;
                  i__6433_6489 = G__6506;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          return a;
        } else {
          if (cljs.core.coll_QMARK_.call(null, x)) {
            var a = [];
            var seq__6434_6507 = cljs.core.seq.call(null, x);
            var chunk__6435_6508 = null;
            var count__6436_6509 = 0;
            var i__6437_6510 = 0;
            while (true) {
              if (i__6437_6510 < count__6436_6509) {
                var item_6511 = cljs.core._nth.call(null, chunk__6435_6508, i__6437_6510);
                a.push(clj__GT_js.call(null, item_6511));
                var G__6512 = seq__6434_6507;
                var G__6513 = chunk__6435_6508;
                var G__6514 = count__6436_6509;
                var G__6515 = i__6437_6510 + 1;
                seq__6434_6507 = G__6512;
                chunk__6435_6508 = G__6513;
                count__6436_6509 = G__6514;
                i__6437_6510 = G__6515;
                continue;
              } else {
                var temp__4092__auto___6516 = cljs.core.seq.call(null, seq__6434_6507);
                if (temp__4092__auto___6516) {
                  var seq__6434_6517__$1 = temp__4092__auto___6516;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__6434_6517__$1)) {
                    var c__4191__auto___6518 = cljs.core.chunk_first.call(null, seq__6434_6517__$1);
                    var G__6519 = cljs.core.chunk_rest.call(null, seq__6434_6517__$1);
                    var G__6520 = c__4191__auto___6518;
                    var G__6521 = cljs.core.count.call(null, c__4191__auto___6518);
                    var G__6522 = 0;
                    seq__6434_6507 = G__6519;
                    chunk__6435_6508 = G__6520;
                    count__6436_6509 = G__6521;
                    i__6437_6510 = G__6522;
                    continue;
                  } else {
                    var item_6523 = cljs.core.first.call(null, seq__6434_6517__$1);
                    a.push(clj__GT_js.call(null, item_6523));
                    var G__6524 = cljs.core.next.call(null, seq__6434_6517__$1);
                    var G__6525 = null;
                    var G__6526 = 0;
                    var G__6527 = 0;
                    seq__6434_6507 = G__6524;
                    chunk__6435_6508 = G__6525;
                    count__6436_6509 = G__6526;
                    i__6437_6510 = G__6527;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return a;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return x;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m));
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)));
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if (v == null) {
    return null;
  } else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)));
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__6528) {
    var map__6530 = p__6528;
    var map__6530__$1 = cljs.core.seq_QMARK_.call(null, map__6530) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6530) : map__6530;
    var force_update_QMARK_ = cljs.core.get.call(null, map__6530__$1, new cljs.core.Keyword(null, "force-update?", "force-update?", 4639172390));
    var exit = cljs.core.get.call(null, map__6530__$1, new cljs.core.Keyword(null, "exit", "exit", 1017031824));
    var update = cljs.core.get.call(null, map__6530__$1, new cljs.core.Keyword(null, "update", "update", 4470025275));
    var enter = cljs.core.get.call(null, map__6530__$1, new cljs.core.Keyword(null, "enter", "enter", 1110571594));
    var key_fn = cljs.core.get.call(null, map__6530__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", 4174150248));
    return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_);
  };
  var unify = function(data, mapping, var_args) {
    var p__6528 = null;
    if (arguments.length > 2) {
      p__6528 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return unify__delegate.call(this, data, mapping, p__6528);
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__6531) {
    var data = cljs.core.first(arglist__6531);
    arglist__6531 = cljs.core.next(arglist__6531);
    var mapping = cljs.core.first(arglist__6531);
    var p__6528 = cljs.core.rest(arglist__6531);
    return unify__delegate(data, mapping, p__6528);
  };
  unify.cljs$core$IFn$_invoke$arity$variadic = unify__delegate;
  return unify;
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore;
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && (a.right == b.right && (a.bottom == b.bottom && a.left == b.left));
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && (other.right <= box.right && (other.top >= box.top && other.bottom <= box.bottom));
  }
  return other.x >= box.left && (other.x <= box.right && (other.y >= box.top && other.y <= box.bottom));
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && (b.left <= a.right && (a.top <= b.bottom && b.top <= a.bottom));
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && (b.left <= a.right + padding && (a.top <= b.bottom + padding && b.top <= a.bottom + padding));
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && (a.width == b.width && (a.top == b.top && a.height == b.height));
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && (b.left <= a.left + a.width && (a.top <= b.top + b.height && b.top <= a.top + a.height));
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || (!intersection.height || !intersection.width)) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && (this.left + this.width >= another.left + another.width && (this.top <= another.top && this.top + this.height >= another.top + another.height));
  } else {
    return another.x >= this.left && (another.x <= this.left + this.width && (another.y >= this.top && another.y <= this.top + this.height));
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || (styles.getPropertyValue(property) || "");
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || (goog.style.getCascadedStyle(element, style) || element.style && element.style[style]);
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && ((goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9"));
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && (!goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode())) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if (goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && (positionStyle == "static" && (parent != doc.documentElement && parent != doc.body));
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || (parent.scrollHeight > parent.clientHeight || (positionStyle == "fixed" || (positionStyle == "absolute" || positionStyle == "relative"))))) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && ((!goog.userAgent.WEBKIT || (el.clientHeight != 0 || el != body)) && (el != body && (el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")))) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && (visibleRect.left >= 0 && (visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left)) ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && (doc.getBoxObjectFor && (!el.getBoundingClientRect && (positionStyle == "absolute" && ((box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0)))));
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && (parent != doc.body && parent != viewportElement);) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && (currentWin != relativeWin && ((currentEl = currentWin.frameElement) && (currentWin = currentWin.parent))));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if (el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top;
    } else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y;
    }
    if (goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
    }
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0];
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY;
  }
  return pos;
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && (!offsetWidth && !offsetHeight);
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if (goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || (styleSheet.owningElement || (styleSheet));
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && (goog.dom.getDomHelper(doc).isCss1CompatMode() && (ieCurrentStyle.width != "auto" && (ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing)))) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && (el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if (goog.userAgent.IE) {
    property = "-ms-transform";
  } else {
    if (goog.userAgent.WEBKIT) {
      property = "-webkit-transform";
    } else {
      if (goog.userAgent.OPERA) {
        property = "-o-transform";
      } else {
        if (goog.userAgent.GECKO) {
          property = "-moz-transform";
        }
      }
    }
  }
  var transform;
  if (property) {
    transform = goog.style.getStyle_(element, property);
  }
  if (!transform) {
    transform = goog.style.getStyle_(element, "transform");
  }
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || (el.disabled || el.tagName.toLowerCase() == "fieldset")) {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && (el.type && el.type.toLowerCase() == "file")) {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els.type) {
    return goog.dom.forms.getValue(els);
  } else {
    for (var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if (val) {
        return val;
      }
    }
    return null;
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.dom.classes");
goog.require("singult.core");
goog.require("goog.style");
goog.require("goog.dom");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.dom.classes");
goog.require("clojure.string");
goog.require("singult.core");
goog.require("goog.style");
goog.require("goog.dom.forms");
Element.prototype.matchesSelector = Element.prototype.webkitMatchesSelector || (Element.prototype.mozMatchesSelector || (Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector));
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
    var array__$1 = this;
    return cljs.core.array_seq.call(null, array__$1, 0);
  };
} else {
}
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  var array__$1 = this;
  return cljs.core.array_seq.call(null, array__$1, 0);
};
c2.dom.IDom = function() {
  var obj6553 = {};
  return obj6553;
}();
c2.dom.__GT_dom = function __GT_dom(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.c2$dom$IDom$__GT_dom$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = c2.dom.__GT_dom[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = c2.dom.__GT_dom["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDom.-\x3edom", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  var v__$1 = this;
  return singult.core.render.call(null, v__$1);
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector);
};
if (cljs.core.truth_(typeof Node != "undefined")) {
  Node.prototype.c2$dom$IDom$ = true;
  Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
    var node__$1 = this;
    return node__$1;
  };
} else {
}
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector);
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector);
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select.cljs$core$IFn$_invoke$arity$1 = select__1;
  select.cljs$core$IFn$_invoke$arity$2 = select__2;
  return select;
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector);
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector);
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_all.cljs$core$IFn$_invoke$arity$1 = select_all__1;
  select_all.cljs$core$IFn$_invoke$arity$2 = select_all__2;
  return select_all;
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.matchesSelector(selector);
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children;
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode;
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__$1 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__$1);
  return el__$1;
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__$1 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__$1, 0);
  return el__$1;
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el));
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new$__$1 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new$__$1, c2.dom.__GT_dom.call(null, old));
  return new$__$1;
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__$1 = c2.dom.__GT_dom.call(null, el);
    if (x instanceof cljs.core.Keyword) {
      return goog.style.getComputedStyle(el__$1, cljs.core.name.call(null, x));
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        var seq__6560_6566 = cljs.core.seq.call(null, x);
        var chunk__6561_6567 = null;
        var count__6562_6568 = 0;
        var i__6563_6569 = 0;
        while (true) {
          if (i__6563_6569 < count__6562_6568) {
            var vec__6564_6570 = cljs.core._nth.call(null, chunk__6561_6567, i__6563_6569);
            var k_6571 = cljs.core.nth.call(null, vec__6564_6570, 0, null);
            var v_6572 = cljs.core.nth.call(null, vec__6564_6570, 1, null);
            style.call(null, el__$1, k_6571, v_6572);
            var G__6573 = seq__6560_6566;
            var G__6574 = chunk__6561_6567;
            var G__6575 = count__6562_6568;
            var G__6576 = i__6563_6569 + 1;
            seq__6560_6566 = G__6573;
            chunk__6561_6567 = G__6574;
            count__6562_6568 = G__6575;
            i__6563_6569 = G__6576;
            continue;
          } else {
            var temp__4092__auto___6577 = cljs.core.seq.call(null, seq__6560_6566);
            if (temp__4092__auto___6577) {
              var seq__6560_6578__$1 = temp__4092__auto___6577;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6560_6578__$1)) {
                var c__4191__auto___6579 = cljs.core.chunk_first.call(null, seq__6560_6578__$1);
                var G__6580 = cljs.core.chunk_rest.call(null, seq__6560_6578__$1);
                var G__6581 = c__4191__auto___6579;
                var G__6582 = cljs.core.count.call(null, c__4191__auto___6579);
                var G__6583 = 0;
                seq__6560_6566 = G__6580;
                chunk__6561_6567 = G__6581;
                count__6562_6568 = G__6582;
                i__6563_6569 = G__6583;
                continue;
              } else {
                var vec__6565_6584 = cljs.core.first.call(null, seq__6560_6578__$1);
                var k_6585 = cljs.core.nth.call(null, vec__6565_6584, 0, null);
                var v_6586 = cljs.core.nth.call(null, vec__6565_6584, 1, null);
                style.call(null, el__$1, k_6585, v_6586);
                var G__6587 = cljs.core.next.call(null, seq__6560_6578__$1);
                var G__6588 = null;
                var G__6589 = 0;
                var G__6590 = 0;
                seq__6560_6566 = G__6587;
                chunk__6561_6567 = G__6588;
                count__6562_6568 = G__6589;
                i__6563_6569 = G__6590;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return el__$1;
      } else {
        return null;
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), typeof v === "string" ? v : typeof v === "number" ? cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), null, new cljs.core.Keyword(null, "width", "width", 1127031096), null, new cljs.core.Keyword(null, "top", "top", 1014019271), null, new cljs.core.Keyword(null, "right", "right", 1122416014), null, new cljs.core.Keyword(null, 
    "left", "left", 1017222009), null, new cljs.core.Keyword(null, "height", "height", 4087841945), null], null), null)).call(null, cljs.core.keyword.call(null, k))) ? [cljs.core.str(v), cljs.core.str("px")].join("") : v : null);
    return el;
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  style.cljs$core$IFn$_invoke$arity$1 = style__1;
  style.cljs$core$IFn$_invoke$arity$2 = style__2;
  style.cljs$core$IFn$_invoke$arity$3 = style__3;
  return style;
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__4160__auto__ = function iter__6601(s__6602) {
        return new cljs.core.LazySeq(null, function() {
          var s__6602__$1 = s__6602;
          while (true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__6602__$1);
            if (temp__4092__auto__) {
              var s__6602__$2 = temp__4092__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__6602__$2)) {
                var c__4158__auto__ = cljs.core.chunk_first.call(null, s__6602__$2);
                var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
                var b__6604 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
                if (function() {
                  var i__6603 = 0;
                  while (true) {
                    if (i__6603 < size__4159__auto__) {
                      var i = cljs.core._nth.call(null, c__4158__auto__, i__6603);
                      cljs.core.chunk_append.call(null, b__6604, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, attrs[i].name), attrs[i].value], null));
                      var G__6611 = i__6603 + 1;
                      i__6603 = G__6611;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6604), iter__6601.call(null, cljs.core.chunk_rest.call(null, s__6602__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6604), null);
                }
              } else {
                var i = cljs.core.first.call(null, s__6602__$2);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, attrs[i].name), attrs[i].value], null), iter__6601.call(null, cljs.core.rest.call(null, s__6602__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4160__auto__.call(null, cljs.core.range.call(null, attrs.length));
    }());
  };
  var attr__2 = function(el, x) {
    var el__$1 = c2.dom.__GT_dom.call(null, el);
    if (x instanceof cljs.core.Keyword) {
      return el__$1.getAttribute(cljs.core.name.call(null, x));
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        var seq__6605_6612 = cljs.core.seq.call(null, x);
        var chunk__6606_6613 = null;
        var count__6607_6614 = 0;
        var i__6608_6615 = 0;
        while (true) {
          if (i__6608_6615 < count__6607_6614) {
            var vec__6609_6616 = cljs.core._nth.call(null, chunk__6606_6613, i__6608_6615);
            var k_6617 = cljs.core.nth.call(null, vec__6609_6616, 0, null);
            var v_6618 = cljs.core.nth.call(null, vec__6609_6616, 1, null);
            attr.call(null, el__$1, k_6617, v_6618);
            var G__6619 = seq__6605_6612;
            var G__6620 = chunk__6606_6613;
            var G__6621 = count__6607_6614;
            var G__6622 = i__6608_6615 + 1;
            seq__6605_6612 = G__6619;
            chunk__6606_6613 = G__6620;
            count__6607_6614 = G__6621;
            i__6608_6615 = G__6622;
            continue;
          } else {
            var temp__4092__auto___6623 = cljs.core.seq.call(null, seq__6605_6612);
            if (temp__4092__auto___6623) {
              var seq__6605_6624__$1 = temp__4092__auto___6623;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__6605_6624__$1)) {
                var c__4191__auto___6625 = cljs.core.chunk_first.call(null, seq__6605_6624__$1);
                var G__6626 = cljs.core.chunk_rest.call(null, seq__6605_6624__$1);
                var G__6627 = c__4191__auto___6625;
                var G__6628 = cljs.core.count.call(null, c__4191__auto___6625);
                var G__6629 = 0;
                seq__6605_6612 = G__6626;
                chunk__6606_6613 = G__6627;
                count__6607_6614 = G__6628;
                i__6608_6615 = G__6629;
                continue;
              } else {
                var vec__6610_6630 = cljs.core.first.call(null, seq__6605_6624__$1);
                var k_6631 = cljs.core.nth.call(null, vec__6610_6630, 0, null);
                var v_6632 = cljs.core.nth.call(null, vec__6610_6630, 1, null);
                attr.call(null, el__$1, k_6631, v_6632);
                var G__6633 = cljs.core.next.call(null, seq__6605_6624__$1);
                var G__6634 = null;
                var G__6635 = 0;
                var G__6636 = 0;
                seq__6605_6612 = G__6633;
                chunk__6606_6613 = G__6634;
                count__6607_6614 = G__6635;
                i__6608_6615 = G__6636;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return el__$1;
      } else {
        return null;
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__$1 = c2.dom.__GT_dom.call(null, el);
    if (v == null) {
      el__$1.removeAttribute(cljs.core.name.call(null, k));
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "style", "style", 1123684643), k)) {
        c2.dom.style.call(null, el__$1, v);
      } else {
        el__$1.setAttribute(cljs.core.name.call(null, k), v);
      }
    }
    return el__$1;
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$1 = attr__1;
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr;
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el));
  };
  var text__2 = function(el, v) {
    var el__$1 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__$1, v);
    return el__$1;
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text;
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el));
  };
  var val__2 = function(el, v) {
    var el__$1 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__$1, v);
    return el__$1;
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val;
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_);
  return el;
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true);
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false);
};
c2.dom.request_animation_frame = function() {
  var or__3443__auto__ = window.requestAnimationFrame;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    var or__3443__auto____$1 = window.webkitRequestAnimationFrame;
    if (cljs.core.truth_(or__3443__auto____$1)) {
      return or__3443__auto____$1;
    } else {
      return function(p1__6637_SHARP_) {
        return setTimeout(function() {
          return p1__6637_SHARP_.call(null);
        }, 10);
      };
    }
  }
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    map[type] = {count_:0, remaining_:0};
  }
  map = map[type];
  if (!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++;
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if (!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++;
  } else {
    listenerArray = map[srcUid];
    for (var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if (listenerObj.removed) {
          break;
        }
        if (!callOnce) {
          listenerArray[i].callOnce = false;
        }
        return listenerArray[i];
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if (!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = [];
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if (src.addEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture);
    }
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if (!listener) {
    return false;
  }
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key];
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if (!noObj) {
    if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && (opt_obj && goog.events.Listenable.isImplementedBy(opt_obj))) {
      return opt_obj.removeAllListeners(opt_type);
    }
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if (noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++;
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    return goog.events.getListeners_(obj, type, capture) || [];
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler);
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e);
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if (goog.isFunction(listener)) {
    return listener;
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this;
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget);
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if (this.reallyDisposed_) {
      return true;
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if (ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
  } else {
    return goog.events.dispatchEvent(this, e);
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true;
  } else {
    goog.events.removeAll(this);
  }
  this.parentEventTarget_ = null;
};
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      listenerObj = listenerArray[index];
      if (!callOnce) {
        listenerObj.callOnce = false;
      }
      return listenerObj;
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj;
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index);
    }
    return false;
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if (removed) {
      goog.events.cleanUp(key);
      key.removed = true;
    }
    return removed;
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for (var type in this.eventTargetListeners_) {
      if (!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for (var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true;
        }
        listenerArray.length = 0;
      }
    }
    return count;
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if (!(type in this.eventTargetListeners_)) {
      return true;
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for (var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if (listener && (!listener.removed && listener.capture == capture)) {
        if (listener.callOnce) {
          this.unlistenByKey(listener);
        }
        rv = listener.handleEvent(eventObject) !== false && rv;
      }
    }
    return rv && eventObject.returnValue_ != false;
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if (listenerArray) {
      for (var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if (listenerObj.capture == capture) {
          rv.push(listenerObj);
        }
      }
    }
    return rv;
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if (listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
    }
    return i > -1 ? listenerArray[i] : null;
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for (var i = 0;i < listenersArray.length;++i) {
        if ((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true;
        }
      }
      return false;
    });
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target;
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if (goog.isString(e)) {
      e = new goog.events.Event(e, target);
    } else {
      if (!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent);
      } else {
        e.target = e.target || target;
      }
    }
    var rv = true, currentTarget;
    if (opt_ancestorsTree) {
      for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv;
      }
    }
    if (!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if (!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    if (opt_ancestorsTree) {
      for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    return rv;
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope)) {
        return i;
      }
    }
    return-1;
  };
}
;goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x;
};
c2.maths.deg = function deg(x) {
  return x / c2.maths.radians_per_degree;
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x);
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x);
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x);
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x);
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x);
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x);
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x);
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y);
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  expt.cljs$core$IFn$_invoke$arity$1 = expt__1;
  expt.cljs$core$IFn$_invoke$arity$2 = expt__2;
  return expt;
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2);
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x);
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x);
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x);
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x);
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x);
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base);
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  log.cljs$core$IFn$_invoke$arity$1 = log__1;
  log.cljs$core$IFn$_invoke$arity$2 = log__2;
  return log;
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10;
};
c2.maths.extent = function extent(xs) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], null);
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs);
};
c2.maths.median = function median(xs) {
  var sorted = cljs.core.sort.call(null, xs);
  var n = cljs.core.count.call(null, xs);
  if (cljs.core._EQ_.call(null, n, 1)) {
    return cljs.core.first.call(null, sorted);
  } else {
    if (cljs.core.odd_QMARK_.call(null, n)) {
      return cljs.core.nth.call(null, sorted, (n + 1) / 2);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var mid = n / 2;
        return c2.maths.mean.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.call(null, sorted, c2.maths.floor.call(null, mid)), cljs.core.nth.call(null, sorted, c2.maths.ceil.call(null, mid))], null));
      } else {
        return null;
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start);
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [end], null));
  };
  var irange__3 = function(start, end, step) {
    var r = cljs.core.range.call(null, start, end, step);
    if (cljs.core.mod.call(null, cljs.core.first.call(null, r), step) === cljs.core.mod.call(null, end, step)) {
      return cljs.core.concat.call(null, r, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [end], null));
    } else {
      return r;
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  irange.cljs$core$IFn$_invoke$arity$1 = irange__1;
  irange.cljs$core$IFn$_invoke$arity$2 = irange__2;
  irange.cljs$core$IFn$_invoke$arity$3 = irange__3;
  return irange;
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__6532) {
  var vec__6534 = p__6532;
  var bottom = cljs.core.nth.call(null, vec__6534, 0, null);
  var top = cljs.core.nth.call(null, vec__6534, 1, null);
  return bottom <= x && x <= top;
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if (typeof A === "number" && typeof B === "number") {
        return A + B;
      } else {
        if (cljs.core.coll_QMARK_.call(null, A) && cljs.core.coll_QMARK_.call(null, B)) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B);
        } else {
          if (typeof A === "number" && cljs.core.coll_QMARK_.call(null, B)) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B);
          } else {
            if (cljs.core.coll_QMARK_.call(null, A) && typeof B === "number") {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B));
            } else {
              return null;
            }
          }
        }
      }
    }, args);
  };
  var add = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return add__delegate.call(this, args);
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__6535) {
    var args = cljs.core.seq(arglist__6535);
    return add__delegate(args);
  };
  add.cljs$core$IFn$_invoke$arity$variadic = add__delegate;
  return add;
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if (typeof 0 === "number" && typeof cljs.core.first.call(null, args) === "number") {
        return 0 - cljs.core.first.call(null, args);
      } else {
        if (cljs.core.coll_QMARK_.call(null, 0) && cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args));
        } else {
          if (typeof 0 === "number" && cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args));
          } else {
            if (cljs.core.coll_QMARK_.call(null, 0) && typeof cljs.core.first.call(null, args) === "number") {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      return cljs.core.reduce.call(null, function(A, B) {
        if (typeof A === "number" && typeof B === "number") {
          return A - B;
        } else {
          if (cljs.core.coll_QMARK_.call(null, A) && cljs.core.coll_QMARK_.call(null, B)) {
            return cljs.core.map.call(null, cljs.core._, A, B);
          } else {
            if (typeof A === "number" && cljs.core.coll_QMARK_.call(null, B)) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B);
            } else {
              if (cljs.core.coll_QMARK_.call(null, A) && typeof B === "number") {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B));
              } else {
                return null;
              }
            }
          }
        }
      }, args);
    }
  };
  var sub = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sub__delegate.call(this, args);
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__6536) {
    var args = cljs.core.seq(arglist__6536);
    return sub__delegate(args);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if (typeof A === "number" && typeof B === "number") {
        return A * B;
      } else {
        if (cljs.core.coll_QMARK_.call(null, A) && cljs.core.coll_QMARK_.call(null, B)) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B);
        } else {
          if (typeof A === "number" && cljs.core.coll_QMARK_.call(null, B)) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B);
          } else {
            if (cljs.core.coll_QMARK_.call(null, A) && typeof B === "number") {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B));
            } else {
              return null;
            }
          }
        }
      }
    }, args);
  };
  var mul = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return mul__delegate.call(this, args);
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__6537) {
    var args = cljs.core.seq(arglist__6537);
    return mul__delegate(args);
  };
  mul.cljs$core$IFn$_invoke$arity$variadic = mul__delegate;
  return mul;
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if (typeof 1 === "number" && typeof cljs.core.first.call(null, args) === "number") {
        return 1 / cljs.core.first.call(null, args);
      } else {
        if (cljs.core.coll_QMARK_.call(null, 1) && cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args));
        } else {
          if (typeof 1 === "number" && cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args));
          } else {
            if (cljs.core.coll_QMARK_.call(null, 1) && typeof cljs.core.first.call(null, args) === "number") {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      return cljs.core.reduce.call(null, function(A, B) {
        if (typeof A === "number" && typeof B === "number") {
          return A / B;
        } else {
          if (cljs.core.coll_QMARK_.call(null, A) && cljs.core.coll_QMARK_.call(null, B)) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B);
          } else {
            if (typeof A === "number" && cljs.core.coll_QMARK_.call(null, B)) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B);
            } else {
              if (cljs.core.coll_QMARK_.call(null, A) && typeof B === "number") {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B));
              } else {
                return null;
              }
            }
          }
        }
      }, args);
    }
  };
  var div = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return div__delegate.call(this, args);
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__6538) {
    var args = cljs.core.seq(arglist__6538);
    return div__delegate(args);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__6539) {
    var map__6545 = p__6539;
    var map__6545__$1 = cljs.core.seq_QMARK_.call(null, map__6545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6545) : map__6545;
    var probs = cljs.core.get.call(null, map__6545__$1, new cljs.core.Keyword(null, "probs", "probs", 1120844592), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0.25, 0.5, 0.75, 1], null));
    var xs = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1 = cljs.core.count.call(null, xs) - 1;
    var iter__4160__auto__ = function iter__6546(s__6547) {
      return new cljs.core.LazySeq(null, function() {
        var s__6547__$1 = s__6547;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__6547__$1);
          if (temp__4092__auto__) {
            var s__6547__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__6547__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__6547__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__6549 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__6548 = 0;
                while (true) {
                  if (i__6548 < size__4159__auto__) {
                    var q = cljs.core._nth.call(null, c__4158__auto__, i__6548);
                    cljs.core.chunk_append.call(null, b__6549, function() {
                      var index = q * n_1 + 1;
                      var lo = c2.maths.floor.call(null, index) | 0;
                      var h = index - lo;
                      var a = xs.call(null, lo - 1);
                      if (cljs.core._EQ_.call(null, h, 0)) {
                        return a;
                      } else {
                        return a + h * (xs.call(null, lo) - a);
                      }
                    }());
                    var G__6550 = i__6548 + 1;
                    i__6548 = G__6550;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6549), iter__6546.call(null, cljs.core.chunk_rest.call(null, s__6547__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6549), null);
              }
            } else {
              var q = cljs.core.first.call(null, s__6547__$2);
              return cljs.core.cons.call(null, function() {
                var index = q * n_1 + 1;
                var lo = c2.maths.floor.call(null, index) | 0;
                var h = index - lo;
                var a = xs.call(null, lo - 1);
                if (cljs.core._EQ_.call(null, h, 0)) {
                  return a;
                } else {
                  return a + h * (xs.call(null, lo) - a);
                }
              }(), iter__6546.call(null, cljs.core.rest.call(null, s__6547__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, probs);
  };
  var quantile = function(data, var_args) {
    var p__6539 = null;
    if (arguments.length > 1) {
      p__6539 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return quantile__delegate.call(this, data, p__6539);
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__6551) {
    var data = cljs.core.first(arglist__6551);
    var p__6539 = cljs.core.rest(arglist__6551);
    return quantile__delegate(data, p__6539);
  };
  quantile.cljs$core$IFn$_invoke$arity$variadic = quantile__delegate;
  return quantile;
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
goog.require("c2.maths");
c2.scale.IInvertable = function() {
  var obj5231 = {};
  return obj5231;
}();
c2.scale.invert = function invert(scale) {
  if (function() {
    var and__3431__auto__ = scale;
    if (and__3431__auto__) {
      return scale.c2$scale$IInvertable$invert$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale);
  } else {
    var x__4070__auto__ = scale == null ? null : scale;
    return function() {
      var or__3443__auto__ = c2.scale.invert[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = c2.scale.invert["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale);
  }
};
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k5233, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k5233, new cljs.core.Keyword(null, "domain", "domain", 3982673974))) {
    return self__.domain;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k5233, new cljs.core.Keyword(null, "range", "range", 1122184367))) {
      return self__.range;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k5233, else__4032__auto__);
      } else {
        return null;
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__5232) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__5236 = cljs.core.keyword_identical_QMARK_;
  var expr__5237 = k__4037__auto__;
  if (cljs.core.truth_(pred__5236.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), expr__5237))) {
    return new c2.scale._linear(G__5232, self__.range, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5236.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367), expr__5237))) {
      return new c2.scale._linear(self__.domain, G__5232, self__.__meta, self__.__extmap, null);
    } else {
      return new c2.scale._linear(self__.domain, self__.range, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__5232), null);
    }
  }
};
c2.scale._linear.prototype.call = function(self__, x) {
  var self__ = this;
  var self____$1 = this;
  var _ = self____$1;
  var domain_length = cljs.core.last.call(null, self__.domain) - cljs.core.first.call(null, self__.domain);
  var range_length = cljs.core.last.call(null, self__.range) - cljs.core.first.call(null, self__.range);
  return cljs.core.first.call(null, self__.range) + range_length * ((x - cljs.core.first.call(null, self__.domain)) / domain_length);
};
c2.scale._linear.prototype.apply = function(self__, args5235) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5235)));
};
c2.scale._linear.prototype.cljs$core$IFn$_invoke$arity$1 = function(x) {
  var self__ = this;
  var _ = this;
  var domain_length = cljs.core.last.call(null, self__.domain) - cljs.core.first.call(null, self__.domain);
  var range_length = cljs.core.last.call(null, self__.range) - cljs.core.first.call(null, self__.range);
  return cljs.core.first.call(null, self__.range) + range_length * ((x - cljs.core.first.call(null, self__.domain)) / domain_length);
};
c2.scale._linear.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#c2.scale._linear{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.domain], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.domain], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.assoc.call(null, this$__$1, new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.range, new cljs.core.Keyword(null, "range", "range", 1122184367), self__.domain);
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__5232) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new c2.scale._linear(self__.domain, self__.range, G__5232, self__.__extmap, self__.__hash);
};
c2.scale._linear.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new c2.scale._linear(self__.domain, self__.range, self__.__meta, self__.__extmap, self__.__hash);
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), null, new cljs.core.Keyword(null, "range", "range", 1122184367), null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new c2.scale._linear(self__.domain, self__.range, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "c2.scale/_linear");
};
c2.scale._linear.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "c2.scale/_linear");
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range);
};
c2.scale.map__GT__linear = function map__GT__linear(G__5234) {
  return new c2.scale._linear((new cljs.core.Keyword(null, "domain", "domain", 3982673974)).cljs$core$IFn$_invoke$arity$1(G__5234), (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(G__5234), null, cljs.core.dissoc.call(null, G__5234, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.Keyword(null, "range", "range", 1122184367)));
};
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null), new cljs.core.Keyword(null, "range", "range", 1122184367), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null)], null), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)));
  };
  var linear = function(var_args) {
    var kwargs = null;
    if (arguments.length > 0) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return linear__delegate.call(this, kwargs);
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__5239) {
    var kwargs = cljs.core.seq(arglist__5239);
    return linear__delegate(kwargs);
  };
  linear.cljs$core$IFn$_invoke$arity$variadic = linear__delegate;
  return linear;
}();
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k5241, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k5241, new cljs.core.Keyword(null, "domain", "domain", 3982673974))) {
    return self__.domain;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k5241, new cljs.core.Keyword(null, "range", "range", 1122184367))) {
      return self__.range;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k5241, else__4032__auto__);
      } else {
        return null;
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__5240) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__5244 = cljs.core.keyword_identical_QMARK_;
  var expr__5245 = k__4037__auto__;
  if (cljs.core.truth_(pred__5244.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), expr__5245))) {
    return new c2.scale._power(G__5240, self__.range, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5244.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367), expr__5245))) {
      return new c2.scale._power(self__.domain, G__5240, self__.__meta, self__.__extmap, null);
    } else {
      return new c2.scale._power(self__.domain, self__.range, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__5240), null);
    }
  }
};
c2.scale._power.prototype.call = function(self__, x) {
  var self__ = this;
  var self____$1 = this;
  var _ = self____$1;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), cljs.core.map.call(null, c2.maths.expt, self__.domain), new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range), c2.maths.expt).call(null, x);
};
c2.scale._power.prototype.apply = function(self__, args5243) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5243)));
};
c2.scale._power.prototype.cljs$core$IFn$_invoke$arity$1 = function(x) {
  var self__ = this;
  var _ = this;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), cljs.core.map.call(null, c2.maths.expt, self__.domain), new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range), c2.maths.expt).call(null, x);
};
c2.scale._power.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#c2.scale._power{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.domain], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.domain], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__5240) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new c2.scale._power(self__.domain, self__.range, G__5240, self__.__extmap, self__.__hash);
};
c2.scale._power.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new c2.scale._power(self__.domain, self__.range, self__.__meta, self__.__extmap, self__.__hash);
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), null, new cljs.core.Keyword(null, "range", "range", 1122184367), null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new c2.scale._power(self__.domain, self__.range, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "c2.scale/_power");
};
c2.scale._power.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "c2.scale/_power");
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range);
};
c2.scale.map__GT__power = function map__GT__power(G__5242) {
  return new c2.scale._power((new cljs.core.Keyword(null, "domain", "domain", 3982673974)).cljs$core$IFn$_invoke$arity$1(G__5242), (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(G__5242), null, cljs.core.dissoc.call(null, G__5242, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.Keyword(null, "range", "range", 1122184367)));
};
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null), new cljs.core.Keyword(null, "range", "range", 1122184367), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null)], null), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)));
  };
  var power = function(var_args) {
    var kwargs = null;
    if (arguments.length > 0) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return power__delegate.call(this, kwargs);
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__5247) {
    var kwargs = cljs.core.seq(arglist__5247);
    return power__delegate(kwargs);
  };
  power.cljs$core$IFn$_invoke$arity$variadic = power__delegate;
  return power;
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k5249, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k5249, new cljs.core.Keyword(null, "domain", "domain", 3982673974))) {
    return self__.domain;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k5249, new cljs.core.Keyword(null, "range", "range", 1122184367))) {
      return self__.range;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k5249, else__4032__auto__);
      } else {
        return null;
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__5248) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__5252 = cljs.core.keyword_identical_QMARK_;
  var expr__5253 = k__4037__auto__;
  if (cljs.core.truth_(pred__5252.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), expr__5253))) {
    return new c2.scale._log(G__5248, self__.range, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5252.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367), expr__5253))) {
      return new c2.scale._log(self__.domain, G__5248, self__.__meta, self__.__extmap, null);
    } else {
      return new c2.scale._log(self__.domain, self__.range, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__5248), null);
    }
  }
};
c2.scale._log.prototype.call = function(self__, x) {
  var self__ = this;
  var self____$1 = this;
  var _ = self____$1;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), cljs.core.map.call(null, c2.maths.log, self__.domain), new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range), c2.maths.log).call(null, x);
};
c2.scale._log.prototype.apply = function(self__, args5251) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5251)));
};
c2.scale._log.prototype.cljs$core$IFn$_invoke$arity$1 = function(x) {
  var self__ = this;
  var _ = this;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), cljs.core.map.call(null, c2.maths.log, self__.domain), new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range), c2.maths.log).call(null, x);
};
c2.scale._log.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#c2.scale._log{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.domain], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), self__.domain], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__5248) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new c2.scale._log(self__.domain, self__.range, G__5248, self__.__extmap, self__.__hash);
};
c2.scale._log.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new c2.scale._log(self__.domain, self__.range, self__.__meta, self__.__extmap, self__.__hash);
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), null, new cljs.core.Keyword(null, "range", "range", 1122184367), null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new c2.scale._log(self__.domain, self__.range, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "c2.scale/_log");
};
c2.scale._log.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "c2.scale/_log");
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range);
};
c2.scale.map__GT__log = function map__GT__log(G__5250) {
  return new c2.scale._log((new cljs.core.Keyword(null, "domain", "domain", 3982673974)).cljs$core$IFn$_invoke$arity$1(G__5250), (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(G__5250), null, cljs.core.dissoc.call(null, G__5250, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.Keyword(null, "range", "range", 1122184367)));
};
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null), new cljs.core.Keyword(null, "range", "range", 1122184367), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null)], null), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)));
  };
  var log = function(var_args) {
    var kwargs = null;
    if (arguments.length > 0) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log__delegate.call(this, kwargs);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__5255) {
    var kwargs = cljs.core.seq(arglist__5255);
    return log__delegate(kwargs);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
goog.provide("goog.events.MouseWheelEvent");
goog.provide("goog.events.MouseWheelHandler");
goog.provide("goog.events.MouseWheelHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.math");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.events.MouseWheelHandler = function(element, opt_capture) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  var rtlElement = goog.dom.isElement(this.element_) ? (this.element_) : this.element_ ? (this.element_).body : null;
  this.isRtl_ = !!rtlElement && goog.style.isRightToLeft(rtlElement);
  var type = goog.userAgent.GECKO ? "DOMMouseScroll" : "mousewheel";
  this.listenKey_ = goog.events.listen(this.element_, type, this, opt_capture);
};
goog.inherits(goog.events.MouseWheelHandler, goog.events.EventTarget);
goog.events.MouseWheelHandler.EventType = {MOUSEWHEEL:"mousewheel"};
goog.events.MouseWheelHandler.prototype.maxDeltaX_;
goog.events.MouseWheelHandler.prototype.maxDeltaY_;
goog.events.MouseWheelHandler.prototype.setMaxDeltaX = function(maxDeltaX) {
  this.maxDeltaX_ = maxDeltaX;
};
goog.events.MouseWheelHandler.prototype.setMaxDeltaY = function(maxDeltaY) {
  this.maxDeltaY_ = maxDeltaY;
};
goog.events.MouseWheelHandler.prototype.handleEvent = function(e) {
  var deltaX = 0;
  var deltaY = 0;
  var detail = 0;
  var be = e.getBrowserEvent();
  if (be.type == "mousewheel") {
    var wheelDeltaScaleFactor = 1;
    if (goog.userAgent.IE || goog.userAgent.WEBKIT && (goog.userAgent.WINDOWS || goog.userAgent.isVersion("532.0"))) {
      wheelDeltaScaleFactor = 40;
    }
    detail = goog.events.MouseWheelHandler.smartScale_(-be.wheelDelta, wheelDeltaScaleFactor);
    if (goog.isDef(be.wheelDeltaX)) {
      deltaX = goog.events.MouseWheelHandler.smartScale_(-be.wheelDeltaX, wheelDeltaScaleFactor);
      deltaY = goog.events.MouseWheelHandler.smartScale_(-be.wheelDeltaY, wheelDeltaScaleFactor);
    } else {
      deltaY = detail;
    }
  } else {
    detail = be.detail;
    if (detail > 100) {
      detail = 3;
    } else {
      if (detail < -100) {
        detail = -3;
      }
    }
    if (goog.isDef(be.axis) && be.axis === be.HORIZONTAL_AXIS) {
      deltaX = detail;
    } else {
      deltaY = detail;
    }
  }
  if (goog.isNumber(this.maxDeltaX_)) {
    deltaX = goog.math.clamp(deltaX, -this.maxDeltaX_, this.maxDeltaX_);
  }
  if (goog.isNumber(this.maxDeltaY_)) {
    deltaY = goog.math.clamp(deltaY, -this.maxDeltaY_, this.maxDeltaY_);
  }
  if (this.isRtl_) {
    deltaX = -deltaX;
  }
  var newEvent = new goog.events.MouseWheelEvent(detail, be, deltaX, deltaY);
  this.dispatchEvent(newEvent);
};
goog.events.MouseWheelHandler.smartScale_ = function(mouseWheelDelta, scaleFactor) {
  if (goog.userAgent.WEBKIT && ((goog.userAgent.MAC || goog.userAgent.LINUX) && mouseWheelDelta % scaleFactor != 0)) {
    return mouseWheelDelta;
  } else {
    return mouseWheelDelta / scaleFactor;
  }
};
goog.events.MouseWheelHandler.prototype.disposeInternal = function() {
  goog.events.MouseWheelHandler.superClass_.disposeInternal.call(this);
  goog.events.unlistenByKey(this.listenKey_);
  this.listenKey_ = null;
};
goog.events.MouseWheelEvent = function(detail, browserEvent, deltaX, deltaY) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.MouseWheelHandler.EventType.MOUSEWHEEL;
  this.detail = detail;
  this.deltaX = deltaX;
  this.deltaY = deltaY;
};
goog.inherits(goog.events.MouseWheelEvent, goog.events.BrowserEvent);
/*

 This code is licensed under the following BSD license:
 Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights
 reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimer.

    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.

 THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR
 IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL Andrea Leofreddi OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 The views and conclusions contained in the software and documentation are
 those of the authors and should not be interpreted as representing official
 policies, either expressed or implied, of Andrea Leofreddi.

*/
goog.provide("svgpan.SvgPan");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("goog.events.MouseWheelHandler");
svgpan.SvgPan = function(opt_graphElementId, opt_root) {
  goog.base(this);
  this.root_ = opt_root || document.documentElement;
  this.graphElementId_ = opt_graphElementId || null;
  this.cancelNextClick_ = false;
  this.enablePan_ = true;
  this.enableZoom_ = true;
  this.enableDrag_ = false;
  this.zoomScale_ = 0.4;
  this.state_ = svgpan.SvgPan.State.NONE;
  this.svgRoot_ = null;
  this.stateTarget_ = null;
  this.stateOrigin_ = null;
  this.stateTf_ = null;
  this.mouseWheelHandler_ = null;
  this.setupHandlers_();
};
goog.inherits(svgpan.SvgPan, goog.Disposable);
svgpan.SvgPan.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.events.removeAll(this.root_);
  this.mouseWheelHandler_.dispose();
};
svgpan.SvgPan.State = {NONE:"none", PAN:"pan", DRAG:"drag"};
svgpan.SvgPan.prototype.setPanEnabled = function(enabled) {
  this.enablePan_ = enabled;
};
svgpan.SvgPan.prototype.setZoomEnabled = function(enabled) {
  this.enableZoom_ = enabled;
};
svgpan.SvgPan.prototype.setDragEnabled = function(enabled) {
  this.enableDrag_ = enabled;
};
svgpan.SvgPan.prototype.setZoomScale = function(scale) {
  this.zoomScale_ = scale;
};
svgpan.SvgPan.prototype.setupHandlers_ = function() {
  goog.events.listen(this.root_, goog.events.EventType.CLICK, goog.bind(this.handleMouseClick_, this));
  goog.events.listen(this.root_, goog.events.EventType.MOUSEUP, goog.bind(this.handleMouseUp_, this));
  goog.events.listen(this.root_, goog.events.EventType.MOUSEDOWN, goog.bind(this.handleMouseDown_, this));
  goog.events.listen(this.root_, goog.events.EventType.MOUSEMOVE, goog.bind(this.handleMouseMove_, this));
  this.mouseWheelHandler_ = new goog.events.MouseWheelHandler(this.root_);
  goog.events.listen(this.mouseWheelHandler_, goog.events.MouseWheelHandler.EventType.MOUSEWHEEL, goog.bind(this.handleMouseWheel_, this));
};
svgpan.SvgPan.prototype.getRoot_ = function(svgDoc) {
  if (!this.svgRoot_) {
    var r = this.graphElementId_ ? svgDoc.getElementById(this.graphElementId_) : svgDoc.documentElement;
    var t = r;
    while (t != svgDoc) {
      if (t.getAttribute("viewBox")) {
        this.setCtm_(r, r.getCTM());
        t.removeAttribute("viewBox");
      }
      t = t.parentNode;
    }
    this.svgRoot_ = r;
  }
  return this.svgRoot_;
};
svgpan.SvgPan.prototype.getEventPoint_ = function(evt) {
  return this.newPoint_(evt.clientX, evt.clientY);
};
svgpan.SvgPan.prototype.newPoint_ = function(x, y) {
  var p = this.root_.createSVGPoint();
  p.x = x;
  p.y = y;
  return p;
};
svgpan.SvgPan.prototype.setCtm_ = function(element, matrix) {
  var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";
  element.setAttribute("transform", s);
};
svgpan.SvgPan.prototype.handleMouseWheel_ = function(evt) {
  if (!this.enableZoom_) {
    return;
  }
  evt.preventDefault();
  var svgDoc = evt.target.ownerDocument;
  var delta = evt.deltaY / -9;
  var z = Math.pow(1 + this.zoomScale_, delta);
  var g = this.getRoot_(svgDoc);
  var p = this.getEventPoint_(evt);
  p = p.matrixTransform(g.getCTM().inverse());
  var k = this.root_.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);
  this.setCtm_(g, g.getCTM().multiply(k));
  if (typeof this.stateTf_ == "undefined") {
    this.stateTf_ = g.getCTM().inverse();
  }
  this.stateTf_ = this.stateTf_ ? this.stateTf_.multiply(k.inverse()) : this.stateTf_;
};
svgpan.SvgPan.prototype.handleMouseMove_ = function(evt) {
  if (evt.button != 0) {
    return;
  }
  this.handleMove(evt.clientX, evt.clientY, evt.target.ownerDocument);
};
svgpan.SvgPan.prototype.handleMove = function(x, y, svgDoc) {
  var g = this.getRoot_(svgDoc);
  if (this.state_ == svgpan.SvgPan.State.PAN && this.enablePan_) {
    var p = this.newPoint_(x, y).matrixTransform(this.stateTf_);
    this.setCtm_(g, this.stateTf_.inverse().translate(p.x - this.stateOrigin_.x, p.y - this.stateOrigin_.y));
    this.cancelNextClick_ = true;
  } else {
    if (this.state_ == svgpan.SvgPan.State.DRAG && this.enableDrag_) {
      var p = this.newPoint_(x, y).matrixTransform(g.getCTM().inverse());
      this.setCtm_(this.stateTarget_, this.root_.createSVGMatrix().translate(p.x - this.stateOrigin_.x, p.y - this.stateOrigin_.y).multiply(g.getCTM().inverse()).multiply(this.stateTarget_.getCTM()));
      this.stateOrigin_ = p;
    }
  }
};
svgpan.SvgPan.prototype.handleMouseDown_ = function(evt) {
  if (evt.button != 0) {
    return;
  }
  evt.preventDefault();
  var svgDoc = evt.target.ownerDocument;
  var g = this.getRoot_(svgDoc);
  if (evt.target.tagName == "svg" || !this.enableDrag_) {
    this.state_ = svgpan.SvgPan.State.PAN;
    this.stateTf_ = g.getCTM().inverse();
    this.stateOrigin_ = this.getEventPoint_(evt).matrixTransform(this.stateTf_);
  } else {
    this.state_ = svgpan.SvgPan.State.DRAG;
    this.stateTarget_ = evt.target;
    this.stateTf_ = g.getCTM().inverse();
    this.stateOrigin_ = this.getEventPoint_(evt).matrixTransform(this.stateTf_);
  }
};
svgpan.SvgPan.prototype.handleMouseUp_ = function(evt) {
  if (this.state_ != svgpan.SvgPan.State.NONE) {
    this.endPanOrDrag();
  }
};
svgpan.SvgPan.prototype.endPanOrDrag = function() {
  if (this.state_ != svgpan.SvgPan.State.NONE) {
    this.state_ = svgpan.SvgPan.State.NONE;
  }
};
svgpan.SvgPan.prototype.handleMouseClick_ = function(evt) {
  if (this.cancelNextClick_) {
    evt.stopPropagation();
    evt.preventDefault();
  }
  this.cancelNextClick_ = false;
};
svgpan.SvgPan.prototype.getState = function() {
  return this.state_;
};
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("c2.dom");
goog.require("singult.core");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if (cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data));
    } else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args);
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return unify__delegate.call(this, data, mapping, args);
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__6414) {
    var data = cljs.core.first(arglist__6414);
    arglist__6414 = cljs.core.next(arglist__6414);
    var mapping = cljs.core.first(arglist__6414);
    var args = cljs.core.rest(arglist__6414);
    return unify__delegate(data, mapping, args);
  };
  unify.cljs$core$IFn$_invoke$arity$variadic = unify__delegate;
  return unify;
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj6286 = {};
  return obj6286;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3431__auto__ = reader;
    if (and__3431__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4070__auto__ = reader == null ? null : reader;
    return function() {
      var or__3443__auto__ = cljs.reader.read_char[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.read_char["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3431__auto__ = reader;
    if (and__3431__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4070__auto__ = reader == null ? null : reader;
    return function() {
      var or__3443__auto__ = cljs.reader.unread[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.unread["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3443__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__6287) {
    var rdr = cljs.core.first(arglist__6287);
    var msg = cljs.core.rest(arglist__6287);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3431__auto__ = !(ch === "#");
  if (and__3431__auto__) {
    var and__3431__auto____$1 = !(ch === "'");
    if (and__3431__auto____$1) {
      var and__3431__auto____$2 = !(ch === ":");
      if (and__3431__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3431__auto____$2;
      }
    } else {
      return and__3431__auto____$1;
    }
  } else {
    return and__3431__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__6288 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__6289 = cljs.reader.read_char.call(null, rdr);
      sb = G__6288;
      ch = G__6289;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__6290 = cljs.reader.read_char.call(null, rdr);
      ch = G__6290;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__6291 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__6291;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__6292 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__6292;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = ch == null;
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3443__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__6293 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__6294 = cljs.reader.read_char.call(null, reader);
      buffer = G__6293;
      ch = G__6294;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__6295 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__6296 = cljs.reader.read_char.call(null, reader);
        buffer = G__6295;
        ch = G__6296;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__6297 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__6298 = cljs.reader.read_char.call(null, reader);
            buffer = G__6297;
            ch = G__6298;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__6300 = o;
    if (G__6300) {
      var bit__4093__auto__ = G__6300.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4093__auto__ || G__6300.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6300.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6300);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6300);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__6301 = reader;
        var G__6302 = eof_is_error;
        var G__6303 = sentinel;
        var G__6304 = is_recursive;
        reader = G__6301;
        eof_is_error = G__6302;
        sentinel = G__6303;
        is_recursive = G__6304;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__6305 = cljs.reader.read_comment.call(null, reader, ch);
          var G__6306 = eof_is_error;
          var G__6307 = sentinel;
          var G__6308 = is_recursive;
          reader = G__6305;
          eof_is_error = G__6306;
          sentinel = G__6307;
          is_recursive = G__6308;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__6309 = reader;
              var G__6310 = eof_is_error;
              var G__6311 = sentinel;
              var G__6312 = is_recursive;
              reader = G__6309;
              eof_is_error = G__6310;
              sentinel = G__6311;
              is_recursive = G__6312;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__6313 = b.append("0");
            b = G__6313;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__6315 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__6315, 0, null);
  var years = cljs.core.nth.call(null, vec__6315, 1, null);
  var months = cljs.core.nth.call(null, vec__6315, 2, null);
  var days = cljs.core.nth.call(null, vec__6315, 3, null);
  var hours = cljs.core.nth.call(null, vec__6315, 4, null);
  var minutes = cljs.core.nth.call(null, vec__6315, 5, null);
  var seconds = cljs.core.nth.call(null, vec__6315, 6, null);
  var fraction = cljs.core.nth.call(null, vec__6315, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__6315, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__6315, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__6315, 10, null);
  var v = vec__6315;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__6317 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__6317, 0, null);
    var months = cljs.core.nth.call(null, vec__6317, 1, null);
    var days = cljs.core.nth.call(null, vec__6317, 2, null);
    var hours = cljs.core.nth.call(null, vec__6317, 3, null);
    var minutes = cljs.core.nth.call(null, vec__6317, 4, null);
    var seconds = cljs.core.nth.call(null, vec__6317, 5, null);
    var ms = cljs.core.nth.call(null, vec__6317, 6, null);
    var offset = cljs.core.nth.call(null, vec__6317, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__6330_6342 = cljs.core.seq.call(null, form);
    var chunk__6331_6343 = null;
    var count__6332_6344 = 0;
    var i__6333_6345 = 0;
    while (true) {
      if (i__6333_6345 < count__6332_6344) {
        var x_6346 = cljs.core._nth.call(null, chunk__6331_6343, i__6333_6345);
        arr.push(x_6346);
        var G__6347 = seq__6330_6342;
        var G__6348 = chunk__6331_6343;
        var G__6349 = count__6332_6344;
        var G__6350 = i__6333_6345 + 1;
        seq__6330_6342 = G__6347;
        chunk__6331_6343 = G__6348;
        count__6332_6344 = G__6349;
        i__6333_6345 = G__6350;
        continue;
      } else {
        var temp__4092__auto___6351 = cljs.core.seq.call(null, seq__6330_6342);
        if (temp__4092__auto___6351) {
          var seq__6330_6352__$1 = temp__4092__auto___6351;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6330_6352__$1)) {
            var c__4191__auto___6353 = cljs.core.chunk_first.call(null, seq__6330_6352__$1);
            var G__6354 = cljs.core.chunk_rest.call(null, seq__6330_6352__$1);
            var G__6355 = c__4191__auto___6353;
            var G__6356 = cljs.core.count.call(null, c__4191__auto___6353);
            var G__6357 = 0;
            seq__6330_6342 = G__6354;
            chunk__6331_6343 = G__6355;
            count__6332_6344 = G__6356;
            i__6333_6345 = G__6357;
            continue;
          } else {
            var x_6358 = cljs.core.first.call(null, seq__6330_6352__$1);
            arr.push(x_6358);
            var G__6359 = cljs.core.next.call(null, seq__6330_6352__$1);
            var G__6360 = null;
            var G__6361 = 0;
            var G__6362 = 0;
            seq__6330_6342 = G__6359;
            chunk__6331_6343 = G__6360;
            count__6332_6344 = G__6361;
            i__6333_6345 = G__6362;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj6335 = {};
        return obj6335;
      }();
      var seq__6336_6363 = cljs.core.seq.call(null, form);
      var chunk__6337_6364 = null;
      var count__6338_6365 = 0;
      var i__6339_6366 = 0;
      while (true) {
        if (i__6339_6366 < count__6338_6365) {
          var vec__6340_6367 = cljs.core._nth.call(null, chunk__6337_6364, i__6339_6366);
          var k_6368 = cljs.core.nth.call(null, vec__6340_6367, 0, null);
          var v_6369 = cljs.core.nth.call(null, vec__6340_6367, 1, null);
          obj[cljs.core.name.call(null, k_6368)] = v_6369;
          var G__6370 = seq__6336_6363;
          var G__6371 = chunk__6337_6364;
          var G__6372 = count__6338_6365;
          var G__6373 = i__6339_6366 + 1;
          seq__6336_6363 = G__6370;
          chunk__6337_6364 = G__6371;
          count__6338_6365 = G__6372;
          i__6339_6366 = G__6373;
          continue;
        } else {
          var temp__4092__auto___6374 = cljs.core.seq.call(null, seq__6336_6363);
          if (temp__4092__auto___6374) {
            var seq__6336_6375__$1 = temp__4092__auto___6374;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6336_6375__$1)) {
              var c__4191__auto___6376 = cljs.core.chunk_first.call(null, seq__6336_6375__$1);
              var G__6377 = cljs.core.chunk_rest.call(null, seq__6336_6375__$1);
              var G__6378 = c__4191__auto___6376;
              var G__6379 = cljs.core.count.call(null, c__4191__auto___6376);
              var G__6380 = 0;
              seq__6336_6363 = G__6377;
              chunk__6337_6364 = G__6378;
              count__6338_6365 = G__6379;
              i__6339_6366 = G__6380;
              continue;
            } else {
              var vec__6341_6381 = cljs.core.first.call(null, seq__6336_6375__$1);
              var k_6382 = cljs.core.nth.call(null, vec__6341_6381, 0, null);
              var v_6383 = cljs.core.nth.call(null, vec__6341_6381, 1, null);
              obj[cljs.core.name.call(null, k_6382)] = v_6383;
              var G__6384 = cljs.core.next.call(null, seq__6336_6375__$1);
              var G__6385 = null;
              var G__6386 = 0;
              var G__6387 = 0;
              seq__6336_6363 = G__6384;
              chunk__6337_6364 = G__6385;
              count__6338_6365 = G__6386;
              i__6339_6366 = G__6387;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("c2.event");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("c2.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("c2.dom");
goog.require("c2.dom");
goog.require("c2.core");
goog.require("cljs.reader");
c2.event.on_load = function on_load(f) {
  return goog.events.listen(window, goog.events.EventType.LOAD, f);
};
c2.event.on_raw = function() {
  var on_raw__delegate = function(node, event_type, f, p__6301) {
    var map__6303 = p__6301;
    var map__6303__$1 = cljs.core.seq_QMARK_.call(null, map__6303) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6303) : map__6303;
    var capture = cljs.core.get.call(null, map__6303__$1, new cljs.core.Keyword(null, "capture", "capture", 1566489272), false);
    return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), f, capture);
  };
  var on_raw = function(node, event_type, f, var_args) {
    var p__6301 = null;
    if (arguments.length > 3) {
      p__6301 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return on_raw__delegate.call(this, node, event_type, f, p__6301);
  };
  on_raw.cljs$lang$maxFixedArity = 3;
  on_raw.cljs$lang$applyTo = function(arglist__6304) {
    var node = cljs.core.first(arglist__6304);
    arglist__6304 = cljs.core.next(arglist__6304);
    var event_type = cljs.core.first(arglist__6304);
    arglist__6304 = cljs.core.next(arglist__6304);
    var f = cljs.core.first(arglist__6304);
    var p__6301 = cljs.core.rest(arglist__6304);
    return on_raw__delegate(node, event_type, f, p__6301);
  };
  on_raw.cljs$core$IFn$_invoke$arity$variadic = on_raw__delegate;
  return on_raw;
}();
c2.event.on = function() {
  var on = null;
  var on__3 = function(node, event_type, f) {
    return on.call(null, node, "*", event_type, f);
  };
  var on__5 = function() {
    var G__6282__delegate = function(node, selector, event_type, f, p__6279) {
      var map__6281 = p__6279;
      var map__6281__$1 = cljs.core.seq_QMARK_.call(null, map__6281) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6281) : map__6281;
      var capture = cljs.core.get.call(null, map__6281__$1, new cljs.core.Keyword(null, "capture", "capture", 1566489272), false);
      return goog.events.listen(c2.dom.__GT_dom.call(null, node), cljs.core.name.call(null, event_type), function(event) {
        if (cljs.core.truth_(c2.dom.matches_selector_QMARK_.call(null, event.target, selector))) {
          var $node = event.target;
          while (true) {
            var temp__4090__auto__ = c2.core.node_data.call(null, $node);
            if (cljs.core.truth_(temp__4090__auto__)) {
              var d = temp__4090__auto__;
              return f.call(null, d, $node, event);
            } else {
              var temp__4090__auto____$1 = c2.dom.parent.call(null, $node);
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var parent = temp__4090__auto____$1;
                var G__6283 = parent;
                $node = G__6283;
                continue;
              } else {
                return null;
              }
            }
            break;
          }
        } else {
          return null;
        }
      }, capture);
    };
    var G__6282 = function(node, selector, event_type, f, var_args) {
      var p__6279 = null;
      if (arguments.length > 4) {
        p__6279 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6282__delegate.call(this, node, selector, event_type, f, p__6279);
    };
    G__6282.cljs$lang$maxFixedArity = 4;
    G__6282.cljs$lang$applyTo = function(arglist__6284) {
      var node = cljs.core.first(arglist__6284);
      arglist__6284 = cljs.core.next(arglist__6284);
      var selector = cljs.core.first(arglist__6284);
      arglist__6284 = cljs.core.next(arglist__6284);
      var event_type = cljs.core.first(arglist__6284);
      arglist__6284 = cljs.core.next(arglist__6284);
      var f = cljs.core.first(arglist__6284);
      var p__6279 = cljs.core.rest(arglist__6284);
      return G__6282__delegate(node, selector, event_type, f, p__6279);
    };
    G__6282.cljs$core$IFn$_invoke$arity$variadic = G__6282__delegate;
    return G__6282;
  }();
  on = function(node, selector, event_type, f, var_args) {
    var p__6279 = var_args;
    switch(arguments.length) {
      case 3:
        return on__3.call(this, node, selector, event_type);
      default:
        return on__5.cljs$core$IFn$_invoke$arity$variadic(node, selector, event_type, f, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  on.cljs$lang$maxFixedArity = 4;
  on.cljs$lang$applyTo = on__5.cljs$lang$applyTo;
  on.cljs$core$IFn$_invoke$arity$3 = on__3;
  on.cljs$core$IFn$_invoke$arity$variadic = on__5.cljs$core$IFn$_invoke$arity$variadic;
  return on;
}();
goog.provide("progl.core");
goog.require("cljs.core");
goog.require("c2.event");
goog.require("c2.core");
goog.require("c2.scale");
goog.require("c2.scale");
goog.require("c2.event");
goog.require("c2.core");
goog.require("clojure.string");
goog.require("progl.languages");
goog.require("c2.dom");
goog.require("svgpan.SvgPan");
goog.require("c2.maths");
goog.require("clojure.string");
goog.require("progl.languages");
goog.require("c2.maths");
goog.require("c2.dom");
goog.require("svgpan.SvgPan");
progl.core.year_scale = function year_scale(value) {
  return c2.scale.linear.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1942, 2014], null), new cljs.core.Keyword(null, "range", "range", 1122184367), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 100], null)).call(null, value) | 0;
};
progl.core.pixel_scale = function pixel_scale(percentage, dimension) {
  return c2.scale.linear.call(null, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 100], null), new cljs.core.Keyword(null, "range", "range", 1122184367), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, dimension], null)).call(null, percentage) | 0;
};
progl.core.percentage = function percentage(value) {
  return[cljs.core.str(percentage), cljs.core.str("%")].join("");
};
progl.core.pixels = function pixels(value) {
  return[cljs.core.str(value), cljs.core.str("px")].join("");
};
progl.core.translate = function() {
  var translate__delegate = function(p__19333) {
    var map__19335 = p__19333;
    var map__19335__$1 = cljs.core.seq_QMARK_.call(null, map__19335) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19335) : map__19335;
    var y = cljs.core.get.call(null, map__19335__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
    var x = cljs.core.get.call(null, map__19335__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
    return[cljs.core.str("translate("), cljs.core.str(x), cljs.core.str(" "), cljs.core.str(y), cljs.core.str(")")].join("");
  };
  var translate = function(var_args) {
    var p__19333 = null;
    if (arguments.length > 0) {
      p__19333 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return translate__delegate.call(this, p__19333);
  };
  translate.cljs$lang$maxFixedArity = 0;
  translate.cljs$lang$applyTo = function(arglist__19336) {
    var p__19333 = cljs.core.seq(arglist__19336);
    return translate__delegate(p__19333);
  };
  translate.cljs$core$IFn$_invoke$arity$variadic = translate__delegate;
  return translate;
}();
progl.core.scale = function scale(scale_factor) {
  return[cljs.core.str("scale("), cljs.core.str(scale_factor), cljs.core.str(")")].join("");
};
progl.core.calculate_year_intervals = function calculate_year_intervals(min_year, max_year, interval_size) {
  return cljs.core.map.call(null, function(p1__19337_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.hash_set, p1__19337_SHARP_);
  }, cljs.core.partition_all.call(null, interval_size, cljs.core.range.call(null, min_year, max_year)));
};
progl.core.year_intervals = progl.core.calculate_year_intervals.call(null, 1943, 2014, 4);
progl.core.preprocess_language = function preprocess_language(p__19338) {
  var vec__19342 = p__19338;
  var index = cljs.core.nth.call(null, vec__19342, 0, null);
  var vec__19343 = cljs.core.nth.call(null, vec__19342, 1, null);
  var language_key = cljs.core.nth.call(null, vec__19343, 0, null);
  var map__19344 = cljs.core.nth.call(null, vec__19343, 1, null);
  var map__19344__$1 = cljs.core.seq_QMARK_.call(null, map__19344) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19344) : map__19344;
  var language = map__19344__$1;
  var appearance_year = cljs.core.get.call(null, map__19344__$1, new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584));
  return new cljs.core.PersistentArrayMap.fromArray([language_key, function() {
    var window_width = 12E3;
    return cljs.core.assoc.call(null, language, new cljs.core.Keyword(null, "svg", "svg", 1014018518), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "x", "x", 1013904362), progl.core.pixel_scale.call(null, progl.core.year_scale.call(null, appearance_year), window_width), new cljs.core.Keyword(null, "y", "y", 1013904363), 100 + 300 * index, new cljs.core.Keyword(null, "radius", "radius", 4370292740), 40], null));
  }()], true, false);
};
progl.core.preprocess_language_year = function preprocess_language_year(language_year_group) {
  return cljs.core.map.call(null, progl.core.preprocess_language, cljs.core.map_indexed.call(null, cljs.core.vector, language_year_group));
};
progl.core.year_interval = function year_interval(year) {
  return cljs.core.flatten.call(null, cljs.core.filter.call(null, function(p1__19345_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, p1__19345_SHARP_, year);
  }, progl.core.year_intervals));
};
progl.core.influenced_languages = function influenced_languages(language, languages) {
  return cljs.core.apply.call(null, cljs.core.hash_set, cljs.core.keys.call(null, cljs.core.filter.call(null, function(p1__19346_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__19346_SHARP_)), language);
  }, languages)));
};
progl.core.filter_languages = function filter_languages(languages) {
  return cljs.core.filter.call(null, function(p1__19347_SHARP_) {
    return 0 <= cljs.core.count.call(null, progl.core.influenced_languages.call(null, cljs.core.key.call(null, p1__19347_SHARP_), languages));
  }, languages);
};
progl.core.preprocess_languages = function preprocess_languages(languages) {
  return cljs.core.apply.call(null, cljs.core.merge, cljs.core.flatten.call(null, cljs.core.map.call(null, progl.core.preprocess_language_year, cljs.core.vals.call(null, cljs.core.group_by.call(null, function(p1__19348_SHARP_) {
    return progl.core.year_interval.call(null, (new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__19348_SHARP_)));
  }, progl.core.filter_languages.call(null, languages))))));
};
progl.core.preprocessed_languages = progl.core.preprocess_languages.call(null, progl.languages.languages);
progl.core.make_language_node = function make_language_node(p__19349) {
  var vec__19354 = p__19349;
  var index = cljs.core.nth.call(null, vec__19354, 0, null);
  var vec__19355 = cljs.core.nth.call(null, vec__19354, 1, null);
  var language_key = cljs.core.nth.call(null, vec__19355, 0, null);
  var map__19356 = cljs.core.nth.call(null, vec__19355, 1, null);
  var map__19356__$1 = cljs.core.seq_QMARK_.call(null, map__19356) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19356) : map__19356;
  var map__19357 = cljs.core.get.call(null, map__19356__$1, new cljs.core.Keyword(null, "svg", "svg", 1014018518));
  var map__19357__$1 = cljs.core.seq_QMARK_.call(null, map__19357) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19357) : map__19357;
  var radius = cljs.core.get.call(null, map__19357__$1, new cljs.core.Keyword(null, "radius", "radius", 4370292740));
  var y = cljs.core.get.call(null, map__19357__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
  var x = cljs.core.get.call(null, map__19357__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "g", "g", 1013904345), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "transform", "transform", 2066570974), progl.core.translate.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), x, new cljs.core.Keyword(null, "y", "y", 1013904363), y)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "circle", "circle", 3948654658), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.name.call(null, language_key), new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.name.call(null, language_key), new cljs.core.Keyword(null, "r", "r", 1013904356), radius], null)], null)], null);
};
progl.core.overflow_text = function overflow_text(text) {
  if (cljs.core.count.call(null, text) >= 11) {
    return[cljs.core.str(cljs.core.subs.call(null, text, 0, 11)), cljs.core.str("...")].join("");
  } else {
    return text;
  }
};
progl.core.make_language_label = function make_language_label(p__19358) {
  var vec__19363 = p__19358;
  var index = cljs.core.nth.call(null, vec__19363, 0, null);
  var vec__19364 = cljs.core.nth.call(null, vec__19363, 1, null);
  var language_key = cljs.core.nth.call(null, vec__19364, 0, null);
  var map__19365 = cljs.core.nth.call(null, vec__19364, 1, null);
  var map__19365__$1 = cljs.core.seq_QMARK_.call(null, map__19365) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19365) : map__19365;
  var map__19366 = cljs.core.get.call(null, map__19365__$1, new cljs.core.Keyword(null, "svg", "svg", 1014018518));
  var map__19366__$1 = cljs.core.seq_QMARK_.call(null, map__19366) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19366) : map__19366;
  var y = cljs.core.get.call(null, map__19366__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
  var x = cljs.core.get.call(null, map__19366__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
  var language_name = cljs.core.get.call(null, map__19365__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
  var appearance_year = cljs.core.get.call(null, map__19365__$1, new cljs.core.Keyword(null, "appearance-year", "appearance-year", 2753822584));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "g", "g", 1013904345), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "transform", "transform", 2066570974), progl.core.translate.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), x, new cljs.core.Keyword(null, "y", "y", 1013904363), y)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "text", "text", 1017460895), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dx", "dx", 1013907462), 0, new cljs.core.Keyword(null, "dy", "dy", 1013907463), 0, new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.name.call(null, language_key)], null), progl.core.overflow_text.call(null, language_name)], null)], null);
};
progl.core.make_line = function() {
  var make_line__delegate = function(p__19367) {
    var map__19369 = p__19367;
    var map__19369__$1 = cljs.core.seq_QMARK_.call(null, map__19369) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19369) : map__19369;
    var line = map__19369__$1;
    var style = cljs.core.get.call(null, map__19369__$1, new cljs.core.Keyword(null, "style", "style", 1123684643));
    var y2 = cljs.core.get.call(null, map__19369__$1, new cljs.core.Keyword(null, "y2", "y2", 1013908043));
    var x2 = cljs.core.get.call(null, map__19369__$1, new cljs.core.Keyword(null, "x2", "x2", 1013908012));
    var y1 = cljs.core.get.call(null, map__19369__$1, new cljs.core.Keyword(null, "y1", "y1", 1013908042));
    var x1 = cljs.core.get.call(null, map__19369__$1, new cljs.core.Keyword(null, "x1", "x1", 1013908011));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 1017226086), cljs.core.assoc.call(null, line, new cljs.core.Keyword(null, "style", "style", 1123684643), style)], null);
  };
  var make_line = function(var_args) {
    var p__19367 = null;
    if (arguments.length > 0) {
      p__19367 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return make_line__delegate.call(this, p__19367);
  };
  make_line.cljs$lang$maxFixedArity = 0;
  make_line.cljs$lang$applyTo = function(arglist__19370) {
    var p__19367 = cljs.core.seq(arglist__19370);
    return make_line__delegate(p__19367);
  };
  make_line.cljs$core$IFn$_invoke$arity$variadic = make_line__delegate;
  return make_line;
}();
progl.core.connect_languages = function connect_languages(p__19371, p__19372) {
  var vec__19375 = p__19371;
  var language1_key = cljs.core.nth.call(null, vec__19375, 0, null);
  var language1 = cljs.core.nth.call(null, vec__19375, 1, null);
  var vec__19376 = p__19372;
  var language2_key = cljs.core.nth.call(null, vec__19376, 0, null);
  var language2 = cljs.core.nth.call(null, vec__19376, 1, null);
  var x1 = (new cljs.core.Keyword(null, "x", "x", 1013904362)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "svg", "svg", 1014018518)).cljs$core$IFn$_invoke$arity$1(language1));
  var y1 = (new cljs.core.Keyword(null, "y", "y", 1013904363)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "svg", "svg", 1014018518)).cljs$core$IFn$_invoke$arity$1(language1));
  var x2 = (new cljs.core.Keyword(null, "x", "x", 1013904362)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "svg", "svg", 1014018518)).cljs$core$IFn$_invoke$arity$1(language2));
  var y2 = (new cljs.core.Keyword(null, "y", "y", 1013904363)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "svg", "svg", 1014018518)).cljs$core$IFn$_invoke$arity$1(language2));
  var r1 = (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "svg", "svg", 1014018518)).cljs$core$IFn$_invoke$arity$1(language1));
  var r2 = (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "svg", "svg", 1014018518)).cljs$core$IFn$_invoke$arity$1(language2));
  var dx = x2 - x1;
  var dy = y2 - y1;
  var line_angle = c2.maths.atan.call(null, (y1 - y2) / (x1 - x2));
  var css_classes = [cljs.core.str(cljs.core.name.call(null, language1_key)), cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, language2_key))].join("");
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "g", "g", 1013904345), progl.core.make_line.call(null, new cljs.core.Keyword(null, "x1", "x1", 1013908011), dx, new cljs.core.Keyword(null, "y1", "y1", 1013908042), dy, new cljs.core.Keyword(null, "x2", "x2", 1013908012), -(r1 * c2.maths.cos.call(null, line_angle)), new cljs.core.Keyword(null, "y2", "y2", 1013908043), -(r1 * c2.maths.sin.call(null, line_angle)), new cljs.core.Keyword(null, 
  "class", "class", 1108647146), css_classes, new cljs.core.Keyword(null, "transform", "transform", 2066570974), progl.core.translate.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), x1, new cljs.core.Keyword(null, "y", "y", 1013904363), y1))], null);
};
progl.core.shown_languages = cljs.core.atom.call(null, progl.core.preprocessed_languages);
progl.core.make_language_connections = function make_language_connections(p__19378) {
  var vec__19383 = p__19378;
  var index = cljs.core.nth.call(null, vec__19383, 0, null);
  var vec__19384 = cljs.core.nth.call(null, vec__19383, 1, null);
  var language_key = cljs.core.nth.call(null, vec__19384, 0, null);
  var map__19385 = cljs.core.nth.call(null, vec__19384, 1, null);
  var map__19385__$1 = cljs.core.seq_QMARK_.call(null, map__19385) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19385) : map__19385;
  var language = map__19385__$1;
  var map__19386 = cljs.core.get.call(null, map__19385__$1, new cljs.core.Keyword(null, "svg", "svg", 1014018518));
  var map__19386__$1 = cljs.core.seq_QMARK_.call(null, map__19386) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19386) : map__19386;
  var y = cljs.core.get.call(null, map__19386__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
  var x = cljs.core.get.call(null, map__19386__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
  var influenced_by = cljs.core.get.call(null, map__19385__$1, new cljs.core.Keyword(null, "influenced-by", "influenced-by", 3914644039));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "g", "g", 1013904345), cljs.core.map.call(null, function(p1__19377_SHARP_) {
    return progl.core.connect_languages.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [language_key, language], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19377_SHARP_, p1__19377_SHARP_.call(null, progl.core.preprocessed_languages)], null));
  }, cljs.core.filter.call(null, cljs.core.partial.call(null, cljs.core.contains_QMARK_, cljs.core.deref.call(null, progl.core.shown_languages)), influenced_by))], null);
};
progl.core.make_all_language_connections = function make_all_language_connections(langs) {
  var co__4427__auto__ = function() {
    var co__4372__auto__ = new reflex.core.ComputedObservable(null, true, function() {
      return c2.core.unify.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.vec.call(null, cljs.core.deref.call(null, langs))), progl.core.make_language_connections);
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
    cljs.core.deref.call(null, co__4372__auto__);
    return co__4372__auto__;
  }();
  var $el__4428__auto__ = c2.dom.__GT_dom.call(null, "#connections");
  singult.core.merge_BANG_.call(null, $el__4428__auto__, cljs.core.deref.call(null, co__4427__auto__));
  cljs.core.add_watch.call(null, co__4427__auto__, new cljs.core.Keyword(null, "update-dom", "update-dom", 716806576), function() {
    return singult.core.merge_BANG_.call(null, $el__4428__auto__, cljs.core.deref.call(null, co__4427__auto__));
  });
  return co__4427__auto__;
};
progl.core.make_all_language_nodes = function make_all_language_nodes(langs) {
  var co__4427__auto__ = function() {
    var co__4372__auto__ = new reflex.core.ComputedObservable(null, true, function() {
      return c2.core.unify.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.vec.call(null, cljs.core.deref.call(null, langs))), progl.core.make_language_node);
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
    cljs.core.deref.call(null, co__4372__auto__);
    return co__4372__auto__;
  }();
  var $el__4428__auto__ = c2.dom.__GT_dom.call(null, "#nodes");
  singult.core.merge_BANG_.call(null, $el__4428__auto__, cljs.core.deref.call(null, co__4427__auto__));
  cljs.core.add_watch.call(null, co__4427__auto__, new cljs.core.Keyword(null, "update-dom", "update-dom", 716806576), function() {
    return singult.core.merge_BANG_.call(null, $el__4428__auto__, cljs.core.deref.call(null, co__4427__auto__));
  });
  return co__4427__auto__;
};
progl.core.make_all_language_lables = function make_all_language_lables(langs) {
  var co__4427__auto__ = function() {
    var co__4372__auto__ = new reflex.core.ComputedObservable(null, true, function() {
      return c2.core.unify.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.vec.call(null, cljs.core.deref.call(null, langs))), progl.core.make_language_label);
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
    cljs.core.deref.call(null, co__4372__auto__);
    return co__4372__auto__;
  }();
  var $el__4428__auto__ = c2.dom.__GT_dom.call(null, "#lables");
  singult.core.merge_BANG_.call(null, $el__4428__auto__, cljs.core.deref.call(null, co__4427__auto__));
  cljs.core.add_watch.call(null, co__4427__auto__, new cljs.core.Keyword(null, "update-dom", "update-dom", 716806576), function() {
    return singult.core.merge_BANG_.call(null, $el__4428__auto__, cljs.core.deref.call(null, co__4427__auto__));
  });
  return co__4427__auto__;
};
progl.core.class_pattern = function class_pattern(class_name) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("(^| )"), cljs.core.str(cljs.core.name.call(null, class_name)), cljs.core.str("($| )")].join(""));
};
progl.core.has_class_QMARK_ = function has_class_QMARK_(node, class$) {
  return!(cljs.core.re_find.call(null, progl.core.class_pattern.call(null, class$), c2.dom.attr.call(null, node, new cljs.core.Keyword(null, "class", "class", 1108647146))) == null);
};
progl.core.add_class_BANG_ = function add_class_BANG_(node, class$) {
  if (progl.core.has_class_QMARK_.call(null, node, class$)) {
    return null;
  } else {
    return c2.dom.attr.call(null, node, new cljs.core.Keyword(null, "class", "class", 1108647146), clojure.string.trim.call(null, [cljs.core.str(c2.dom.attr.call(null, node, new cljs.core.Keyword(null, "class", "class", 1108647146))), cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, class$))].join("")));
  }
};
progl.core.remove_class_BANG_ = function remove_class_BANG_(node, class$) {
  if (progl.core.has_class_QMARK_.call(null, node, class$)) {
    return c2.dom.attr.call(null, node, new cljs.core.Keyword(null, "class", "class", 1108647146), clojure.string.replace.call(null, c2.dom.attr.call(null, node, new cljs.core.Keyword(null, "class", "class", 1108647146)), progl.core.class_pattern.call(null, class$), ""));
  } else {
    return null;
  }
};
progl.core.toggle_class_BANG_ = function toggle_class_BANG_(node, class$) {
  if (progl.core.has_class_QMARK_.call(null, node, class$)) {
    return progl.core.remove_class_BANG_.call(null, node, class$);
  } else {
    return progl.core.add_class_BANG_.call(null, node, class$);
  }
};
progl.core.remove_active_BANG_ = function remove_active_BANG_() {
  var seq__19391 = cljs.core.seq.call(null, c2.dom.select_all.call(null, ".active"));
  var chunk__19392 = null;
  var count__19393 = 0;
  var i__19394 = 0;
  while (true) {
    if (i__19394 < count__19393) {
      var node = cljs.core._nth.call(null, chunk__19392, i__19394);
      progl.core.remove_class_BANG_.call(null, node, new cljs.core.Keyword(null, "active", "active", 3885920888));
      var G__19395 = seq__19391;
      var G__19396 = chunk__19392;
      var G__19397 = count__19393;
      var G__19398 = i__19394 + 1;
      seq__19391 = G__19395;
      chunk__19392 = G__19396;
      count__19393 = G__19397;
      i__19394 = G__19398;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__19391);
      if (temp__4092__auto__) {
        var seq__19391__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19391__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__19391__$1);
          var G__19399 = cljs.core.chunk_rest.call(null, seq__19391__$1);
          var G__19400 = c__4191__auto__;
          var G__19401 = cljs.core.count.call(null, c__4191__auto__);
          var G__19402 = 0;
          seq__19391 = G__19399;
          chunk__19392 = G__19400;
          count__19393 = G__19401;
          i__19394 = G__19402;
          continue;
        } else {
          var node = cljs.core.first.call(null, seq__19391__$1);
          progl.core.remove_class_BANG_.call(null, node, new cljs.core.Keyword(null, "active", "active", 3885920888));
          var G__19403 = cljs.core.next.call(null, seq__19391__$1);
          var G__19404 = null;
          var G__19405 = 0;
          var G__19406 = 0;
          seq__19391 = G__19403;
          chunk__19392 = G__19404;
          count__19393 = G__19405;
          i__19394 = G__19406;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
progl.core.scroll_centered_BANG_ = function scroll_centered_BANG_(x, y) {
  var screen = window.screen;
  var w = screen.availWidth;
  var h = screen.availHeight;
  return scrollTo(x - w / 2, y - h / 2);
};
progl.core.activate_language_BANG_ = function activate_language_BANG_(lang_key) {
  var seq__19411 = cljs.core.seq.call(null, c2.dom.select_all.call(null, [cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, lang_key))].join("")));
  var chunk__19412 = null;
  var count__19413 = 0;
  var i__19414 = 0;
  while (true) {
    if (i__19414 < count__19413) {
      var node = cljs.core._nth.call(null, chunk__19412, i__19414);
      progl.core.add_class_BANG_.call(null, node, new cljs.core.Keyword(null, "active", "active", 3885920888));
      var G__19415 = seq__19411;
      var G__19416 = chunk__19412;
      var G__19417 = count__19413;
      var G__19418 = i__19414 + 1;
      seq__19411 = G__19415;
      chunk__19412 = G__19416;
      count__19413 = G__19417;
      i__19414 = G__19418;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__19411);
      if (temp__4092__auto__) {
        var seq__19411__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19411__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__19411__$1);
          var G__19419 = cljs.core.chunk_rest.call(null, seq__19411__$1);
          var G__19420 = c__4191__auto__;
          var G__19421 = cljs.core.count.call(null, c__4191__auto__);
          var G__19422 = 0;
          seq__19411 = G__19419;
          chunk__19412 = G__19420;
          count__19413 = G__19421;
          i__19414 = G__19422;
          continue;
        } else {
          var node = cljs.core.first.call(null, seq__19411__$1);
          progl.core.add_class_BANG_.call(null, node, new cljs.core.Keyword(null, "active", "active", 3885920888));
          var G__19423 = cljs.core.next.call(null, seq__19411__$1);
          var G__19424 = null;
          var G__19425 = 0;
          var G__19426 = 0;
          seq__19411 = G__19423;
          chunk__19412 = G__19424;
          count__19413 = G__19425;
          i__19414 = G__19426;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
progl.core.on_node_click = function on_node_click(p__19427, node, event) {
  var vec__19432 = p__19427;
  var index = cljs.core.nth.call(null, vec__19432, 0, null);
  var vec__19433 = cljs.core.nth.call(null, vec__19432, 1, null);
  var lang_key = cljs.core.nth.call(null, vec__19433, 0, null);
  var map__19434 = cljs.core.nth.call(null, vec__19433, 1, null);
  var map__19434__$1 = cljs.core.seq_QMARK_.call(null, map__19434) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19434) : map__19434;
  var map__19435 = cljs.core.get.call(null, map__19434__$1, new cljs.core.Keyword(null, "svg", "svg", 1014018518));
  var map__19435__$1 = cljs.core.seq_QMARK_.call(null, map__19435) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19435) : map__19435;
  var y = cljs.core.get.call(null, map__19435__$1, new cljs.core.Keyword(null, "y", "y", 1013904363));
  var x = cljs.core.get.call(null, map__19435__$1, new cljs.core.Keyword(null, "x", "x", 1013904362));
  var lang_name = cljs.core.get.call(null, map__19434__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
  var search_term = [cljs.core.str('"'), cljs.core.str(lang_name), cljs.core.str('"')].join("");
  c2.dom.select.call(null, "#search").value = search_term;
  return progl.core.handle_search_input.call(null, search_term);
};
progl.core.on_connection_click = function on_connection_click(data, node, event) {
  progl.core.remove_active_BANG_.call(null);
  var line_node = event.target;
  progl.core.toggle_class_BANG_.call(null, line_node, new cljs.core.Keyword(null, "active", "active", 3885920888));
  var seq__19440 = cljs.core.seq.call(null, cljs.core.remove.call(null, cljs.core.partial.call(null, cljs.core._EQ_, "active"), clojure.string.split.call(null, c2.dom.attr.call(null, line_node, new cljs.core.Keyword(null, "class", "class", 1108647146)), / /)));
  var chunk__19441 = null;
  var count__19442 = 0;
  var i__19443 = 0;
  while (true) {
    if (i__19443 < count__19442) {
      var language = cljs.core._nth.call(null, chunk__19441, i__19443);
      progl.core.toggle_class_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#"), cljs.core.str(language)].join("")), new cljs.core.Keyword(null, "active", "active", 3885920888));
      var G__19444 = seq__19440;
      var G__19445 = chunk__19441;
      var G__19446 = count__19442;
      var G__19447 = i__19443 + 1;
      seq__19440 = G__19444;
      chunk__19441 = G__19445;
      count__19442 = G__19446;
      i__19443 = G__19447;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__19440);
      if (temp__4092__auto__) {
        var seq__19440__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19440__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__19440__$1);
          var G__19448 = cljs.core.chunk_rest.call(null, seq__19440__$1);
          var G__19449 = c__4191__auto__;
          var G__19450 = cljs.core.count.call(null, c__4191__auto__);
          var G__19451 = 0;
          seq__19440 = G__19448;
          chunk__19441 = G__19449;
          count__19442 = G__19450;
          i__19443 = G__19451;
          continue;
        } else {
          var language = cljs.core.first.call(null, seq__19440__$1);
          progl.core.toggle_class_BANG_.call(null, c2.dom.select.call(null, [cljs.core.str("#"), cljs.core.str(language)].join("")), new cljs.core.Keyword(null, "active", "active", 3885920888));
          var G__19452 = cljs.core.next.call(null, seq__19440__$1);
          var G__19453 = null;
          var G__19454 = 0;
          var G__19455 = 0;
          seq__19440 = G__19452;
          chunk__19441 = G__19453;
          count__19442 = G__19454;
          i__19443 = G__19455;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
progl.core.make_graph_BANG_ = function make_graph_BANG_(langs) {
  progl.core.make_all_language_connections.call(null, langs);
  progl.core.make_all_language_nodes.call(null, langs);
  progl.core.make_all_language_lables.call(null, langs);
  c2.event.on.call(null, "#lables", new cljs.core.Keyword(null, "click", "click", 1108654330), progl.core.on_node_click);
  c2.event.on.call(null, "#nodes", new cljs.core.Keyword(null, "click", "click", 1108654330), progl.core.on_node_click);
  return c2.event.on.call(null, "#connections", new cljs.core.Keyword(null, "click", "click", 1108654330), progl.core.on_connection_click);
};
progl.core.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
progl.core.string_contains_QMARK_ = function string_contains_QMARK_(string, s) {
  return cljs.core.not_EQ_.call(null, -1, string.indexOf(s));
};
progl.core.string_starts_with_QMARK_ = function string_starts_with_QMARK_(string, s) {
  return cljs.core._EQ_.call(null, 0, string.indexOf(s));
};
progl.core.string_ends_with_QMARK_ = function string_ends_with_QMARK_(string, s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, cljs.core.re_pattern.call(null, [cljs.core.str(s), cljs.core.str("$")].join("")), string))) {
    return true;
  } else {
    return false;
  }
};
progl.core.lang_filter_pred = function lang_filter_pred(lang_name) {
  if (progl.core.string_starts_with_QMARK_.call(null, lang_name, '"') && progl.core.string_ends_with_QMARK_.call(null, lang_name, '"')) {
    return cljs.core._EQ_;
  } else {
    return progl.core.string_contains_QMARK_;
  }
};
progl.core.find_langs_with_name = function find_langs_with_name(langs, lang_name) {
  if (cljs.core._EQ_.call(null, "", lang_name)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    var filter_pred = progl.core.lang_filter_pred.call(null, lang_name);
    return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.flatten.call(null, cljs.core.filter.call(null, function(p1__19456_SHARP_) {
      return filter_pred.call(null, progl.core.lower_case.call(null, (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__19456_SHARP_))), progl.core.lower_case.call(null, clojure.string.replace.call(null, lang_name, /\"/, "")));
    }, langs)));
  }
};
progl.core.matches_text = function matches_text(n) {
  return[cljs.core.str(n), cljs.core.str(" language"), cljs.core.str(cljs.core._EQ_.call(null, n, 1) ? null : "s")].join("");
};
progl.core.shown_list_languages = cljs.core.atom.call(null, cljs.core.sort_by.call(null, function(p1__19457_SHARP_) {
  return(new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__19457_SHARP_));
}, progl.core.preprocessed_languages));
progl.core.handle_search_input = function handle_search_input(search_term) {
  progl.core.remove_active_BANG_.call(null);
  var filtered_langs = progl.core.find_langs_with_name.call(null, progl.core.preprocessed_languages, search_term);
  var filtered_lang_keys = cljs.core.keys.call(null, filtered_langs);
  var seq__19462_19466 = cljs.core.seq.call(null, filtered_lang_keys);
  var chunk__19463_19467 = null;
  var count__19464_19468 = 0;
  var i__19465_19469 = 0;
  while (true) {
    if (i__19465_19469 < count__19464_19468) {
      var lang_key_19470 = cljs.core._nth.call(null, chunk__19463_19467, i__19465_19469);
      progl.core.activate_language_BANG_.call(null, lang_key_19470);
      var G__19471 = seq__19462_19466;
      var G__19472 = chunk__19463_19467;
      var G__19473 = count__19464_19468;
      var G__19474 = i__19465_19469 + 1;
      seq__19462_19466 = G__19471;
      chunk__19463_19467 = G__19472;
      count__19464_19468 = G__19473;
      i__19465_19469 = G__19474;
      continue;
    } else {
      var temp__4092__auto___19475 = cljs.core.seq.call(null, seq__19462_19466);
      if (temp__4092__auto___19475) {
        var seq__19462_19476__$1 = temp__4092__auto___19475;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19462_19476__$1)) {
          var c__4191__auto___19477 = cljs.core.chunk_first.call(null, seq__19462_19476__$1);
          var G__19478 = cljs.core.chunk_rest.call(null, seq__19462_19476__$1);
          var G__19479 = c__4191__auto___19477;
          var G__19480 = cljs.core.count.call(null, c__4191__auto___19477);
          var G__19481 = 0;
          seq__19462_19466 = G__19478;
          chunk__19463_19467 = G__19479;
          count__19464_19468 = G__19480;
          i__19465_19469 = G__19481;
          continue;
        } else {
          var lang_key_19482 = cljs.core.first.call(null, seq__19462_19476__$1);
          progl.core.activate_language_BANG_.call(null, lang_key_19482);
          var G__19483 = cljs.core.next.call(null, seq__19462_19476__$1);
          var G__19484 = null;
          var G__19485 = 0;
          var G__19486 = 0;
          seq__19462_19466 = G__19483;
          chunk__19463_19467 = G__19484;
          count__19464_19468 = G__19485;
          i__19465_19469 = G__19486;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return c2.dom.text.call(null, c2.dom.select.call(null, "#matches"), progl.core.matches_text.call(null, cljs.core.count.call(null, filtered_lang_keys)));
};
progl.core.on_search_input = function on_search_input(event) {
  return progl.core.handle_search_input.call(null, event.target.value);
};
progl.core.on_node_input = function on_node_input(node, f) {
  return node.oninput = f;
};
progl.core.setup_search_handlers_BANG_ = function setup_search_handlers_BANG_() {
  return progl.core.on_node_input.call(null, c2.dom.select.call(null, "#search"), progl.core.on_search_input);
};
progl.core.on_window_load = function on_window_load(f) {
  return window.onload = f;
};
progl.core.make_language_list_item = function make_language_list_item(p__19487) {
  var vec__19489 = p__19487;
  var langk = cljs.core.nth.call(null, vec__19489, 0, null);
  var langv = cljs.core.nth.call(null, vec__19489, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.name.call(null, langk)], null), (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(langv)], null);
};
progl.core.on_lang_list_item_click = function on_lang_list_item_click(p__19490, node, event) {
  var vec__19493 = p__19490;
  var langk = cljs.core.nth.call(null, vec__19493, 0, null);
  var map__19494 = cljs.core.nth.call(null, vec__19493, 1, null);
  var map__19494__$1 = cljs.core.seq_QMARK_.call(null, map__19494) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19494) : map__19494;
  var lang_name = cljs.core.get.call(null, map__19494__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
  return progl.core.toggle_class_BANG_.call(null, event.target, new cljs.core.Keyword(null, "active", "active", 3885920888));
};
progl.core.make_language_list = function make_language_list(langs) {
  var co__4427__auto___19495 = function() {
    var co__4372__auto__ = new reflex.core.ComputedObservable(null, true, function() {
      return c2.core.unify.call(null, cljs.core.deref.call(null, langs), progl.core.make_language_list_item);
    }, cljs.core.gensym.call(null, "computed-observable"), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
    cljs.core.deref.call(null, co__4372__auto__);
    return co__4372__auto__;
  }();
  var $el__4428__auto___19496 = c2.dom.__GT_dom.call(null, "#lang-list");
  singult.core.merge_BANG_.call(null, $el__4428__auto___19496, cljs.core.deref.call(null, co__4427__auto___19495));
  cljs.core.add_watch.call(null, co__4427__auto___19495, new cljs.core.Keyword(null, "update-dom", "update-dom", 716806576), function() {
    return singult.core.merge_BANG_.call(null, $el__4428__auto___19496, cljs.core.deref.call(null, co__4427__auto___19495));
  });
  return c2.event.on.call(null, "#lang-list", new cljs.core.Keyword(null, "click", "click", 1108654330), progl.core.on_lang_list_item_click);
};
progl.core.on_window_load_handler_BANG_ = function on_window_load_handler_BANG_() {
  progl.core.make_graph_BANG_.call(null, progl.core.shown_languages);
  progl.core.make_language_list.call(null, progl.core.shown_list_languages);
  progl.core.setup_search_handlers_BANG_.call(null);
  return new svgpan.SvgPan("viewport", c2.dom.select.call(null, "#info-graph"));
};
progl.core.on_window_load.call(null, progl.core.on_window_load_handler_BANG_);
